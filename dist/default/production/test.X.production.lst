

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Nov 09 15:27:10 2022

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,delta=2
    66                           	psect	text46,local,class=CODE,merge=1,delta=2
    67                           	dabs	1,0x7E,2
    68  0000                     
    69                           ; Version 2.05
    70                           ; Generated 20/12/2018 GMT
    71                           ; 
    72                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC16F1619 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     	;# 
   104  0001                     	;# 
   105  0002                     	;# 
   106  0003                     	;# 
   107  0004                     	;# 
   108  0005                     	;# 
   109  0006                     	;# 
   110  0007                     	;# 
   111  0008                     	;# 
   112  0009                     	;# 
   113  000A                     	;# 
   114  000B                     	;# 
   115  000C                     	;# 
   116  000D                     	;# 
   117  000E                     	;# 
   118  0010                     	;# 
   119  0011                     	;# 
   120  0012                     	;# 
   121  0013                     	;# 
   122  0014                     	;# 
   123  0015                     	;# 
   124  0016                     	;# 
   125  0016                     	;# 
   126  0017                     	;# 
   127  0018                     	;# 
   128  0019                     	;# 
   129  001A                     	;# 
   130  001A                     	;# 
   131  001B                     	;# 
   132  001B                     	;# 
   133  001C                     	;# 
   134  001D                     	;# 
   135  001E                     	;# 
   136  001F                     	;# 
   137  008C                     	;# 
   138  008D                     	;# 
   139  008E                     	;# 
   140  0090                     	;# 
   141  0091                     	;# 
   142  0092                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0095                     	;# 
   146  0096                     	;# 
   147  0098                     	;# 
   148  0099                     	;# 
   149  009A                     	;# 
   150  009B                     	;# 
   151  009B                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  010C                     	;# 
   157  010D                     	;# 
   158  010E                     	;# 
   159  0111                     	;# 
   160  0112                     	;# 
   161  0113                     	;# 
   162  0114                     	;# 
   163  0115                     	;# 
   164  0116                     	;# 
   165  0117                     	;# 
   166  0118                     	;# 
   167  0119                     	;# 
   168  011C                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  018E                     	;# 
   172  0191                     	;# 
   173  0191                     	;# 
   174  0192                     	;# 
   175  0193                     	;# 
   176  0193                     	;# 
   177  0194                     	;# 
   178  0195                     	;# 
   179  0196                     	;# 
   180  0197                     	;# 
   181  0199                     	;# 
   182  0199                     	;# 
   183  0199                     	;# 
   184  019A                     	;# 
   185  019A                     	;# 
   186  019A                     	;# 
   187  019B                     	;# 
   188  019B                     	;# 
   189  019B                     	;# 
   190  019B                     	;# 
   191  019B                     	;# 
   192  019C                     	;# 
   193  019C                     	;# 
   194  019C                     	;# 
   195  019D                     	;# 
   196  019D                     	;# 
   197  019D                     	;# 
   198  019E                     	;# 
   199  019E                     	;# 
   200  019E                     	;# 
   201  019F                     	;# 
   202  019F                     	;# 
   203  019F                     	;# 
   204  019F                     	;# 
   205  019F                     	;# 
   206  020C                     	;# 
   207  020D                     	;# 
   208  020E                     	;# 
   209  0211                     	;# 
   210  0211                     	;# 
   211  0212                     	;# 
   212  0212                     	;# 
   213  0213                     	;# 
   214  0213                     	;# 
   215  0214                     	;# 
   216  0214                     	;# 
   217  0215                     	;# 
   218  0215                     	;# 
   219  0215                     	;# 
   220  0215                     	;# 
   221  0216                     	;# 
   222  0216                     	;# 
   223  0217                     	;# 
   224  0217                     	;# 
   225  028C                     	;# 
   226  028D                     	;# 
   227  028E                     	;# 
   228  0291                     	;# 
   229  0291                     	;# 
   230  0292                     	;# 
   231  0293                     	;# 
   232  0294                     	;# 
   233  0298                     	;# 
   234  0298                     	;# 
   235  0299                     	;# 
   236  029A                     	;# 
   237  029B                     	;# 
   238  029E                     	;# 
   239  030C                     	;# 
   240  030D                     	;# 
   241  030E                     	;# 
   242  038C                     	;# 
   243  038D                     	;# 
   244  038E                     	;# 
   245  0391                     	;# 
   246  0392                     	;# 
   247  0393                     	;# 
   248  0394                     	;# 
   249  0395                     	;# 
   250  0396                     	;# 
   251  0397                     	;# 
   252  0398                     	;# 
   253  0399                     	;# 
   254  040E                     	;# 
   255  0413                     	;# 
   256  0413                     	;# 
   257  0414                     	;# 
   258  0414                     	;# 
   259  0415                     	;# 
   260  0416                     	;# 
   261  0417                     	;# 
   262  0418                     	;# 
   263  041A                     	;# 
   264  041A                     	;# 
   265  041B                     	;# 
   266  041B                     	;# 
   267  041C                     	;# 
   268  041D                     	;# 
   269  041E                     	;# 
   270  041F                     	;# 
   271  0493                     	;# 
   272  0494                     	;# 
   273  0495                     	;# 
   274  0496                     	;# 
   275  049A                     	;# 
   276  049B                     	;# 
   277  049C                     	;# 
   278  049D                     	;# 
   279  058C                     	;# 
   280  058C                     	;# 
   281  058D                     	;# 
   282  058E                     	;# 
   283  058E                     	;# 
   284  058F                     	;# 
   285  0590                     	;# 
   286  0590                     	;# 
   287  0591                     	;# 
   288  0592                     	;# 
   289  0592                     	;# 
   290  0593                     	;# 
   291  0594                     	;# 
   292  0594                     	;# 
   293  0595                     	;# 
   294  0596                     	;# 
   295  0596                     	;# 
   296  0597                     	;# 
   297  0598                     	;# 
   298  0599                     	;# 
   299  059A                     	;# 
   300  059B                     	;# 
   301  059B                     	;# 
   302  059C                     	;# 
   303  059D                     	;# 
   304  060C                     	;# 
   305  060C                     	;# 
   306  060D                     	;# 
   307  060E                     	;# 
   308  060F                     	;# 
   309  060F                     	;# 
   310  0610                     	;# 
   311  0611                     	;# 
   312  0612                     	;# 
   313  0613                     	;# 
   314  0614                     	;# 
   315  0617                     	;# 
   316  0617                     	;# 
   317  0618                     	;# 
   318  0619                     	;# 
   319  061A                     	;# 
   320  061A                     	;# 
   321  061B                     	;# 
   322  061C                     	;# 
   323  0691                     	;# 
   324  0692                     	;# 
   325  0693                     	;# 
   326  0694                     	;# 
   327  0695                     	;# 
   328  0696                     	;# 
   329  0697                     	;# 
   330  0699                     	;# 
   331  069A                     	;# 
   332  0711                     	;# 
   333  0712                     	;# 
   334  0713                     	;# 
   335  0714                     	;# 
   336  0715                     	;# 
   337  0718                     	;# 
   338  0718                     	;# 
   339  0719                     	;# 
   340  071A                     	;# 
   341  071A                     	;# 
   342  071B                     	;# 
   343  071C                     	;# 
   344  071D                     	;# 
   345  0791                     	;# 
   346  0791                     	;# 
   347  0792                     	;# 
   348  0793                     	;# 
   349  0793                     	;# 
   350  0794                     	;# 
   351  0795                     	;# 
   352  0795                     	;# 
   353  0796                     	;# 
   354  0797                     	;# 
   355  0797                     	;# 
   356  0798                     	;# 
   357  0799                     	;# 
   358  079A                     	;# 
   359  080C                     	;# 
   360  080C                     	;# 
   361  080D                     	;# 
   362  080E                     	;# 
   363  080E                     	;# 
   364  080F                     	;# 
   365  0810                     	;# 
   366  0810                     	;# 
   367  0811                     	;# 
   368  0812                     	;# 
   369  0812                     	;# 
   370  0813                     	;# 
   371  0814                     	;# 
   372  0815                     	;# 
   373  0816                     	;# 
   374  0817                     	;# 
   375  0818                     	;# 
   376  0819                     	;# 
   377  081A                     	;# 
   378  081A                     	;# 
   379  081B                     	;# 
   380  081C                     	;# 
   381  081C                     	;# 
   382  081D                     	;# 
   383  088C                     	;# 
   384  088D                     	;# 
   385  088E                     	;# 
   386  088F                     	;# 
   387  088F                     	;# 
   388  0890                     	;# 
   389  0891                     	;# 
   390  0892                     	;# 
   391  0893                     	;# 
   392  0893                     	;# 
   393  0894                     	;# 
   394  0895                     	;# 
   395  0896                     	;# 
   396  0897                     	;# 
   397  0897                     	;# 
   398  0898                     	;# 
   399  0899                     	;# 
   400  0D8C                     	;# 
   401  0D8C                     	;# 
   402  0D8D                     	;# 
   403  0D8E                     	;# 
   404  0D8F                     	;# 
   405  0D8F                     	;# 
   406  0D90                     	;# 
   407  0D91                     	;# 
   408  0D92                     	;# 
   409  0D92                     	;# 
   410  0D93                     	;# 
   411  0D94                     	;# 
   412  0D95                     	;# 
   413  0D95                     	;# 
   414  0D96                     	;# 
   415  0D97                     	;# 
   416  0D98                     	;# 
   417  0D99                     	;# 
   418  0D9A                     	;# 
   419  0D9B                     	;# 
   420  0D9C                     	;# 
   421  0D9D                     	;# 
   422  0D9E                     	;# 
   423  0D9E                     	;# 
   424  0D9F                     	;# 
   425  0DA0                     	;# 
   426  0DA1                     	;# 
   427  0DA1                     	;# 
   428  0DA2                     	;# 
   429  0DA3                     	;# 
   430  0DA4                     	;# 
   431  0DA4                     	;# 
   432  0DA5                     	;# 
   433  0DA6                     	;# 
   434  0DA7                     	;# 
   435  0DA7                     	;# 
   436  0DA8                     	;# 
   437  0DA9                     	;# 
   438  0DAA                     	;# 
   439  0DAB                     	;# 
   440  0DAC                     	;# 
   441  0DAD                     	;# 
   442  0DAE                     	;# 
   443  0DAF                     	;# 
   444  0E0F                     	;# 
   445  0E10                     	;# 
   446  0E11                     	;# 
   447  0E12                     	;# 
   448  0E13                     	;# 
   449  0E14                     	;# 
   450  0E15                     	;# 
   451  0E16                     	;# 
   452  0E17                     	;# 
   453  0E18                     	;# 
   454  0E19                     	;# 
   455  0E1A                     	;# 
   456  0E1B                     	;# 
   457  0E1C                     	;# 
   458  0E1D                     	;# 
   459  0E1E                     	;# 
   460  0E1F                     	;# 
   461  0E20                     	;# 
   462  0E21                     	;# 
   463  0E22                     	;# 
   464  0E23                     	;# 
   465  0E24                     	;# 
   466  0E25                     	;# 
   467  0E26                     	;# 
   468  0E27                     	;# 
   469  0E28                     	;# 
   470  0E29                     	;# 
   471  0E2A                     	;# 
   472  0E2B                     	;# 
   473  0E2C                     	;# 
   474  0E2D                     	;# 
   475  0E2E                     	;# 
   476  0E90                     	;# 
   477  0E91                     	;# 
   478  0E92                     	;# 
   479  0E94                     	;# 
   480  0E95                     	;# 
   481  0E9C                     	;# 
   482  0E9D                     	;# 
   483  0E9E                     	;# 
   484  0E9F                     	;# 
   485  0EA0                     	;# 
   486  0EA1                     	;# 
   487  0EA2                     	;# 
   488  0EA3                     	;# 
   489  0EA4                     	;# 
   490  0EA5                     	;# 
   491  0EA6                     	;# 
   492  0EA7                     	;# 
   493  0F0F                     	;# 
   494  0F10                     	;# 
   495  0F11                     	;# 
   496  0F12                     	;# 
   497  0F13                     	;# 
   498  0F14                     	;# 
   499  0F15                     	;# 
   500  0F16                     	;# 
   501  0F17                     	;# 
   502  0F18                     	;# 
   503  0F19                     	;# 
   504  0F1A                     	;# 
   505  0F1B                     	;# 
   506  0F1C                     	;# 
   507  0F1D                     	;# 
   508  0F1E                     	;# 
   509  0F1F                     	;# 
   510  0F20                     	;# 
   511  0F21                     	;# 
   512  0F22                     	;# 
   513  0F23                     	;# 
   514  0F24                     	;# 
   515  0F25                     	;# 
   516  0F26                     	;# 
   517  0F27                     	;# 
   518  0F28                     	;# 
   519  0F29                     	;# 
   520  0F2A                     	;# 
   521  0F2B                     	;# 
   522  0F2C                     	;# 
   523  0F2D                     	;# 
   524  0F2E                     	;# 
   525  0F2F                     	;# 
   526  0F30                     	;# 
   527  0F31                     	;# 
   528  0F32                     	;# 
   529  0F33                     	;# 
   530  0F34                     	;# 
   531  0F35                     	;# 
   532  0F36                     	;# 
   533  0F37                     	;# 
   534  0FE4                     	;# 
   535  0FE5                     	;# 
   536  0FE6                     	;# 
   537  0FE7                     	;# 
   538  0FE8                     	;# 
   539  0FE9                     	;# 
   540  0FEA                     	;# 
   541  0FEB                     	;# 
   542  0FED                     	;# 
   543  0FEE                     	;# 
   544  0FEF                     	;# 
   545  0000                     	;# 
   546  0001                     	;# 
   547  0002                     	;# 
   548  0003                     	;# 
   549  0004                     	;# 
   550  0005                     	;# 
   551  0006                     	;# 
   552  0007                     	;# 
   553  0008                     	;# 
   554  0009                     	;# 
   555  000A                     	;# 
   556  000B                     	;# 
   557  000C                     	;# 
   558  000D                     	;# 
   559  000E                     	;# 
   560  0010                     	;# 
   561  0011                     	;# 
   562  0012                     	;# 
   563  0013                     	;# 
   564  0014                     	;# 
   565  0015                     	;# 
   566  0016                     	;# 
   567  0016                     	;# 
   568  0017                     	;# 
   569  0018                     	;# 
   570  0019                     	;# 
   571  001A                     	;# 
   572  001A                     	;# 
   573  001B                     	;# 
   574  001B                     	;# 
   575  001C                     	;# 
   576  001D                     	;# 
   577  001E                     	;# 
   578  001F                     	;# 
   579  008C                     	;# 
   580  008D                     	;# 
   581  008E                     	;# 
   582  0090                     	;# 
   583  0091                     	;# 
   584  0092                     	;# 
   585  0093                     	;# 
   586  0094                     	;# 
   587  0095                     	;# 
   588  0096                     	;# 
   589  0098                     	;# 
   590  0099                     	;# 
   591  009A                     	;# 
   592  009B                     	;# 
   593  009B                     	;# 
   594  009C                     	;# 
   595  009D                     	;# 
   596  009E                     	;# 
   597  009F                     	;# 
   598  010C                     	;# 
   599  010D                     	;# 
   600  010E                     	;# 
   601  0111                     	;# 
   602  0112                     	;# 
   603  0113                     	;# 
   604  0114                     	;# 
   605  0115                     	;# 
   606  0116                     	;# 
   607  0117                     	;# 
   608  0118                     	;# 
   609  0119                     	;# 
   610  011C                     	;# 
   611  018C                     	;# 
   612  018D                     	;# 
   613  018E                     	;# 
   614  0191                     	;# 
   615  0191                     	;# 
   616  0192                     	;# 
   617  0193                     	;# 
   618  0193                     	;# 
   619  0194                     	;# 
   620  0195                     	;# 
   621  0196                     	;# 
   622  0197                     	;# 
   623  0199                     	;# 
   624  0199                     	;# 
   625  0199                     	;# 
   626  019A                     	;# 
   627  019A                     	;# 
   628  019A                     	;# 
   629  019B                     	;# 
   630  019B                     	;# 
   631  019B                     	;# 
   632  019B                     	;# 
   633  019B                     	;# 
   634  019C                     	;# 
   635  019C                     	;# 
   636  019C                     	;# 
   637  019D                     	;# 
   638  019D                     	;# 
   639  019D                     	;# 
   640  019E                     	;# 
   641  019E                     	;# 
   642  019E                     	;# 
   643  019F                     	;# 
   644  019F                     	;# 
   645  019F                     	;# 
   646  019F                     	;# 
   647  019F                     	;# 
   648  020C                     	;# 
   649  020D                     	;# 
   650  020E                     	;# 
   651  0211                     	;# 
   652  0211                     	;# 
   653  0212                     	;# 
   654  0212                     	;# 
   655  0213                     	;# 
   656  0213                     	;# 
   657  0214                     	;# 
   658  0214                     	;# 
   659  0215                     	;# 
   660  0215                     	;# 
   661  0215                     	;# 
   662  0215                     	;# 
   663  0216                     	;# 
   664  0216                     	;# 
   665  0217                     	;# 
   666  0217                     	;# 
   667  028C                     	;# 
   668  028D                     	;# 
   669  028E                     	;# 
   670  0291                     	;# 
   671  0291                     	;# 
   672  0292                     	;# 
   673  0293                     	;# 
   674  0294                     	;# 
   675  0298                     	;# 
   676  0298                     	;# 
   677  0299                     	;# 
   678  029A                     	;# 
   679  029B                     	;# 
   680  029E                     	;# 
   681  030C                     	;# 
   682  030D                     	;# 
   683  030E                     	;# 
   684  038C                     	;# 
   685  038D                     	;# 
   686  038E                     	;# 
   687  0391                     	;# 
   688  0392                     	;# 
   689  0393                     	;# 
   690  0394                     	;# 
   691  0395                     	;# 
   692  0396                     	;# 
   693  0397                     	;# 
   694  0398                     	;# 
   695  0399                     	;# 
   696  040E                     	;# 
   697  0413                     	;# 
   698  0413                     	;# 
   699  0414                     	;# 
   700  0414                     	;# 
   701  0415                     	;# 
   702  0416                     	;# 
   703  0417                     	;# 
   704  0418                     	;# 
   705  041A                     	;# 
   706  041A                     	;# 
   707  041B                     	;# 
   708  041B                     	;# 
   709  041C                     	;# 
   710  041D                     	;# 
   711  041E                     	;# 
   712  041F                     	;# 
   713  0493                     	;# 
   714  0494                     	;# 
   715  0495                     	;# 
   716  0496                     	;# 
   717  049A                     	;# 
   718  049B                     	;# 
   719  049C                     	;# 
   720  049D                     	;# 
   721  058C                     	;# 
   722  058C                     	;# 
   723  058D                     	;# 
   724  058E                     	;# 
   725  058E                     	;# 
   726  058F                     	;# 
   727  0590                     	;# 
   728  0590                     	;# 
   729  0591                     	;# 
   730  0592                     	;# 
   731  0592                     	;# 
   732  0593                     	;# 
   733  0594                     	;# 
   734  0594                     	;# 
   735  0595                     	;# 
   736  0596                     	;# 
   737  0596                     	;# 
   738  0597                     	;# 
   739  0598                     	;# 
   740  0599                     	;# 
   741  059A                     	;# 
   742  059B                     	;# 
   743  059B                     	;# 
   744  059C                     	;# 
   745  059D                     	;# 
   746  060C                     	;# 
   747  060C                     	;# 
   748  060D                     	;# 
   749  060E                     	;# 
   750  060F                     	;# 
   751  060F                     	;# 
   752  0610                     	;# 
   753  0611                     	;# 
   754  0612                     	;# 
   755  0613                     	;# 
   756  0614                     	;# 
   757  0617                     	;# 
   758  0617                     	;# 
   759  0618                     	;# 
   760  0619                     	;# 
   761  061A                     	;# 
   762  061A                     	;# 
   763  061B                     	;# 
   764  061C                     	;# 
   765  0691                     	;# 
   766  0692                     	;# 
   767  0693                     	;# 
   768  0694                     	;# 
   769  0695                     	;# 
   770  0696                     	;# 
   771  0697                     	;# 
   772  0699                     	;# 
   773  069A                     	;# 
   774  0711                     	;# 
   775  0712                     	;# 
   776  0713                     	;# 
   777  0714                     	;# 
   778  0715                     	;# 
   779  0718                     	;# 
   780  0718                     	;# 
   781  0719                     	;# 
   782  071A                     	;# 
   783  071A                     	;# 
   784  071B                     	;# 
   785  071C                     	;# 
   786  071D                     	;# 
   787  0791                     	;# 
   788  0791                     	;# 
   789  0792                     	;# 
   790  0793                     	;# 
   791  0793                     	;# 
   792  0794                     	;# 
   793  0795                     	;# 
   794  0795                     	;# 
   795  0796                     	;# 
   796  0797                     	;# 
   797  0797                     	;# 
   798  0798                     	;# 
   799  0799                     	;# 
   800  079A                     	;# 
   801  080C                     	;# 
   802  080C                     	;# 
   803  080D                     	;# 
   804  080E                     	;# 
   805  080E                     	;# 
   806  080F                     	;# 
   807  0810                     	;# 
   808  0810                     	;# 
   809  0811                     	;# 
   810  0812                     	;# 
   811  0812                     	;# 
   812  0813                     	;# 
   813  0814                     	;# 
   814  0815                     	;# 
   815  0816                     	;# 
   816  0817                     	;# 
   817  0818                     	;# 
   818  0819                     	;# 
   819  081A                     	;# 
   820  081A                     	;# 
   821  081B                     	;# 
   822  081C                     	;# 
   823  081C                     	;# 
   824  081D                     	;# 
   825  088C                     	;# 
   826  088D                     	;# 
   827  088E                     	;# 
   828  088F                     	;# 
   829  088F                     	;# 
   830  0890                     	;# 
   831  0891                     	;# 
   832  0892                     	;# 
   833  0893                     	;# 
   834  0893                     	;# 
   835  0894                     	;# 
   836  0895                     	;# 
   837  0896                     	;# 
   838  0897                     	;# 
   839  0897                     	;# 
   840  0898                     	;# 
   841  0899                     	;# 
   842  0D8C                     	;# 
   843  0D8C                     	;# 
   844  0D8D                     	;# 
   845  0D8E                     	;# 
   846  0D8F                     	;# 
   847  0D8F                     	;# 
   848  0D90                     	;# 
   849  0D91                     	;# 
   850  0D92                     	;# 
   851  0D92                     	;# 
   852  0D93                     	;# 
   853  0D94                     	;# 
   854  0D95                     	;# 
   855  0D95                     	;# 
   856  0D96                     	;# 
   857  0D97                     	;# 
   858  0D98                     	;# 
   859  0D99                     	;# 
   860  0D9A                     	;# 
   861  0D9B                     	;# 
   862  0D9C                     	;# 
   863  0D9D                     	;# 
   864  0D9E                     	;# 
   865  0D9E                     	;# 
   866  0D9F                     	;# 
   867  0DA0                     	;# 
   868  0DA1                     	;# 
   869  0DA1                     	;# 
   870  0DA2                     	;# 
   871  0DA3                     	;# 
   872  0DA4                     	;# 
   873  0DA4                     	;# 
   874  0DA5                     	;# 
   875  0DA6                     	;# 
   876  0DA7                     	;# 
   877  0DA7                     	;# 
   878  0DA8                     	;# 
   879  0DA9                     	;# 
   880  0DAA                     	;# 
   881  0DAB                     	;# 
   882  0DAC                     	;# 
   883  0DAD                     	;# 
   884  0DAE                     	;# 
   885  0DAF                     	;# 
   886  0E0F                     	;# 
   887  0E10                     	;# 
   888  0E11                     	;# 
   889  0E12                     	;# 
   890  0E13                     	;# 
   891  0E14                     	;# 
   892  0E15                     	;# 
   893  0E16                     	;# 
   894  0E17                     	;# 
   895  0E18                     	;# 
   896  0E19                     	;# 
   897  0E1A                     	;# 
   898  0E1B                     	;# 
   899  0E1C                     	;# 
   900  0E1D                     	;# 
   901  0E1E                     	;# 
   902  0E1F                     	;# 
   903  0E20                     	;# 
   904  0E21                     	;# 
   905  0E22                     	;# 
   906  0E23                     	;# 
   907  0E24                     	;# 
   908  0E25                     	;# 
   909  0E26                     	;# 
   910  0E27                     	;# 
   911  0E28                     	;# 
   912  0E29                     	;# 
   913  0E2A                     	;# 
   914  0E2B                     	;# 
   915  0E2C                     	;# 
   916  0E2D                     	;# 
   917  0E2E                     	;# 
   918  0E90                     	;# 
   919  0E91                     	;# 
   920  0E92                     	;# 
   921  0E94                     	;# 
   922  0E95                     	;# 
   923  0E9C                     	;# 
   924  0E9D                     	;# 
   925  0E9E                     	;# 
   926  0E9F                     	;# 
   927  0EA0                     	;# 
   928  0EA1                     	;# 
   929  0EA2                     	;# 
   930  0EA3                     	;# 
   931  0EA4                     	;# 
   932  0EA5                     	;# 
   933  0EA6                     	;# 
   934  0EA7                     	;# 
   935  0F0F                     	;# 
   936  0F10                     	;# 
   937  0F11                     	;# 
   938  0F12                     	;# 
   939  0F13                     	;# 
   940  0F14                     	;# 
   941  0F15                     	;# 
   942  0F16                     	;# 
   943  0F17                     	;# 
   944  0F18                     	;# 
   945  0F19                     	;# 
   946  0F1A                     	;# 
   947  0F1B                     	;# 
   948  0F1C                     	;# 
   949  0F1D                     	;# 
   950  0F1E                     	;# 
   951  0F1F                     	;# 
   952  0F20                     	;# 
   953  0F21                     	;# 
   954  0F22                     	;# 
   955  0F23                     	;# 
   956  0F24                     	;# 
   957  0F25                     	;# 
   958  0F26                     	;# 
   959  0F27                     	;# 
   960  0F28                     	;# 
   961  0F29                     	;# 
   962  0F2A                     	;# 
   963  0F2B                     	;# 
   964  0F2C                     	;# 
   965  0F2D                     	;# 
   966  0F2E                     	;# 
   967  0F2F                     	;# 
   968  0F30                     	;# 
   969  0F31                     	;# 
   970  0F32                     	;# 
   971  0F33                     	;# 
   972  0F34                     	;# 
   973  0F35                     	;# 
   974  0F36                     	;# 
   975  0F37                     	;# 
   976  0FE4                     	;# 
   977  0FE5                     	;# 
   978  0FE6                     	;# 
   979  0FE7                     	;# 
   980  0FE8                     	;# 
   981  0FE9                     	;# 
   982  0FEA                     	;# 
   983  0FEB                     	;# 
   984  0FED                     	;# 
   985  0FEE                     	;# 
   986  0FEF                     	;# 
   987  0000                     	;# 
   988  0001                     	;# 
   989  0002                     	;# 
   990  0003                     	;# 
   991  0004                     	;# 
   992  0005                     	;# 
   993  0006                     	;# 
   994  0007                     	;# 
   995  0008                     	;# 
   996  0009                     	;# 
   997  000A                     	;# 
   998  000B                     	;# 
   999  000C                     	;# 
  1000  000D                     	;# 
  1001  000E                     	;# 
  1002  0010                     	;# 
  1003  0011                     	;# 
  1004  0012                     	;# 
  1005  0013                     	;# 
  1006  0014                     	;# 
  1007  0015                     	;# 
  1008  0016                     	;# 
  1009  0016                     	;# 
  1010  0017                     	;# 
  1011  0018                     	;# 
  1012  0019                     	;# 
  1013  001A                     	;# 
  1014  001A                     	;# 
  1015  001B                     	;# 
  1016  001B                     	;# 
  1017  001C                     	;# 
  1018  001D                     	;# 
  1019  001E                     	;# 
  1020  001F                     	;# 
  1021  008C                     	;# 
  1022  008D                     	;# 
  1023  008E                     	;# 
  1024  0090                     	;# 
  1025  0091                     	;# 
  1026  0092                     	;# 
  1027  0093                     	;# 
  1028  0094                     	;# 
  1029  0095                     	;# 
  1030  0096                     	;# 
  1031  0098                     	;# 
  1032  0099                     	;# 
  1033  009A                     	;# 
  1034  009B                     	;# 
  1035  009B                     	;# 
  1036  009C                     	;# 
  1037  009D                     	;# 
  1038  009E                     	;# 
  1039  009F                     	;# 
  1040  010C                     	;# 
  1041  010D                     	;# 
  1042  010E                     	;# 
  1043  0111                     	;# 
  1044  0112                     	;# 
  1045  0113                     	;# 
  1046  0114                     	;# 
  1047  0115                     	;# 
  1048  0116                     	;# 
  1049  0117                     	;# 
  1050  0118                     	;# 
  1051  0119                     	;# 
  1052  011C                     	;# 
  1053  018C                     	;# 
  1054  018D                     	;# 
  1055  018E                     	;# 
  1056  0191                     	;# 
  1057  0191                     	;# 
  1058  0192                     	;# 
  1059  0193                     	;# 
  1060  0193                     	;# 
  1061  0194                     	;# 
  1062  0195                     	;# 
  1063  0196                     	;# 
  1064  0197                     	;# 
  1065  0199                     	;# 
  1066  0199                     	;# 
  1067  0199                     	;# 
  1068  019A                     	;# 
  1069  019A                     	;# 
  1070  019A                     	;# 
  1071  019B                     	;# 
  1072  019B                     	;# 
  1073  019B                     	;# 
  1074  019B                     	;# 
  1075  019B                     	;# 
  1076  019C                     	;# 
  1077  019C                     	;# 
  1078  019C                     	;# 
  1079  019D                     	;# 
  1080  019D                     	;# 
  1081  019D                     	;# 
  1082  019E                     	;# 
  1083  019E                     	;# 
  1084  019E                     	;# 
  1085  019F                     	;# 
  1086  019F                     	;# 
  1087  019F                     	;# 
  1088  019F                     	;# 
  1089  019F                     	;# 
  1090  020C                     	;# 
  1091  020D                     	;# 
  1092  020E                     	;# 
  1093  0211                     	;# 
  1094  0211                     	;# 
  1095  0212                     	;# 
  1096  0212                     	;# 
  1097  0213                     	;# 
  1098  0213                     	;# 
  1099  0214                     	;# 
  1100  0214                     	;# 
  1101  0215                     	;# 
  1102  0215                     	;# 
  1103  0215                     	;# 
  1104  0215                     	;# 
  1105  0216                     	;# 
  1106  0216                     	;# 
  1107  0217                     	;# 
  1108  0217                     	;# 
  1109  028C                     	;# 
  1110  028D                     	;# 
  1111  028E                     	;# 
  1112  0291                     	;# 
  1113  0291                     	;# 
  1114  0292                     	;# 
  1115  0293                     	;# 
  1116  0294                     	;# 
  1117  0298                     	;# 
  1118  0298                     	;# 
  1119  0299                     	;# 
  1120  029A                     	;# 
  1121  029B                     	;# 
  1122  029E                     	;# 
  1123  030C                     	;# 
  1124  030D                     	;# 
  1125  030E                     	;# 
  1126  038C                     	;# 
  1127  038D                     	;# 
  1128  038E                     	;# 
  1129  0391                     	;# 
  1130  0392                     	;# 
  1131  0393                     	;# 
  1132  0394                     	;# 
  1133  0395                     	;# 
  1134  0396                     	;# 
  1135  0397                     	;# 
  1136  0398                     	;# 
  1137  0399                     	;# 
  1138  040E                     	;# 
  1139  0413                     	;# 
  1140  0413                     	;# 
  1141  0414                     	;# 
  1142  0414                     	;# 
  1143  0415                     	;# 
  1144  0416                     	;# 
  1145  0417                     	;# 
  1146  0418                     	;# 
  1147  041A                     	;# 
  1148  041A                     	;# 
  1149  041B                     	;# 
  1150  041B                     	;# 
  1151  041C                     	;# 
  1152  041D                     	;# 
  1153  041E                     	;# 
  1154  041F                     	;# 
  1155  0493                     	;# 
  1156  0494                     	;# 
  1157  0495                     	;# 
  1158  0496                     	;# 
  1159  049A                     	;# 
  1160  049B                     	;# 
  1161  049C                     	;# 
  1162  049D                     	;# 
  1163  058C                     	;# 
  1164  058C                     	;# 
  1165  058D                     	;# 
  1166  058E                     	;# 
  1167  058E                     	;# 
  1168  058F                     	;# 
  1169  0590                     	;# 
  1170  0590                     	;# 
  1171  0591                     	;# 
  1172  0592                     	;# 
  1173  0592                     	;# 
  1174  0593                     	;# 
  1175  0594                     	;# 
  1176  0594                     	;# 
  1177  0595                     	;# 
  1178  0596                     	;# 
  1179  0596                     	;# 
  1180  0597                     	;# 
  1181  0598                     	;# 
  1182  0599                     	;# 
  1183  059A                     	;# 
  1184  059B                     	;# 
  1185  059B                     	;# 
  1186  059C                     	;# 
  1187  059D                     	;# 
  1188  060C                     	;# 
  1189  060C                     	;# 
  1190  060D                     	;# 
  1191  060E                     	;# 
  1192  060F                     	;# 
  1193  060F                     	;# 
  1194  0610                     	;# 
  1195  0611                     	;# 
  1196  0612                     	;# 
  1197  0613                     	;# 
  1198  0614                     	;# 
  1199  0617                     	;# 
  1200  0617                     	;# 
  1201  0618                     	;# 
  1202  0619                     	;# 
  1203  061A                     	;# 
  1204  061A                     	;# 
  1205  061B                     	;# 
  1206  061C                     	;# 
  1207  0691                     	;# 
  1208  0692                     	;# 
  1209  0693                     	;# 
  1210  0694                     	;# 
  1211  0695                     	;# 
  1212  0696                     	;# 
  1213  0697                     	;# 
  1214  0699                     	;# 
  1215  069A                     	;# 
  1216  0711                     	;# 
  1217  0712                     	;# 
  1218  0713                     	;# 
  1219  0714                     	;# 
  1220  0715                     	;# 
  1221  0718                     	;# 
  1222  0718                     	;# 
  1223  0719                     	;# 
  1224  071A                     	;# 
  1225  071A                     	;# 
  1226  071B                     	;# 
  1227  071C                     	;# 
  1228  071D                     	;# 
  1229  0791                     	;# 
  1230  0791                     	;# 
  1231  0792                     	;# 
  1232  0793                     	;# 
  1233  0793                     	;# 
  1234  0794                     	;# 
  1235  0795                     	;# 
  1236  0795                     	;# 
  1237  0796                     	;# 
  1238  0797                     	;# 
  1239  0797                     	;# 
  1240  0798                     	;# 
  1241  0799                     	;# 
  1242  079A                     	;# 
  1243  080C                     	;# 
  1244  080C                     	;# 
  1245  080D                     	;# 
  1246  080E                     	;# 
  1247  080E                     	;# 
  1248  080F                     	;# 
  1249  0810                     	;# 
  1250  0810                     	;# 
  1251  0811                     	;# 
  1252  0812                     	;# 
  1253  0812                     	;# 
  1254  0813                     	;# 
  1255  0814                     	;# 
  1256  0815                     	;# 
  1257  0816                     	;# 
  1258  0817                     	;# 
  1259  0818                     	;# 
  1260  0819                     	;# 
  1261  081A                     	;# 
  1262  081A                     	;# 
  1263  081B                     	;# 
  1264  081C                     	;# 
  1265  081C                     	;# 
  1266  081D                     	;# 
  1267  088C                     	;# 
  1268  088D                     	;# 
  1269  088E                     	;# 
  1270  088F                     	;# 
  1271  088F                     	;# 
  1272  0890                     	;# 
  1273  0891                     	;# 
  1274  0892                     	;# 
  1275  0893                     	;# 
  1276  0893                     	;# 
  1277  0894                     	;# 
  1278  0895                     	;# 
  1279  0896                     	;# 
  1280  0897                     	;# 
  1281  0897                     	;# 
  1282  0898                     	;# 
  1283  0899                     	;# 
  1284  0D8C                     	;# 
  1285  0D8C                     	;# 
  1286  0D8D                     	;# 
  1287  0D8E                     	;# 
  1288  0D8F                     	;# 
  1289  0D8F                     	;# 
  1290  0D90                     	;# 
  1291  0D91                     	;# 
  1292  0D92                     	;# 
  1293  0D92                     	;# 
  1294  0D93                     	;# 
  1295  0D94                     	;# 
  1296  0D95                     	;# 
  1297  0D95                     	;# 
  1298  0D96                     	;# 
  1299  0D97                     	;# 
  1300  0D98                     	;# 
  1301  0D99                     	;# 
  1302  0D9A                     	;# 
  1303  0D9B                     	;# 
  1304  0D9C                     	;# 
  1305  0D9D                     	;# 
  1306  0D9E                     	;# 
  1307  0D9E                     	;# 
  1308  0D9F                     	;# 
  1309  0DA0                     	;# 
  1310  0DA1                     	;# 
  1311  0DA1                     	;# 
  1312  0DA2                     	;# 
  1313  0DA3                     	;# 
  1314  0DA4                     	;# 
  1315  0DA4                     	;# 
  1316  0DA5                     	;# 
  1317  0DA6                     	;# 
  1318  0DA7                     	;# 
  1319  0DA7                     	;# 
  1320  0DA8                     	;# 
  1321  0DA9                     	;# 
  1322  0DAA                     	;# 
  1323  0DAB                     	;# 
  1324  0DAC                     	;# 
  1325  0DAD                     	;# 
  1326  0DAE                     	;# 
  1327  0DAF                     	;# 
  1328  0E0F                     	;# 
  1329  0E10                     	;# 
  1330  0E11                     	;# 
  1331  0E12                     	;# 
  1332  0E13                     	;# 
  1333  0E14                     	;# 
  1334  0E15                     	;# 
  1335  0E16                     	;# 
  1336  0E17                     	;# 
  1337  0E18                     	;# 
  1338  0E19                     	;# 
  1339  0E1A                     	;# 
  1340  0E1B                     	;# 
  1341  0E1C                     	;# 
  1342  0E1D                     	;# 
  1343  0E1E                     	;# 
  1344  0E1F                     	;# 
  1345  0E20                     	;# 
  1346  0E21                     	;# 
  1347  0E22                     	;# 
  1348  0E23                     	;# 
  1349  0E24                     	;# 
  1350  0E25                     	;# 
  1351  0E26                     	;# 
  1352  0E27                     	;# 
  1353  0E28                     	;# 
  1354  0E29                     	;# 
  1355  0E2A                     	;# 
  1356  0E2B                     	;# 
  1357  0E2C                     	;# 
  1358  0E2D                     	;# 
  1359  0E2E                     	;# 
  1360  0E90                     	;# 
  1361  0E91                     	;# 
  1362  0E92                     	;# 
  1363  0E94                     	;# 
  1364  0E95                     	;# 
  1365  0E9C                     	;# 
  1366  0E9D                     	;# 
  1367  0E9E                     	;# 
  1368  0E9F                     	;# 
  1369  0EA0                     	;# 
  1370  0EA1                     	;# 
  1371  0EA2                     	;# 
  1372  0EA3                     	;# 
  1373  0EA4                     	;# 
  1374  0EA5                     	;# 
  1375  0EA6                     	;# 
  1376  0EA7                     	;# 
  1377  0F0F                     	;# 
  1378  0F10                     	;# 
  1379  0F11                     	;# 
  1380  0F12                     	;# 
  1381  0F13                     	;# 
  1382  0F14                     	;# 
  1383  0F15                     	;# 
  1384  0F16                     	;# 
  1385  0F17                     	;# 
  1386  0F18                     	;# 
  1387  0F19                     	;# 
  1388  0F1A                     	;# 
  1389  0F1B                     	;# 
  1390  0F1C                     	;# 
  1391  0F1D                     	;# 
  1392  0F1E                     	;# 
  1393  0F1F                     	;# 
  1394  0F20                     	;# 
  1395  0F21                     	;# 
  1396  0F22                     	;# 
  1397  0F23                     	;# 
  1398  0F24                     	;# 
  1399  0F25                     	;# 
  1400  0F26                     	;# 
  1401  0F27                     	;# 
  1402  0F28                     	;# 
  1403  0F29                     	;# 
  1404  0F2A                     	;# 
  1405  0F2B                     	;# 
  1406  0F2C                     	;# 
  1407  0F2D                     	;# 
  1408  0F2E                     	;# 
  1409  0F2F                     	;# 
  1410  0F30                     	;# 
  1411  0F31                     	;# 
  1412  0F32                     	;# 
  1413  0F33                     	;# 
  1414  0F34                     	;# 
  1415  0F35                     	;# 
  1416  0F36                     	;# 
  1417  0F37                     	;# 
  1418  0FE4                     	;# 
  1419  0FE5                     	;# 
  1420  0FE6                     	;# 
  1421  0FE7                     	;# 
  1422  0FE8                     	;# 
  1423  0FE9                     	;# 
  1424  0FEA                     	;# 
  1425  0FEB                     	;# 
  1426  0FED                     	;# 
  1427  0FEE                     	;# 
  1428  0FEF                     	;# 
  1429  0000                     	;# 
  1430  0001                     	;# 
  1431  0002                     	;# 
  1432  0003                     	;# 
  1433  0004                     	;# 
  1434  0005                     	;# 
  1435  0006                     	;# 
  1436  0007                     	;# 
  1437  0008                     	;# 
  1438  0009                     	;# 
  1439  000A                     	;# 
  1440  000B                     	;# 
  1441  000C                     	;# 
  1442  000D                     	;# 
  1443  000E                     	;# 
  1444  0010                     	;# 
  1445  0011                     	;# 
  1446  0012                     	;# 
  1447  0013                     	;# 
  1448  0014                     	;# 
  1449  0015                     	;# 
  1450  0016                     	;# 
  1451  0016                     	;# 
  1452  0017                     	;# 
  1453  0018                     	;# 
  1454  0019                     	;# 
  1455  001A                     	;# 
  1456  001A                     	;# 
  1457  001B                     	;# 
  1458  001B                     	;# 
  1459  001C                     	;# 
  1460  001D                     	;# 
  1461  001E                     	;# 
  1462  001F                     	;# 
  1463  008C                     	;# 
  1464  008D                     	;# 
  1465  008E                     	;# 
  1466  0090                     	;# 
  1467  0091                     	;# 
  1468  0092                     	;# 
  1469  0093                     	;# 
  1470  0094                     	;# 
  1471  0095                     	;# 
  1472  0096                     	;# 
  1473  0098                     	;# 
  1474  0099                     	;# 
  1475  009A                     	;# 
  1476  009B                     	;# 
  1477  009B                     	;# 
  1478  009C                     	;# 
  1479  009D                     	;# 
  1480  009E                     	;# 
  1481  009F                     	;# 
  1482  010C                     	;# 
  1483  010D                     	;# 
  1484  010E                     	;# 
  1485  0111                     	;# 
  1486  0112                     	;# 
  1487  0113                     	;# 
  1488  0114                     	;# 
  1489  0115                     	;# 
  1490  0116                     	;# 
  1491  0117                     	;# 
  1492  0118                     	;# 
  1493  0119                     	;# 
  1494  011C                     	;# 
  1495  018C                     	;# 
  1496  018D                     	;# 
  1497  018E                     	;# 
  1498  0191                     	;# 
  1499  0191                     	;# 
  1500  0192                     	;# 
  1501  0193                     	;# 
  1502  0193                     	;# 
  1503  0194                     	;# 
  1504  0195                     	;# 
  1505  0196                     	;# 
  1506  0197                     	;# 
  1507  0199                     	;# 
  1508  0199                     	;# 
  1509  0199                     	;# 
  1510  019A                     	;# 
  1511  019A                     	;# 
  1512  019A                     	;# 
  1513  019B                     	;# 
  1514  019B                     	;# 
  1515  019B                     	;# 
  1516  019B                     	;# 
  1517  019B                     	;# 
  1518  019C                     	;# 
  1519  019C                     	;# 
  1520  019C                     	;# 
  1521  019D                     	;# 
  1522  019D                     	;# 
  1523  019D                     	;# 
  1524  019E                     	;# 
  1525  019E                     	;# 
  1526  019E                     	;# 
  1527  019F                     	;# 
  1528  019F                     	;# 
  1529  019F                     	;# 
  1530  019F                     	;# 
  1531  019F                     	;# 
  1532  020C                     	;# 
  1533  020D                     	;# 
  1534  020E                     	;# 
  1535  0211                     	;# 
  1536  0211                     	;# 
  1537  0212                     	;# 
  1538  0212                     	;# 
  1539  0213                     	;# 
  1540  0213                     	;# 
  1541  0214                     	;# 
  1542  0214                     	;# 
  1543  0215                     	;# 
  1544  0215                     	;# 
  1545  0215                     	;# 
  1546  0215                     	;# 
  1547  0216                     	;# 
  1548  0216                     	;# 
  1549  0217                     	;# 
  1550  0217                     	;# 
  1551  028C                     	;# 
  1552  028D                     	;# 
  1553  028E                     	;# 
  1554  0291                     	;# 
  1555  0291                     	;# 
  1556  0292                     	;# 
  1557  0293                     	;# 
  1558  0294                     	;# 
  1559  0298                     	;# 
  1560  0298                     	;# 
  1561  0299                     	;# 
  1562  029A                     	;# 
  1563  029B                     	;# 
  1564  029E                     	;# 
  1565  030C                     	;# 
  1566  030D                     	;# 
  1567  030E                     	;# 
  1568  038C                     	;# 
  1569  038D                     	;# 
  1570  038E                     	;# 
  1571  0391                     	;# 
  1572  0392                     	;# 
  1573  0393                     	;# 
  1574  0394                     	;# 
  1575  0395                     	;# 
  1576  0396                     	;# 
  1577  0397                     	;# 
  1578  0398                     	;# 
  1579  0399                     	;# 
  1580  040E                     	;# 
  1581  0413                     	;# 
  1582  0413                     	;# 
  1583  0414                     	;# 
  1584  0414                     	;# 
  1585  0415                     	;# 
  1586  0416                     	;# 
  1587  0417                     	;# 
  1588  0418                     	;# 
  1589  041A                     	;# 
  1590  041A                     	;# 
  1591  041B                     	;# 
  1592  041B                     	;# 
  1593  041C                     	;# 
  1594  041D                     	;# 
  1595  041E                     	;# 
  1596  041F                     	;# 
  1597  0493                     	;# 
  1598  0494                     	;# 
  1599  0495                     	;# 
  1600  0496                     	;# 
  1601  049A                     	;# 
  1602  049B                     	;# 
  1603  049C                     	;# 
  1604  049D                     	;# 
  1605  058C                     	;# 
  1606  058C                     	;# 
  1607  058D                     	;# 
  1608  058E                     	;# 
  1609  058E                     	;# 
  1610  058F                     	;# 
  1611  0590                     	;# 
  1612  0590                     	;# 
  1613  0591                     	;# 
  1614  0592                     	;# 
  1615  0592                     	;# 
  1616  0593                     	;# 
  1617  0594                     	;# 
  1618  0594                     	;# 
  1619  0595                     	;# 
  1620  0596                     	;# 
  1621  0596                     	;# 
  1622  0597                     	;# 
  1623  0598                     	;# 
  1624  0599                     	;# 
  1625  059A                     	;# 
  1626  059B                     	;# 
  1627  059B                     	;# 
  1628  059C                     	;# 
  1629  059D                     	;# 
  1630  060C                     	;# 
  1631  060C                     	;# 
  1632  060D                     	;# 
  1633  060E                     	;# 
  1634  060F                     	;# 
  1635  060F                     	;# 
  1636  0610                     	;# 
  1637  0611                     	;# 
  1638  0612                     	;# 
  1639  0613                     	;# 
  1640  0614                     	;# 
  1641  0617                     	;# 
  1642  0617                     	;# 
  1643  0618                     	;# 
  1644  0619                     	;# 
  1645  061A                     	;# 
  1646  061A                     	;# 
  1647  061B                     	;# 
  1648  061C                     	;# 
  1649  0691                     	;# 
  1650  0692                     	;# 
  1651  0693                     	;# 
  1652  0694                     	;# 
  1653  0695                     	;# 
  1654  0696                     	;# 
  1655  0697                     	;# 
  1656  0699                     	;# 
  1657  069A                     	;# 
  1658  0711                     	;# 
  1659  0712                     	;# 
  1660  0713                     	;# 
  1661  0714                     	;# 
  1662  0715                     	;# 
  1663  0718                     	;# 
  1664  0718                     	;# 
  1665  0719                     	;# 
  1666  071A                     	;# 
  1667  071A                     	;# 
  1668  071B                     	;# 
  1669  071C                     	;# 
  1670  071D                     	;# 
  1671  0791                     	;# 
  1672  0791                     	;# 
  1673  0792                     	;# 
  1674  0793                     	;# 
  1675  0793                     	;# 
  1676  0794                     	;# 
  1677  0795                     	;# 
  1678  0795                     	;# 
  1679  0796                     	;# 
  1680  0797                     	;# 
  1681  0797                     	;# 
  1682  0798                     	;# 
  1683  0799                     	;# 
  1684  079A                     	;# 
  1685  080C                     	;# 
  1686  080C                     	;# 
  1687  080D                     	;# 
  1688  080E                     	;# 
  1689  080E                     	;# 
  1690  080F                     	;# 
  1691  0810                     	;# 
  1692  0810                     	;# 
  1693  0811                     	;# 
  1694  0812                     	;# 
  1695  0812                     	;# 
  1696  0813                     	;# 
  1697  0814                     	;# 
  1698  0815                     	;# 
  1699  0816                     	;# 
  1700  0817                     	;# 
  1701  0818                     	;# 
  1702  0819                     	;# 
  1703  081A                     	;# 
  1704  081A                     	;# 
  1705  081B                     	;# 
  1706  081C                     	;# 
  1707  081C                     	;# 
  1708  081D                     	;# 
  1709  088C                     	;# 
  1710  088D                     	;# 
  1711  088E                     	;# 
  1712  088F                     	;# 
  1713  088F                     	;# 
  1714  0890                     	;# 
  1715  0891                     	;# 
  1716  0892                     	;# 
  1717  0893                     	;# 
  1718  0893                     	;# 
  1719  0894                     	;# 
  1720  0895                     	;# 
  1721  0896                     	;# 
  1722  0897                     	;# 
  1723  0897                     	;# 
  1724  0898                     	;# 
  1725  0899                     	;# 
  1726  0D8C                     	;# 
  1727  0D8C                     	;# 
  1728  0D8D                     	;# 
  1729  0D8E                     	;# 
  1730  0D8F                     	;# 
  1731  0D8F                     	;# 
  1732  0D90                     	;# 
  1733  0D91                     	;# 
  1734  0D92                     	;# 
  1735  0D92                     	;# 
  1736  0D93                     	;# 
  1737  0D94                     	;# 
  1738  0D95                     	;# 
  1739  0D95                     	;# 
  1740  0D96                     	;# 
  1741  0D97                     	;# 
  1742  0D98                     	;# 
  1743  0D99                     	;# 
  1744  0D9A                     	;# 
  1745  0D9B                     	;# 
  1746  0D9C                     	;# 
  1747  0D9D                     	;# 
  1748  0D9E                     	;# 
  1749  0D9E                     	;# 
  1750  0D9F                     	;# 
  1751  0DA0                     	;# 
  1752  0DA1                     	;# 
  1753  0DA1                     	;# 
  1754  0DA2                     	;# 
  1755  0DA3                     	;# 
  1756  0DA4                     	;# 
  1757  0DA4                     	;# 
  1758  0DA5                     	;# 
  1759  0DA6                     	;# 
  1760  0DA7                     	;# 
  1761  0DA7                     	;# 
  1762  0DA8                     	;# 
  1763  0DA9                     	;# 
  1764  0DAA                     	;# 
  1765  0DAB                     	;# 
  1766  0DAC                     	;# 
  1767  0DAD                     	;# 
  1768  0DAE                     	;# 
  1769  0DAF                     	;# 
  1770  0E0F                     	;# 
  1771  0E10                     	;# 
  1772  0E11                     	;# 
  1773  0E12                     	;# 
  1774  0E13                     	;# 
  1775  0E14                     	;# 
  1776  0E15                     	;# 
  1777  0E16                     	;# 
  1778  0E17                     	;# 
  1779  0E18                     	;# 
  1780  0E19                     	;# 
  1781  0E1A                     	;# 
  1782  0E1B                     	;# 
  1783  0E1C                     	;# 
  1784  0E1D                     	;# 
  1785  0E1E                     	;# 
  1786  0E1F                     	;# 
  1787  0E20                     	;# 
  1788  0E21                     	;# 
  1789  0E22                     	;# 
  1790  0E23                     	;# 
  1791  0E24                     	;# 
  1792  0E25                     	;# 
  1793  0E26                     	;# 
  1794  0E27                     	;# 
  1795  0E28                     	;# 
  1796  0E29                     	;# 
  1797  0E2A                     	;# 
  1798  0E2B                     	;# 
  1799  0E2C                     	;# 
  1800  0E2D                     	;# 
  1801  0E2E                     	;# 
  1802  0E90                     	;# 
  1803  0E91                     	;# 
  1804  0E92                     	;# 
  1805  0E94                     	;# 
  1806  0E95                     	;# 
  1807  0E9C                     	;# 
  1808  0E9D                     	;# 
  1809  0E9E                     	;# 
  1810  0E9F                     	;# 
  1811  0EA0                     	;# 
  1812  0EA1                     	;# 
  1813  0EA2                     	;# 
  1814  0EA3                     	;# 
  1815  0EA4                     	;# 
  1816  0EA5                     	;# 
  1817  0EA6                     	;# 
  1818  0EA7                     	;# 
  1819  0F0F                     	;# 
  1820  0F10                     	;# 
  1821  0F11                     	;# 
  1822  0F12                     	;# 
  1823  0F13                     	;# 
  1824  0F14                     	;# 
  1825  0F15                     	;# 
  1826  0F16                     	;# 
  1827  0F17                     	;# 
  1828  0F18                     	;# 
  1829  0F19                     	;# 
  1830  0F1A                     	;# 
  1831  0F1B                     	;# 
  1832  0F1C                     	;# 
  1833  0F1D                     	;# 
  1834  0F1E                     	;# 
  1835  0F1F                     	;# 
  1836  0F20                     	;# 
  1837  0F21                     	;# 
  1838  0F22                     	;# 
  1839  0F23                     	;# 
  1840  0F24                     	;# 
  1841  0F25                     	;# 
  1842  0F26                     	;# 
  1843  0F27                     	;# 
  1844  0F28                     	;# 
  1845  0F29                     	;# 
  1846  0F2A                     	;# 
  1847  0F2B                     	;# 
  1848  0F2C                     	;# 
  1849  0F2D                     	;# 
  1850  0F2E                     	;# 
  1851  0F2F                     	;# 
  1852  0F30                     	;# 
  1853  0F31                     	;# 
  1854  0F32                     	;# 
  1855  0F33                     	;# 
  1856  0F34                     	;# 
  1857  0F35                     	;# 
  1858  0F36                     	;# 
  1859  0F37                     	;# 
  1860  0FE4                     	;# 
  1861  0FE5                     	;# 
  1862  0FE6                     	;# 
  1863  0FE7                     	;# 
  1864  0FE8                     	;# 
  1865  0FE9                     	;# 
  1866  0FEA                     	;# 
  1867  0FEB                     	;# 
  1868  0FED                     	;# 
  1869  0FEE                     	;# 
  1870  0FEF                     	;# 
  1871  0000                     	;# 
  1872  0001                     	;# 
  1873  0002                     	;# 
  1874  0003                     	;# 
  1875  0004                     	;# 
  1876  0005                     	;# 
  1877  0006                     	;# 
  1878  0007                     	;# 
  1879  0008                     	;# 
  1880  0009                     	;# 
  1881  000A                     	;# 
  1882  000B                     	;# 
  1883  000C                     	;# 
  1884  000D                     	;# 
  1885  000E                     	;# 
  1886  0010                     	;# 
  1887  0011                     	;# 
  1888  0012                     	;# 
  1889  0013                     	;# 
  1890  0014                     	;# 
  1891  0015                     	;# 
  1892  0016                     	;# 
  1893  0016                     	;# 
  1894  0017                     	;# 
  1895  0018                     	;# 
  1896  0019                     	;# 
  1897  001A                     	;# 
  1898  001A                     	;# 
  1899  001B                     	;# 
  1900  001B                     	;# 
  1901  001C                     	;# 
  1902  001D                     	;# 
  1903  001E                     	;# 
  1904  001F                     	;# 
  1905  008C                     	;# 
  1906  008D                     	;# 
  1907  008E                     	;# 
  1908  0090                     	;# 
  1909  0091                     	;# 
  1910  0092                     	;# 
  1911  0093                     	;# 
  1912  0094                     	;# 
  1913  0095                     	;# 
  1914  0096                     	;# 
  1915  0098                     	;# 
  1916  0099                     	;# 
  1917  009A                     	;# 
  1918  009B                     	;# 
  1919  009B                     	;# 
  1920  009C                     	;# 
  1921  009D                     	;# 
  1922  009E                     	;# 
  1923  009F                     	;# 
  1924  010C                     	;# 
  1925  010D                     	;# 
  1926  010E                     	;# 
  1927  0111                     	;# 
  1928  0112                     	;# 
  1929  0113                     	;# 
  1930  0114                     	;# 
  1931  0115                     	;# 
  1932  0116                     	;# 
  1933  0117                     	;# 
  1934  0118                     	;# 
  1935  0119                     	;# 
  1936  011C                     	;# 
  1937  018C                     	;# 
  1938  018D                     	;# 
  1939  018E                     	;# 
  1940  0191                     	;# 
  1941  0191                     	;# 
  1942  0192                     	;# 
  1943  0193                     	;# 
  1944  0193                     	;# 
  1945  0194                     	;# 
  1946  0195                     	;# 
  1947  0196                     	;# 
  1948  0197                     	;# 
  1949  0199                     	;# 
  1950  0199                     	;# 
  1951  0199                     	;# 
  1952  019A                     	;# 
  1953  019A                     	;# 
  1954  019A                     	;# 
  1955  019B                     	;# 
  1956  019B                     	;# 
  1957  019B                     	;# 
  1958  019B                     	;# 
  1959  019B                     	;# 
  1960  019C                     	;# 
  1961  019C                     	;# 
  1962  019C                     	;# 
  1963  019D                     	;# 
  1964  019D                     	;# 
  1965  019D                     	;# 
  1966  019E                     	;# 
  1967  019E                     	;# 
  1968  019E                     	;# 
  1969  019F                     	;# 
  1970  019F                     	;# 
  1971  019F                     	;# 
  1972  019F                     	;# 
  1973  019F                     	;# 
  1974  020C                     	;# 
  1975  020D                     	;# 
  1976  020E                     	;# 
  1977  0211                     	;# 
  1978  0211                     	;# 
  1979  0212                     	;# 
  1980  0212                     	;# 
  1981  0213                     	;# 
  1982  0213                     	;# 
  1983  0214                     	;# 
  1984  0214                     	;# 
  1985  0215                     	;# 
  1986  0215                     	;# 
  1987  0215                     	;# 
  1988  0215                     	;# 
  1989  0216                     	;# 
  1990  0216                     	;# 
  1991  0217                     	;# 
  1992  0217                     	;# 
  1993  028C                     	;# 
  1994  028D                     	;# 
  1995  028E                     	;# 
  1996  0291                     	;# 
  1997  0291                     	;# 
  1998  0292                     	;# 
  1999  0293                     	;# 
  2000  0294                     	;# 
  2001  0298                     	;# 
  2002  0298                     	;# 
  2003  0299                     	;# 
  2004  029A                     	;# 
  2005  029B                     	;# 
  2006  029E                     	;# 
  2007  030C                     	;# 
  2008  030D                     	;# 
  2009  030E                     	;# 
  2010  038C                     	;# 
  2011  038D                     	;# 
  2012  038E                     	;# 
  2013  0391                     	;# 
  2014  0392                     	;# 
  2015  0393                     	;# 
  2016  0394                     	;# 
  2017  0395                     	;# 
  2018  0396                     	;# 
  2019  0397                     	;# 
  2020  0398                     	;# 
  2021  0399                     	;# 
  2022  040E                     	;# 
  2023  0413                     	;# 
  2024  0413                     	;# 
  2025  0414                     	;# 
  2026  0414                     	;# 
  2027  0415                     	;# 
  2028  0416                     	;# 
  2029  0417                     	;# 
  2030  0418                     	;# 
  2031  041A                     	;# 
  2032  041A                     	;# 
  2033  041B                     	;# 
  2034  041B                     	;# 
  2035  041C                     	;# 
  2036  041D                     	;# 
  2037  041E                     	;# 
  2038  041F                     	;# 
  2039  0493                     	;# 
  2040  0494                     	;# 
  2041  0495                     	;# 
  2042  0496                     	;# 
  2043  049A                     	;# 
  2044  049B                     	;# 
  2045  049C                     	;# 
  2046  049D                     	;# 
  2047  058C                     	;# 
  2048  058C                     	;# 
  2049  058D                     	;# 
  2050  058E                     	;# 
  2051  058E                     	;# 
  2052  058F                     	;# 
  2053  0590                     	;# 
  2054  0590                     	;# 
  2055  0591                     	;# 
  2056  0592                     	;# 
  2057  0592                     	;# 
  2058  0593                     	;# 
  2059  0594                     	;# 
  2060  0594                     	;# 
  2061  0595                     	;# 
  2062  0596                     	;# 
  2063  0596                     	;# 
  2064  0597                     	;# 
  2065  0598                     	;# 
  2066  0599                     	;# 
  2067  059A                     	;# 
  2068  059B                     	;# 
  2069  059B                     	;# 
  2070  059C                     	;# 
  2071  059D                     	;# 
  2072  060C                     	;# 
  2073  060C                     	;# 
  2074  060D                     	;# 
  2075  060E                     	;# 
  2076  060F                     	;# 
  2077  060F                     	;# 
  2078  0610                     	;# 
  2079  0611                     	;# 
  2080  0612                     	;# 
  2081  0613                     	;# 
  2082  0614                     	;# 
  2083  0617                     	;# 
  2084  0617                     	;# 
  2085  0618                     	;# 
  2086  0619                     	;# 
  2087  061A                     	;# 
  2088  061A                     	;# 
  2089  061B                     	;# 
  2090  061C                     	;# 
  2091  0691                     	;# 
  2092  0692                     	;# 
  2093  0693                     	;# 
  2094  0694                     	;# 
  2095  0695                     	;# 
  2096  0696                     	;# 
  2097  0697                     	;# 
  2098  0699                     	;# 
  2099  069A                     	;# 
  2100  0711                     	;# 
  2101  0712                     	;# 
  2102  0713                     	;# 
  2103  0714                     	;# 
  2104  0715                     	;# 
  2105  0718                     	;# 
  2106  0718                     	;# 
  2107  0719                     	;# 
  2108  071A                     	;# 
  2109  071A                     	;# 
  2110  071B                     	;# 
  2111  071C                     	;# 
  2112  071D                     	;# 
  2113  0791                     	;# 
  2114  0791                     	;# 
  2115  0792                     	;# 
  2116  0793                     	;# 
  2117  0793                     	;# 
  2118  0794                     	;# 
  2119  0795                     	;# 
  2120  0795                     	;# 
  2121  0796                     	;# 
  2122  0797                     	;# 
  2123  0797                     	;# 
  2124  0798                     	;# 
  2125  0799                     	;# 
  2126  079A                     	;# 
  2127  080C                     	;# 
  2128  080C                     	;# 
  2129  080D                     	;# 
  2130  080E                     	;# 
  2131  080E                     	;# 
  2132  080F                     	;# 
  2133  0810                     	;# 
  2134  0810                     	;# 
  2135  0811                     	;# 
  2136  0812                     	;# 
  2137  0812                     	;# 
  2138  0813                     	;# 
  2139  0814                     	;# 
  2140  0815                     	;# 
  2141  0816                     	;# 
  2142  0817                     	;# 
  2143  0818                     	;# 
  2144  0819                     	;# 
  2145  081A                     	;# 
  2146  081A                     	;# 
  2147  081B                     	;# 
  2148  081C                     	;# 
  2149  081C                     	;# 
  2150  081D                     	;# 
  2151  088C                     	;# 
  2152  088D                     	;# 
  2153  088E                     	;# 
  2154  088F                     	;# 
  2155  088F                     	;# 
  2156  0890                     	;# 
  2157  0891                     	;# 
  2158  0892                     	;# 
  2159  0893                     	;# 
  2160  0893                     	;# 
  2161  0894                     	;# 
  2162  0895                     	;# 
  2163  0896                     	;# 
  2164  0897                     	;# 
  2165  0897                     	;# 
  2166  0898                     	;# 
  2167  0899                     	;# 
  2168  0D8C                     	;# 
  2169  0D8C                     	;# 
  2170  0D8D                     	;# 
  2171  0D8E                     	;# 
  2172  0D8F                     	;# 
  2173  0D8F                     	;# 
  2174  0D90                     	;# 
  2175  0D91                     	;# 
  2176  0D92                     	;# 
  2177  0D92                     	;# 
  2178  0D93                     	;# 
  2179  0D94                     	;# 
  2180  0D95                     	;# 
  2181  0D95                     	;# 
  2182  0D96                     	;# 
  2183  0D97                     	;# 
  2184  0D98                     	;# 
  2185  0D99                     	;# 
  2186  0D9A                     	;# 
  2187  0D9B                     	;# 
  2188  0D9C                     	;# 
  2189  0D9D                     	;# 
  2190  0D9E                     	;# 
  2191  0D9E                     	;# 
  2192  0D9F                     	;# 
  2193  0DA0                     	;# 
  2194  0DA1                     	;# 
  2195  0DA1                     	;# 
  2196  0DA2                     	;# 
  2197  0DA3                     	;# 
  2198  0DA4                     	;# 
  2199  0DA4                     	;# 
  2200  0DA5                     	;# 
  2201  0DA6                     	;# 
  2202  0DA7                     	;# 
  2203  0DA7                     	;# 
  2204  0DA8                     	;# 
  2205  0DA9                     	;# 
  2206  0DAA                     	;# 
  2207  0DAB                     	;# 
  2208  0DAC                     	;# 
  2209  0DAD                     	;# 
  2210  0DAE                     	;# 
  2211  0DAF                     	;# 
  2212  0E0F                     	;# 
  2213  0E10                     	;# 
  2214  0E11                     	;# 
  2215  0E12                     	;# 
  2216  0E13                     	;# 
  2217  0E14                     	;# 
  2218  0E15                     	;# 
  2219  0E16                     	;# 
  2220  0E17                     	;# 
  2221  0E18                     	;# 
  2222  0E19                     	;# 
  2223  0E1A                     	;# 
  2224  0E1B                     	;# 
  2225  0E1C                     	;# 
  2226  0E1D                     	;# 
  2227  0E1E                     	;# 
  2228  0E1F                     	;# 
  2229  0E20                     	;# 
  2230  0E21                     	;# 
  2231  0E22                     	;# 
  2232  0E23                     	;# 
  2233  0E24                     	;# 
  2234  0E25                     	;# 
  2235  0E26                     	;# 
  2236  0E27                     	;# 
  2237  0E28                     	;# 
  2238  0E29                     	;# 
  2239  0E2A                     	;# 
  2240  0E2B                     	;# 
  2241  0E2C                     	;# 
  2242  0E2D                     	;# 
  2243  0E2E                     	;# 
  2244  0E90                     	;# 
  2245  0E91                     	;# 
  2246  0E92                     	;# 
  2247  0E94                     	;# 
  2248  0E95                     	;# 
  2249  0E9C                     	;# 
  2250  0E9D                     	;# 
  2251  0E9E                     	;# 
  2252  0E9F                     	;# 
  2253  0EA0                     	;# 
  2254  0EA1                     	;# 
  2255  0EA2                     	;# 
  2256  0EA3                     	;# 
  2257  0EA4                     	;# 
  2258  0EA5                     	;# 
  2259  0EA6                     	;# 
  2260  0EA7                     	;# 
  2261  0F0F                     	;# 
  2262  0F10                     	;# 
  2263  0F11                     	;# 
  2264  0F12                     	;# 
  2265  0F13                     	;# 
  2266  0F14                     	;# 
  2267  0F15                     	;# 
  2268  0F16                     	;# 
  2269  0F17                     	;# 
  2270  0F18                     	;# 
  2271  0F19                     	;# 
  2272  0F1A                     	;# 
  2273  0F1B                     	;# 
  2274  0F1C                     	;# 
  2275  0F1D                     	;# 
  2276  0F1E                     	;# 
  2277  0F1F                     	;# 
  2278  0F20                     	;# 
  2279  0F21                     	;# 
  2280  0F22                     	;# 
  2281  0F23                     	;# 
  2282  0F24                     	;# 
  2283  0F25                     	;# 
  2284  0F26                     	;# 
  2285  0F27                     	;# 
  2286  0F28                     	;# 
  2287  0F29                     	;# 
  2288  0F2A                     	;# 
  2289  0F2B                     	;# 
  2290  0F2C                     	;# 
  2291  0F2D                     	;# 
  2292  0F2E                     	;# 
  2293  0F2F                     	;# 
  2294  0F30                     	;# 
  2295  0F31                     	;# 
  2296  0F32                     	;# 
  2297  0F33                     	;# 
  2298  0F34                     	;# 
  2299  0F35                     	;# 
  2300  0F36                     	;# 
  2301  0F37                     	;# 
  2302  0FE4                     	;# 
  2303  0FE5                     	;# 
  2304  0FE6                     	;# 
  2305  0FE7                     	;# 
  2306  0FE8                     	;# 
  2307  0FE9                     	;# 
  2308  0FEA                     	;# 
  2309  0FEB                     	;# 
  2310  0FED                     	;# 
  2311  0FEE                     	;# 
  2312  0FEF                     	;# 
  2313  0000                     	;# 
  2314  0001                     	;# 
  2315  0002                     	;# 
  2316  0003                     	;# 
  2317  0004                     	;# 
  2318  0005                     	;# 
  2319  0006                     	;# 
  2320  0007                     	;# 
  2321  0008                     	;# 
  2322  0009                     	;# 
  2323  000A                     	;# 
  2324  000B                     	;# 
  2325  000C                     	;# 
  2326  000D                     	;# 
  2327  000E                     	;# 
  2328  0010                     	;# 
  2329  0011                     	;# 
  2330  0012                     	;# 
  2331  0013                     	;# 
  2332  0014                     	;# 
  2333  0015                     	;# 
  2334  0016                     	;# 
  2335  0016                     	;# 
  2336  0017                     	;# 
  2337  0018                     	;# 
  2338  0019                     	;# 
  2339  001A                     	;# 
  2340  001A                     	;# 
  2341  001B                     	;# 
  2342  001B                     	;# 
  2343  001C                     	;# 
  2344  001D                     	;# 
  2345  001E                     	;# 
  2346  001F                     	;# 
  2347  008C                     	;# 
  2348  008D                     	;# 
  2349  008E                     	;# 
  2350  0090                     	;# 
  2351  0091                     	;# 
  2352  0092                     	;# 
  2353  0093                     	;# 
  2354  0094                     	;# 
  2355  0095                     	;# 
  2356  0096                     	;# 
  2357  0098                     	;# 
  2358  0099                     	;# 
  2359  009A                     	;# 
  2360  009B                     	;# 
  2361  009B                     	;# 
  2362  009C                     	;# 
  2363  009D                     	;# 
  2364  009E                     	;# 
  2365  009F                     	;# 
  2366  010C                     	;# 
  2367  010D                     	;# 
  2368  010E                     	;# 
  2369  0111                     	;# 
  2370  0112                     	;# 
  2371  0113                     	;# 
  2372  0114                     	;# 
  2373  0115                     	;# 
  2374  0116                     	;# 
  2375  0117                     	;# 
  2376  0118                     	;# 
  2377  0119                     	;# 
  2378  011C                     	;# 
  2379  018C                     	;# 
  2380  018D                     	;# 
  2381  018E                     	;# 
  2382  0191                     	;# 
  2383  0191                     	;# 
  2384  0192                     	;# 
  2385  0193                     	;# 
  2386  0193                     	;# 
  2387  0194                     	;# 
  2388  0195                     	;# 
  2389  0196                     	;# 
  2390  0197                     	;# 
  2391  0199                     	;# 
  2392  0199                     	;# 
  2393  0199                     	;# 
  2394  019A                     	;# 
  2395  019A                     	;# 
  2396  019A                     	;# 
  2397  019B                     	;# 
  2398  019B                     	;# 
  2399  019B                     	;# 
  2400  019B                     	;# 
  2401  019B                     	;# 
  2402  019C                     	;# 
  2403  019C                     	;# 
  2404  019C                     	;# 
  2405  019D                     	;# 
  2406  019D                     	;# 
  2407  019D                     	;# 
  2408  019E                     	;# 
  2409  019E                     	;# 
  2410  019E                     	;# 
  2411  019F                     	;# 
  2412  019F                     	;# 
  2413  019F                     	;# 
  2414  019F                     	;# 
  2415  019F                     	;# 
  2416  020C                     	;# 
  2417  020D                     	;# 
  2418  020E                     	;# 
  2419  0211                     	;# 
  2420  0211                     	;# 
  2421  0212                     	;# 
  2422  0212                     	;# 
  2423  0213                     	;# 
  2424  0213                     	;# 
  2425  0214                     	;# 
  2426  0214                     	;# 
  2427  0215                     	;# 
  2428  0215                     	;# 
  2429  0215                     	;# 
  2430  0215                     	;# 
  2431  0216                     	;# 
  2432  0216                     	;# 
  2433  0217                     	;# 
  2434  0217                     	;# 
  2435  028C                     	;# 
  2436  028D                     	;# 
  2437  028E                     	;# 
  2438  0291                     	;# 
  2439  0291                     	;# 
  2440  0292                     	;# 
  2441  0293                     	;# 
  2442  0294                     	;# 
  2443  0298                     	;# 
  2444  0298                     	;# 
  2445  0299                     	;# 
  2446  029A                     	;# 
  2447  029B                     	;# 
  2448  029E                     	;# 
  2449  030C                     	;# 
  2450  030D                     	;# 
  2451  030E                     	;# 
  2452  038C                     	;# 
  2453  038D                     	;# 
  2454  038E                     	;# 
  2455  0391                     	;# 
  2456  0392                     	;# 
  2457  0393                     	;# 
  2458  0394                     	;# 
  2459  0395                     	;# 
  2460  0396                     	;# 
  2461  0397                     	;# 
  2462  0398                     	;# 
  2463  0399                     	;# 
  2464  040E                     	;# 
  2465  0413                     	;# 
  2466  0413                     	;# 
  2467  0414                     	;# 
  2468  0414                     	;# 
  2469  0415                     	;# 
  2470  0416                     	;# 
  2471  0417                     	;# 
  2472  0418                     	;# 
  2473  041A                     	;# 
  2474  041A                     	;# 
  2475  041B                     	;# 
  2476  041B                     	;# 
  2477  041C                     	;# 
  2478  041D                     	;# 
  2479  041E                     	;# 
  2480  041F                     	;# 
  2481  0493                     	;# 
  2482  0494                     	;# 
  2483  0495                     	;# 
  2484  0496                     	;# 
  2485  049A                     	;# 
  2486  049B                     	;# 
  2487  049C                     	;# 
  2488  049D                     	;# 
  2489  058C                     	;# 
  2490  058C                     	;# 
  2491  058D                     	;# 
  2492  058E                     	;# 
  2493  058E                     	;# 
  2494  058F                     	;# 
  2495  0590                     	;# 
  2496  0590                     	;# 
  2497  0591                     	;# 
  2498  0592                     	;# 
  2499  0592                     	;# 
  2500  0593                     	;# 
  2501  0594                     	;# 
  2502  0594                     	;# 
  2503  0595                     	;# 
  2504  0596                     	;# 
  2505  0596                     	;# 
  2506  0597                     	;# 
  2507  0598                     	;# 
  2508  0599                     	;# 
  2509  059A                     	;# 
  2510  059B                     	;# 
  2511  059B                     	;# 
  2512  059C                     	;# 
  2513  059D                     	;# 
  2514  060C                     	;# 
  2515  060C                     	;# 
  2516  060D                     	;# 
  2517  060E                     	;# 
  2518  060F                     	;# 
  2519  060F                     	;# 
  2520  0610                     	;# 
  2521  0611                     	;# 
  2522  0612                     	;# 
  2523  0613                     	;# 
  2524  0614                     	;# 
  2525  0617                     	;# 
  2526  0617                     	;# 
  2527  0618                     	;# 
  2528  0619                     	;# 
  2529  061A                     	;# 
  2530  061A                     	;# 
  2531  061B                     	;# 
  2532  061C                     	;# 
  2533  0691                     	;# 
  2534  0692                     	;# 
  2535  0693                     	;# 
  2536  0694                     	;# 
  2537  0695                     	;# 
  2538  0696                     	;# 
  2539  0697                     	;# 
  2540  0699                     	;# 
  2541  069A                     	;# 
  2542  0711                     	;# 
  2543  0712                     	;# 
  2544  0713                     	;# 
  2545  0714                     	;# 
  2546  0715                     	;# 
  2547  0718                     	;# 
  2548  0718                     	;# 
  2549  0719                     	;# 
  2550  071A                     	;# 
  2551  071A                     	;# 
  2552  071B                     	;# 
  2553  071C                     	;# 
  2554  071D                     	;# 
  2555  0791                     	;# 
  2556  0791                     	;# 
  2557  0792                     	;# 
  2558  0793                     	;# 
  2559  0793                     	;# 
  2560  0794                     	;# 
  2561  0795                     	;# 
  2562  0795                     	;# 
  2563  0796                     	;# 
  2564  0797                     	;# 
  2565  0797                     	;# 
  2566  0798                     	;# 
  2567  0799                     	;# 
  2568  079A                     	;# 
  2569  080C                     	;# 
  2570  080C                     	;# 
  2571  080D                     	;# 
  2572  080E                     	;# 
  2573  080E                     	;# 
  2574  080F                     	;# 
  2575  0810                     	;# 
  2576  0810                     	;# 
  2577  0811                     	;# 
  2578  0812                     	;# 
  2579  0812                     	;# 
  2580  0813                     	;# 
  2581  0814                     	;# 
  2582  0815                     	;# 
  2583  0816                     	;# 
  2584  0817                     	;# 
  2585  0818                     	;# 
  2586  0819                     	;# 
  2587  081A                     	;# 
  2588  081A                     	;# 
  2589  081B                     	;# 
  2590  081C                     	;# 
  2591  081C                     	;# 
  2592  081D                     	;# 
  2593  088C                     	;# 
  2594  088D                     	;# 
  2595  088E                     	;# 
  2596  088F                     	;# 
  2597  088F                     	;# 
  2598  0890                     	;# 
  2599  0891                     	;# 
  2600  0892                     	;# 
  2601  0893                     	;# 
  2602  0893                     	;# 
  2603  0894                     	;# 
  2604  0895                     	;# 
  2605  0896                     	;# 
  2606  0897                     	;# 
  2607  0897                     	;# 
  2608  0898                     	;# 
  2609  0899                     	;# 
  2610  0D8C                     	;# 
  2611  0D8C                     	;# 
  2612  0D8D                     	;# 
  2613  0D8E                     	;# 
  2614  0D8F                     	;# 
  2615  0D8F                     	;# 
  2616  0D90                     	;# 
  2617  0D91                     	;# 
  2618  0D92                     	;# 
  2619  0D92                     	;# 
  2620  0D93                     	;# 
  2621  0D94                     	;# 
  2622  0D95                     	;# 
  2623  0D95                     	;# 
  2624  0D96                     	;# 
  2625  0D97                     	;# 
  2626  0D98                     	;# 
  2627  0D99                     	;# 
  2628  0D9A                     	;# 
  2629  0D9B                     	;# 
  2630  0D9C                     	;# 
  2631  0D9D                     	;# 
  2632  0D9E                     	;# 
  2633  0D9E                     	;# 
  2634  0D9F                     	;# 
  2635  0DA0                     	;# 
  2636  0DA1                     	;# 
  2637  0DA1                     	;# 
  2638  0DA2                     	;# 
  2639  0DA3                     	;# 
  2640  0DA4                     	;# 
  2641  0DA4                     	;# 
  2642  0DA5                     	;# 
  2643  0DA6                     	;# 
  2644  0DA7                     	;# 
  2645  0DA7                     	;# 
  2646  0DA8                     	;# 
  2647  0DA9                     	;# 
  2648  0DAA                     	;# 
  2649  0DAB                     	;# 
  2650  0DAC                     	;# 
  2651  0DAD                     	;# 
  2652  0DAE                     	;# 
  2653  0DAF                     	;# 
  2654  0E0F                     	;# 
  2655  0E10                     	;# 
  2656  0E11                     	;# 
  2657  0E12                     	;# 
  2658  0E13                     	;# 
  2659  0E14                     	;# 
  2660  0E15                     	;# 
  2661  0E16                     	;# 
  2662  0E17                     	;# 
  2663  0E18                     	;# 
  2664  0E19                     	;# 
  2665  0E1A                     	;# 
  2666  0E1B                     	;# 
  2667  0E1C                     	;# 
  2668  0E1D                     	;# 
  2669  0E1E                     	;# 
  2670  0E1F                     	;# 
  2671  0E20                     	;# 
  2672  0E21                     	;# 
  2673  0E22                     	;# 
  2674  0E23                     	;# 
  2675  0E24                     	;# 
  2676  0E25                     	;# 
  2677  0E26                     	;# 
  2678  0E27                     	;# 
  2679  0E28                     	;# 
  2680  0E29                     	;# 
  2681  0E2A                     	;# 
  2682  0E2B                     	;# 
  2683  0E2C                     	;# 
  2684  0E2D                     	;# 
  2685  0E2E                     	;# 
  2686  0E90                     	;# 
  2687  0E91                     	;# 
  2688  0E92                     	;# 
  2689  0E94                     	;# 
  2690  0E95                     	;# 
  2691  0E9C                     	;# 
  2692  0E9D                     	;# 
  2693  0E9E                     	;# 
  2694  0E9F                     	;# 
  2695  0EA0                     	;# 
  2696  0EA1                     	;# 
  2697  0EA2                     	;# 
  2698  0EA3                     	;# 
  2699  0EA4                     	;# 
  2700  0EA5                     	;# 
  2701  0EA6                     	;# 
  2702  0EA7                     	;# 
  2703  0F0F                     	;# 
  2704  0F10                     	;# 
  2705  0F11                     	;# 
  2706  0F12                     	;# 
  2707  0F13                     	;# 
  2708  0F14                     	;# 
  2709  0F15                     	;# 
  2710  0F16                     	;# 
  2711  0F17                     	;# 
  2712  0F18                     	;# 
  2713  0F19                     	;# 
  2714  0F1A                     	;# 
  2715  0F1B                     	;# 
  2716  0F1C                     	;# 
  2717  0F1D                     	;# 
  2718  0F1E                     	;# 
  2719  0F1F                     	;# 
  2720  0F20                     	;# 
  2721  0F21                     	;# 
  2722  0F22                     	;# 
  2723  0F23                     	;# 
  2724  0F24                     	;# 
  2725  0F25                     	;# 
  2726  0F26                     	;# 
  2727  0F27                     	;# 
  2728  0F28                     	;# 
  2729  0F29                     	;# 
  2730  0F2A                     	;# 
  2731  0F2B                     	;# 
  2732  0F2C                     	;# 
  2733  0F2D                     	;# 
  2734  0F2E                     	;# 
  2735  0F2F                     	;# 
  2736  0F30                     	;# 
  2737  0F31                     	;# 
  2738  0F32                     	;# 
  2739  0F33                     	;# 
  2740  0F34                     	;# 
  2741  0F35                     	;# 
  2742  0F36                     	;# 
  2743  0F37                     	;# 
  2744  0FE4                     	;# 
  2745  0FE5                     	;# 
  2746  0FE6                     	;# 
  2747  0FE7                     	;# 
  2748  0FE8                     	;# 
  2749  0FE9                     	;# 
  2750  0FEA                     	;# 
  2751  0FEB                     	;# 
  2752  0FED                     	;# 
  2753  0FEE                     	;# 
  2754  0FEF                     	;# 
  2755  0000                     	;# 
  2756  0001                     	;# 
  2757  0002                     	;# 
  2758  0003                     	;# 
  2759  0004                     	;# 
  2760  0005                     	;# 
  2761  0006                     	;# 
  2762  0007                     	;# 
  2763  0008                     	;# 
  2764  0009                     	;# 
  2765  000A                     	;# 
  2766  000B                     	;# 
  2767  000C                     	;# 
  2768  000D                     	;# 
  2769  000E                     	;# 
  2770  0010                     	;# 
  2771  0011                     	;# 
  2772  0012                     	;# 
  2773  0013                     	;# 
  2774  0014                     	;# 
  2775  0015                     	;# 
  2776  0016                     	;# 
  2777  0016                     	;# 
  2778  0017                     	;# 
  2779  0018                     	;# 
  2780  0019                     	;# 
  2781  001A                     	;# 
  2782  001A                     	;# 
  2783  001B                     	;# 
  2784  001B                     	;# 
  2785  001C                     	;# 
  2786  001D                     	;# 
  2787  001E                     	;# 
  2788  001F                     	;# 
  2789  008C                     	;# 
  2790  008D                     	;# 
  2791  008E                     	;# 
  2792  0090                     	;# 
  2793  0091                     	;# 
  2794  0092                     	;# 
  2795  0093                     	;# 
  2796  0094                     	;# 
  2797  0095                     	;# 
  2798  0096                     	;# 
  2799  0098                     	;# 
  2800  0099                     	;# 
  2801  009A                     	;# 
  2802  009B                     	;# 
  2803  009B                     	;# 
  2804  009C                     	;# 
  2805  009D                     	;# 
  2806  009E                     	;# 
  2807  009F                     	;# 
  2808  010C                     	;# 
  2809  010D                     	;# 
  2810  010E                     	;# 
  2811  0111                     	;# 
  2812  0112                     	;# 
  2813  0113                     	;# 
  2814  0114                     	;# 
  2815  0115                     	;# 
  2816  0116                     	;# 
  2817  0117                     	;# 
  2818  0118                     	;# 
  2819  0119                     	;# 
  2820  011C                     	;# 
  2821  018C                     	;# 
  2822  018D                     	;# 
  2823  018E                     	;# 
  2824  0191                     	;# 
  2825  0191                     	;# 
  2826  0192                     	;# 
  2827  0193                     	;# 
  2828  0193                     	;# 
  2829  0194                     	;# 
  2830  0195                     	;# 
  2831  0196                     	;# 
  2832  0197                     	;# 
  2833  0199                     	;# 
  2834  0199                     	;# 
  2835  0199                     	;# 
  2836  019A                     	;# 
  2837  019A                     	;# 
  2838  019A                     	;# 
  2839  019B                     	;# 
  2840  019B                     	;# 
  2841  019B                     	;# 
  2842  019B                     	;# 
  2843  019B                     	;# 
  2844  019C                     	;# 
  2845  019C                     	;# 
  2846  019C                     	;# 
  2847  019D                     	;# 
  2848  019D                     	;# 
  2849  019D                     	;# 
  2850  019E                     	;# 
  2851  019E                     	;# 
  2852  019E                     	;# 
  2853  019F                     	;# 
  2854  019F                     	;# 
  2855  019F                     	;# 
  2856  019F                     	;# 
  2857  019F                     	;# 
  2858  020C                     	;# 
  2859  020D                     	;# 
  2860  020E                     	;# 
  2861  0211                     	;# 
  2862  0211                     	;# 
  2863  0212                     	;# 
  2864  0212                     	;# 
  2865  0213                     	;# 
  2866  0213                     	;# 
  2867  0214                     	;# 
  2868  0214                     	;# 
  2869  0215                     	;# 
  2870  0215                     	;# 
  2871  0215                     	;# 
  2872  0215                     	;# 
  2873  0216                     	;# 
  2874  0216                     	;# 
  2875  0217                     	;# 
  2876  0217                     	;# 
  2877  028C                     	;# 
  2878  028D                     	;# 
  2879  028E                     	;# 
  2880  0291                     	;# 
  2881  0291                     	;# 
  2882  0292                     	;# 
  2883  0293                     	;# 
  2884  0294                     	;# 
  2885  0298                     	;# 
  2886  0298                     	;# 
  2887  0299                     	;# 
  2888  029A                     	;# 
  2889  029B                     	;# 
  2890  029E                     	;# 
  2891  030C                     	;# 
  2892  030D                     	;# 
  2893  030E                     	;# 
  2894  038C                     	;# 
  2895  038D                     	;# 
  2896  038E                     	;# 
  2897  0391                     	;# 
  2898  0392                     	;# 
  2899  0393                     	;# 
  2900  0394                     	;# 
  2901  0395                     	;# 
  2902  0396                     	;# 
  2903  0397                     	;# 
  2904  0398                     	;# 
  2905  0399                     	;# 
  2906  040E                     	;# 
  2907  0413                     	;# 
  2908  0413                     	;# 
  2909  0414                     	;# 
  2910  0414                     	;# 
  2911  0415                     	;# 
  2912  0416                     	;# 
  2913  0417                     	;# 
  2914  0418                     	;# 
  2915  041A                     	;# 
  2916  041A                     	;# 
  2917  041B                     	;# 
  2918  041B                     	;# 
  2919  041C                     	;# 
  2920  041D                     	;# 
  2921  041E                     	;# 
  2922  041F                     	;# 
  2923  0493                     	;# 
  2924  0494                     	;# 
  2925  0495                     	;# 
  2926  0496                     	;# 
  2927  049A                     	;# 
  2928  049B                     	;# 
  2929  049C                     	;# 
  2930  049D                     	;# 
  2931  058C                     	;# 
  2932  058C                     	;# 
  2933  058D                     	;# 
  2934  058E                     	;# 
  2935  058E                     	;# 
  2936  058F                     	;# 
  2937  0590                     	;# 
  2938  0590                     	;# 
  2939  0591                     	;# 
  2940  0592                     	;# 
  2941  0592                     	;# 
  2942  0593                     	;# 
  2943  0594                     	;# 
  2944  0594                     	;# 
  2945  0595                     	;# 
  2946  0596                     	;# 
  2947  0596                     	;# 
  2948  0597                     	;# 
  2949  0598                     	;# 
  2950  0599                     	;# 
  2951  059A                     	;# 
  2952  059B                     	;# 
  2953  059B                     	;# 
  2954  059C                     	;# 
  2955  059D                     	;# 
  2956  060C                     	;# 
  2957  060C                     	;# 
  2958  060D                     	;# 
  2959  060E                     	;# 
  2960  060F                     	;# 
  2961  060F                     	;# 
  2962  0610                     	;# 
  2963  0611                     	;# 
  2964  0612                     	;# 
  2965  0613                     	;# 
  2966  0614                     	;# 
  2967  0617                     	;# 
  2968  0617                     	;# 
  2969  0618                     	;# 
  2970  0619                     	;# 
  2971  061A                     	;# 
  2972  061A                     	;# 
  2973  061B                     	;# 
  2974  061C                     	;# 
  2975  0691                     	;# 
  2976  0692                     	;# 
  2977  0693                     	;# 
  2978  0694                     	;# 
  2979  0695                     	;# 
  2980  0696                     	;# 
  2981  0697                     	;# 
  2982  0699                     	;# 
  2983  069A                     	;# 
  2984  0711                     	;# 
  2985  0712                     	;# 
  2986  0713                     	;# 
  2987  0714                     	;# 
  2988  0715                     	;# 
  2989  0718                     	;# 
  2990  0718                     	;# 
  2991  0719                     	;# 
  2992  071A                     	;# 
  2993  071A                     	;# 
  2994  071B                     	;# 
  2995  071C                     	;# 
  2996  071D                     	;# 
  2997  0791                     	;# 
  2998  0791                     	;# 
  2999  0792                     	;# 
  3000  0793                     	;# 
  3001  0793                     	;# 
  3002  0794                     	;# 
  3003  0795                     	;# 
  3004  0795                     	;# 
  3005  0796                     	;# 
  3006  0797                     	;# 
  3007  0797                     	;# 
  3008  0798                     	;# 
  3009  0799                     	;# 
  3010  079A                     	;# 
  3011  080C                     	;# 
  3012  080C                     	;# 
  3013  080D                     	;# 
  3014  080E                     	;# 
  3015  080E                     	;# 
  3016  080F                     	;# 
  3017  0810                     	;# 
  3018  0810                     	;# 
  3019  0811                     	;# 
  3020  0812                     	;# 
  3021  0812                     	;# 
  3022  0813                     	;# 
  3023  0814                     	;# 
  3024  0815                     	;# 
  3025  0816                     	;# 
  3026  0817                     	;# 
  3027  0818                     	;# 
  3028  0819                     	;# 
  3029  081A                     	;# 
  3030  081A                     	;# 
  3031  081B                     	;# 
  3032  081C                     	;# 
  3033  081C                     	;# 
  3034  081D                     	;# 
  3035  088C                     	;# 
  3036  088D                     	;# 
  3037  088E                     	;# 
  3038  088F                     	;# 
  3039  088F                     	;# 
  3040  0890                     	;# 
  3041  0891                     	;# 
  3042  0892                     	;# 
  3043  0893                     	;# 
  3044  0893                     	;# 
  3045  0894                     	;# 
  3046  0895                     	;# 
  3047  0896                     	;# 
  3048  0897                     	;# 
  3049  0897                     	;# 
  3050  0898                     	;# 
  3051  0899                     	;# 
  3052  0D8C                     	;# 
  3053  0D8C                     	;# 
  3054  0D8D                     	;# 
  3055  0D8E                     	;# 
  3056  0D8F                     	;# 
  3057  0D8F                     	;# 
  3058  0D90                     	;# 
  3059  0D91                     	;# 
  3060  0D92                     	;# 
  3061  0D92                     	;# 
  3062  0D93                     	;# 
  3063  0D94                     	;# 
  3064  0D95                     	;# 
  3065  0D95                     	;# 
  3066  0D96                     	;# 
  3067  0D97                     	;# 
  3068  0D98                     	;# 
  3069  0D99                     	;# 
  3070  0D9A                     	;# 
  3071  0D9B                     	;# 
  3072  0D9C                     	;# 
  3073  0D9D                     	;# 
  3074  0D9E                     	;# 
  3075  0D9E                     	;# 
  3076  0D9F                     	;# 
  3077  0DA0                     	;# 
  3078  0DA1                     	;# 
  3079  0DA1                     	;# 
  3080  0DA2                     	;# 
  3081  0DA3                     	;# 
  3082  0DA4                     	;# 
  3083  0DA4                     	;# 
  3084  0DA5                     	;# 
  3085  0DA6                     	;# 
  3086  0DA7                     	;# 
  3087  0DA7                     	;# 
  3088  0DA8                     	;# 
  3089  0DA9                     	;# 
  3090  0DAA                     	;# 
  3091  0DAB                     	;# 
  3092  0DAC                     	;# 
  3093  0DAD                     	;# 
  3094  0DAE                     	;# 
  3095  0DAF                     	;# 
  3096  0E0F                     	;# 
  3097  0E10                     	;# 
  3098  0E11                     	;# 
  3099  0E12                     	;# 
  3100  0E13                     	;# 
  3101  0E14                     	;# 
  3102  0E15                     	;# 
  3103  0E16                     	;# 
  3104  0E17                     	;# 
  3105  0E18                     	;# 
  3106  0E19                     	;# 
  3107  0E1A                     	;# 
  3108  0E1B                     	;# 
  3109  0E1C                     	;# 
  3110  0E1D                     	;# 
  3111  0E1E                     	;# 
  3112  0E1F                     	;# 
  3113  0E20                     	;# 
  3114  0E21                     	;# 
  3115  0E22                     	;# 
  3116  0E23                     	;# 
  3117  0E24                     	;# 
  3118  0E25                     	;# 
  3119  0E26                     	;# 
  3120  0E27                     	;# 
  3121  0E28                     	;# 
  3122  0E29                     	;# 
  3123  0E2A                     	;# 
  3124  0E2B                     	;# 
  3125  0E2C                     	;# 
  3126  0E2D                     	;# 
  3127  0E2E                     	;# 
  3128  0E90                     	;# 
  3129  0E91                     	;# 
  3130  0E92                     	;# 
  3131  0E94                     	;# 
  3132  0E95                     	;# 
  3133  0E9C                     	;# 
  3134  0E9D                     	;# 
  3135  0E9E                     	;# 
  3136  0E9F                     	;# 
  3137  0EA0                     	;# 
  3138  0EA1                     	;# 
  3139  0EA2                     	;# 
  3140  0EA3                     	;# 
  3141  0EA4                     	;# 
  3142  0EA5                     	;# 
  3143  0EA6                     	;# 
  3144  0EA7                     	;# 
  3145  0F0F                     	;# 
  3146  0F10                     	;# 
  3147  0F11                     	;# 
  3148  0F12                     	;# 
  3149  0F13                     	;# 
  3150  0F14                     	;# 
  3151  0F15                     	;# 
  3152  0F16                     	;# 
  3153  0F17                     	;# 
  3154  0F18                     	;# 
  3155  0F19                     	;# 
  3156  0F1A                     	;# 
  3157  0F1B                     	;# 
  3158  0F1C                     	;# 
  3159  0F1D                     	;# 
  3160  0F1E                     	;# 
  3161  0F1F                     	;# 
  3162  0F20                     	;# 
  3163  0F21                     	;# 
  3164  0F22                     	;# 
  3165  0F23                     	;# 
  3166  0F24                     	;# 
  3167  0F25                     	;# 
  3168  0F26                     	;# 
  3169  0F27                     	;# 
  3170  0F28                     	;# 
  3171  0F29                     	;# 
  3172  0F2A                     	;# 
  3173  0F2B                     	;# 
  3174  0F2C                     	;# 
  3175  0F2D                     	;# 
  3176  0F2E                     	;# 
  3177  0F2F                     	;# 
  3178  0F30                     	;# 
  3179  0F31                     	;# 
  3180  0F32                     	;# 
  3181  0F33                     	;# 
  3182  0F34                     	;# 
  3183  0F35                     	;# 
  3184  0F36                     	;# 
  3185  0F37                     	;# 
  3186  0FE4                     	;# 
  3187  0FE5                     	;# 
  3188  0FE6                     	;# 
  3189  0FE7                     	;# 
  3190  0FE8                     	;# 
  3191  0FE9                     	;# 
  3192  0FEA                     	;# 
  3193  0FEB                     	;# 
  3194  0FED                     	;# 
  3195  0FEE                     	;# 
  3196  0FEF                     	;# 
  3197                           
  3198 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  3199  0000                     
  3200 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  3201  0000                     
  3202 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  3203  0000                     
  3204                           	psect	nvBANK2
  3205  015E                     __pnvBANK2:	
  3206  015E                     _EUSART_ErrorHandler:	
  3207  015E                     	ds	2
  3208  0160                     _EUSART_OverrunErrorHandler:	
  3209  0160                     	ds	2
  3210  0162                     _EUSART_FramingErrorHandler:	
  3211  0162                     	ds	2
  3212  001B                     _PR2	set	27
  3213  001A                     _TMR2	set	26
  3214  001C                     _T2CONbits	set	28
  3215  001F                     _T2RSTbits	set	31
  3216  001D                     _T2HLTbits	set	29
  3217  001C                     _T2CON	set	28
  3218  0010                     _PIR1bits	set	16
  3219  001A                     _T2TMR	set	26
  3220  001B                     _T2PR	set	27
  3221  001F                     _T2RST	set	31
  3222  001D                     _T2HLT	set	29
  3223  001E                     _T2CLKCON	set	30
  3224  009D                     _ADCON0bits	set	157
  3225  009D                     _ADCON0	set	157
  3226  009C                     _ADRESH	set	156
  3227  009B                     _ADRESL	set	155
  3228  009F                     _ADCON2	set	159
  3229  009E                     _ADCON1	set	158
  3230  0098                     _OSCTUNE	set	152
  3231  0099                     _OSCCON	set	153
  3232  0095                     _OPTION_REGbits	set	149
  3233  008E                     _TRISC	set	142
  3234  008D                     _TRISB	set	141
  3235  008C                     _TRISA	set	140
  3236  0116                     _BORCON	set	278
  3237  010E                     _LATC	set	270
  3238  010D                     _LATB	set	269
  3239  010C                     _LATA	set	268
  3240  019A                     _TX1REG	set	410
  3241  0199                     _RC1REG	set	409
  3242  019D                     _RC1STAbits	set	413
  3243  019E                     _TX1STAbits	set	414
  3244  019C                     _SPBRGH	set	412
  3245  019B                     _SPBRGL	set	411
  3246  019E                     _TX1STA	set	414
  3247  019D                     _RC1STA	set	413
  3248  019F                     _BAUD1CON	set	415
  3249  018C                     _ANSELA	set	396
  3250  018D                     _ANSELB	set	397
  3251  018E                     _ANSELC	set	398
  3252  020E                     _WPUC	set	526
  3253  020C                     _WPUA	set	524
  3254  020D                     _WPUB	set	525
  3255  029E                     _CCPTMRSbits	set	670
  3256  028E                     _ODCONC	set	654
  3257  028D                     _ODCONB	set	653
  3258  028C                     _ODCONA	set	652
  3259  030E                     _SLRCONC	set	782
  3260  030D                     _SLRCONB	set	781
  3261  030C                     _SLRCONA	set	780
  3262  038E                     _INLVLC	set	910
  3263  038D                     _INLVLB	set	909
  3264  038C                     _INLVLA	set	908
  3265  0617                     _PWM3DCL	set	1559
  3266  0618                     _PWM3DCH	set	1560
  3267  0619                     _PWM3CON	set	1561
  3268  0E24                     _RXPPS	set	3620
  3269  0E9F                     _RB7PPS	set	3743
  3270  0E9E                     _RB6PPS	set	3742
  3271                           
  3272                           	psect	stringtext1
  3273  1800                     __pstringtext1:	
  3274  1800                     STR_1:	
  3275  1800  3425               	retlw	37	;'%'
  3276  1801  342E               	retlw	46	;'.'
  3277  1802  3434               	retlw	52	;'4'
  3278  1803  3466               	retlw	102	;'f'
  3279  1804  340A               	retlw	10
  3280  1805  3400               	retlw	0
  3281                           
  3282                           	psect	stringtext2
  3283  1806                     __pstringtext2:	
  3284  1806                     STR_2:	
  3285  1806  3449               	retlw	73	;'I'
  3286  1807  344E               	retlw	78	;'N'
  3287  1808  3446               	retlw	70	;'F'
  3288  1809  3400               	retlw	0
  3289                           
  3290                           	psect	stringtext3
  3291  180A                     __pstringtext3:	
  3292  180A                     STR_6:	
  3293  180A  344E               	retlw	78	;'N'
  3294  180B  3441               	retlw	65	;'A'
  3295  180C  344E               	retlw	78	;'N'
  3296  180D  3400               	retlw	0
  3297                           
  3298                           	psect	stringtext4
  3299  180E                     __pstringtext4:	
  3300  180E                     STR_3:	
  3301  180E  3469               	retlw	105	;'i'
  3302  180F  346E               	retlw	110	;'n'
  3303  1810  3466               	retlw	102	;'f'
  3304  1811  3400               	retlw	0
  3305                           
  3306                           	psect	stringtext5
  3307  1812                     __pstringtext5:	
  3308  1812                     STR_7:	
  3309  1812  346E               	retlw	110	;'n'
  3310  1813  3461               	retlw	97	;'a'
  3311  1814  346E               	retlw	110	;'n'
  3312  1815  3400               	retlw	0
  3313                           
  3314                           	psect	stringtext6
  3315  1816                     __pstringtext6:	
  3316  1816                     STR_10:	
  3317  1816  346C               	retlw	108	;'l'
  3318  1817  3466               	retlw	102	;'f'
  3319  1818  3400               	retlw	0
  3320                           
  3321                           	psect	stringtext7
  3322  0000                     __pstringtext7:	
  3323  1816                     
  3324                           ; #config settings
  3325  0000                     
  3326                           	psect	cinit
  3327  07EE                     start_initialization:	
  3328  07EE                     __initialization:	
  3329                           
  3330                           ; Clear objects allocated to BANK2
  3331  07EE  304B               	movlw	low __pbssBANK2
  3332  07EF  0084               	movwf	4
  3333  07F0  3001               	movlw	high __pbssBANK2
  3334  07F1  0085               	movwf	5
  3335  07F2  3013               	movlw	19
  3336  07F3  3190  2093  3187   	fcall	clear_ram0
  3337                           
  3338                           ; Clear objects allocated to BANK3
  3339  07F6  30A0               	movlw	low __pbssBANK3
  3340  07F7  0084               	movwf	4
  3341  07F8  3001               	movlw	high __pbssBANK3
  3342  07F9  0085               	movwf	5
  3343  07FA  3050               	movlw	80
  3344  07FB  3190  2093         	fcall	clear_ram0
  3345  07FD                     end_of_initialization:	
  3346                           ;End of C runtime variable initialization code
  3347                           
  3348  07FD                     __end_of__initialization:	
  3349  07FD  0020               	movlb	0
  3350  07FE  3196  2E46         	ljmp	_main	;jump to C main() function
  3351                           
  3352                           	psect	bssBANK2
  3353  014B                     __pbssBANK2:	
  3354  014B                     floorf@F524:	
  3355  014B                     	ds	4
  3356  014F                     ___fpclassifyf@F463:	
  3357  014F                     	ds	4
  3358  0153                     _nout:	
  3359  0153                     	ds	2
  3360  0155                     _width:	
  3361  0155                     	ds	2
  3362  0157                     _prec:	
  3363  0157                     	ds	2
  3364  0159                     _flags:	
  3365  0159                     	ds	2
  3366  015B                     _ADC_InterruptHandler:	
  3367  015B                     	ds	2
  3368  015D                     _eusartRxLastError:	
  3369  015D                     	ds	1
  3370                           
  3371                           	psect	bssBANK3
  3372  01A0                     __pbssBANK3:	
  3373  01A0                     _dbuf:	
  3374  01A0                     	ds	80
  3375                           
  3376                           	psect	clrtext
  3377  1093                     clear_ram0:	
  3378                           ;	Called with FSR0 containing the base address, and
  3379                           ;	WREG with the size to clear
  3380                           
  3381  1093  0064               	clrwdt	;clear the watchdog before getting into this loop
  3382  1094                     clrloop0:	
  3383  1094  0180               	clrf	0	;clear RAM location pointed to by FSR
  3384  1095  3101               	addfsr 0,1
  3385  1096  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3386  1097  2894               	goto	clrloop0	;have we reached the end yet?
  3387  1098  3400               	retlw	0	;all done for this memory range, return
  3388                           
  3389                           	psect	cstackBANK2
  3390  0120                     __pcstackBANK2:	
  3391  0120                     vfprintf@fp:	
  3392                           
  3393                           ; 1 bytes @ 0x0
  3394  0120                     	ds	1
  3395  0121                     vfprintf@cfmt:	
  3396                           
  3397                           ; 2 bytes @ 0x1
  3398  0121                     	ds	2
  3399  0123                     ?_printf:	
  3400  0123                     printf@fmt:	
  3401                           ; 2 bytes @ 0x3
  3402                           
  3403                           
  3404                           ; 2 bytes @ 0x3
  3405  0123                     	ds	8
  3406  012B                     printf@ap:	
  3407                           
  3408                           ; 1 bytes @ 0xB
  3409  012B                     	ds	1
  3410  012C                     ??_main:	
  3411                           
  3412                           ; 1 bytes @ 0xC
  3413  012C                     	ds	1
  3414  012D                     main@Sinal:	
  3415                           
  3416                           ; 2 bytes @ 0xD
  3417  012D                     	ds	2
  3418  012F                     main@x:	
  3419                           
  3420                           ; 4 bytes @ 0xF
  3421  012F                     	ds	4
  3422  0133                     main@Umidade:	
  3423                           
  3424                           ; 4 bytes @ 0x13
  3425  0133                     	ds	4
  3426  0137                     main@y:	
  3427                           
  3428                           ; 4 bytes @ 0x17
  3429  0137                     	ds	4
  3430  013B                     main@z:	
  3431                           
  3432                           ; 4 bytes @ 0x1B
  3433  013B                     	ds	4
  3434  013F                     main@Soma:	
  3435                           
  3436                           ; 4 bytes @ 0x1F
  3437  013F                     	ds	4
  3438  0143                     main@Soma2:	
  3439                           
  3440                           ; 4 bytes @ 0x23
  3441  0143                     	ds	4
  3442  0147                     main@i:	
  3443                           
  3444                           ; 2 bytes @ 0x27
  3445  0147                     	ds	2
  3446  0149                     main@j:	
  3447                           
  3448                           ; 2 bytes @ 0x29
  3449  0149                     	ds	2
  3450                           
  3451                           	psect	cstackBANK1
  3452  00A0                     __pcstackBANK1:	
  3453  00A0                     efgtoa@ou:	
  3454                           
  3455                           ; 4 bytes @ 0x0
  3456  00A0                     	ds	4
  3457  00A4                     _efgtoa$799:	
  3458                           
  3459                           ; 2 bytes @ 0x4
  3460  00A4                     	ds	2
  3461  00A6                     _efgtoa$800:	
  3462                           
  3463                           ; 2 bytes @ 0x6
  3464  00A6                     	ds	2
  3465  00A8                     _efgtoa$805:	
  3466                           
  3467                           ; 2 bytes @ 0x8
  3468  00A8                     	ds	2
  3469  00AA                     _efgtoa$809:	
  3470                           
  3471                           ; 2 bytes @ 0xA
  3472  00AA                     	ds	2
  3473  00AC                     _efgtoa$810:	
  3474                           
  3475                           ; 2 bytes @ 0xC
  3476  00AC                     	ds	2
  3477  00AE                     _efgtoa$811:	
  3478                           
  3479                           ; 2 bytes @ 0xE
  3480  00AE                     	ds	2
  3481  00B0                     efgtoa@t:	
  3482                           
  3483                           ; 2 bytes @ 0x10
  3484  00B0                     	ds	2
  3485  00B2                     efgtoa@pp:	
  3486                           
  3487                           ; 2 bytes @ 0x12
  3488  00B2                     	ds	2
  3489  00B4                     efgtoa@m:	
  3490                           
  3491                           ; 2 bytes @ 0x14
  3492  00B4                     	ds	2
  3493  00B6                     efgtoa@ne:	
  3494                           
  3495                           ; 2 bytes @ 0x16
  3496  00B6                     	ds	2
  3497  00B8                     efgtoa@d:	
  3498                           
  3499                           ; 2 bytes @ 0x18
  3500  00B8                     	ds	2
  3501  00BA                     efgtoa@sign:	
  3502                           
  3503                           ; 2 bytes @ 0x1A
  3504  00BA                     	ds	2
  3505  00BC                     efgtoa@p:	
  3506                           
  3507                           ; 2 bytes @ 0x1C
  3508  00BC                     	ds	2
  3509  00BE                     efgtoa@fp:	
  3510                           
  3511                           ; 1 bytes @ 0x1E
  3512  00BE                     	ds	1
  3513  00BF                     efgtoa@nmode:	
  3514                           
  3515                           ; 1 bytes @ 0x1F
  3516  00BF                     	ds	1
  3517  00C0                     efgtoa@w:	
  3518                           
  3519                           ; 2 bytes @ 0x20
  3520  00C0                     	ds	2
  3521  00C2                     efgtoa@mode:	
  3522                           
  3523                           ; 1 bytes @ 0x22
  3524  00C2                     	ds	1
  3525  00C3                     efgtoa@h:	
  3526                           
  3527                           ; 4 bytes @ 0x23
  3528  00C3                     	ds	4
  3529  00C7                     efgtoa@l:	
  3530                           
  3531                           ; 4 bytes @ 0x27
  3532  00C7                     	ds	4
  3533  00CB                     efgtoa@i:	
  3534                           
  3535                           ; 2 bytes @ 0x2B
  3536  00CB                     	ds	2
  3537  00CD                     efgtoa@g:	
  3538                           
  3539                           ; 4 bytes @ 0x2D
  3540  00CD                     	ds	4
  3541  00D1                     efgtoa@e:	
  3542                           
  3543                           ; 2 bytes @ 0x31
  3544  00D1                     	ds	2
  3545  00D3                     efgtoa@n:	
  3546                           
  3547                           ; 2 bytes @ 0x33
  3548  00D3                     	ds	2
  3549  00D5                     efgtoa@u:	
  3550                           
  3551                           ; 4 bytes @ 0x35
  3552  00D5                     	ds	4
  3553  00D9                     ??_vfpfcnvrt:	
  3554                           
  3555                           ; 1 bytes @ 0x39
  3556  00D9                     	ds	6
  3557  00DF                     _vfpfcnvrt$825:	
  3558                           
  3559                           ; 2 bytes @ 0x3F
  3560  00DF                     	ds	2
  3561  00E1                     _vfpfcnvrt$829:	
  3562                           
  3563                           ; 2 bytes @ 0x41
  3564  00E1                     	ds	2
  3565  00E3                     vfpfcnvrt@f:	
  3566                           
  3567                           ; 4 bytes @ 0x43
  3568  00E3                     	ds	4
  3569  00E7                     vfpfcnvrt@ct:	
  3570                           
  3571                           ; 3 bytes @ 0x47
  3572  00E7                     	ds	3
  3573  00EA                     vfpfcnvrt@c:	
  3574                           
  3575                           ; 1 bytes @ 0x4A
  3576  00EA                     	ds	1
  3577  00EB                     vfpfcnvrt@fp:	
  3578                           
  3579                           ; 1 bytes @ 0x4B
  3580  00EB                     	ds	1
  3581  00EC                     ?_vfprintf:	
  3582  00EC                     vfprintf@fmt:	
  3583                           ; 2 bytes @ 0x4C
  3584                           
  3585                           
  3586                           ; 2 bytes @ 0x4C
  3587  00EC                     	ds	2
  3588  00EE                     vfprintf@ap:	
  3589                           
  3590                           ; 1 bytes @ 0x4E
  3591  00EE                     	ds	1
  3592  00EF                     ??_printf:	
  3593                           
  3594                           ; 1 bytes @ 0x4F
  3595  00EF                     	ds	1
  3596                           
  3597                           	psect	cstackCOMMON
  3598  0070                     __pcstackCOMMON:	
  3599  0070                     ?___fleq:	
  3600  0070                     ?_OSCILLATOR_Initialize:	
  3601                           ; 1 bit 
  3602                           
  3603  0070                     ??_OSCILLATOR_Initialize:	
  3604                           ; 1 bytes @ 0x0
  3605                           
  3606  0070                     ?_PWM3_Initialize:	
  3607                           ; 1 bytes @ 0x0
  3608                           
  3609  0070                     ??_PWM3_Initialize:	
  3610                           ; 1 bytes @ 0x0
  3611                           
  3612  0070                     ?_TMR2_Initialize:	
  3613                           ; 1 bytes @ 0x0
  3614                           
  3615  0070                     ??_TMR2_Initialize:	
  3616                           ; 1 bytes @ 0x0
  3617                           
  3618  0070                     ?_ADC_Initialize:	
  3619                           ; 1 bytes @ 0x0
  3620                           
  3621  0070                     ??_ADC_Initialize:	
  3622                           ; 1 bytes @ 0x0
  3623                           
  3624  0070                     ?_EUSART_Initialize:	
  3625                           ; 1 bytes @ 0x0
  3626                           
  3627  0070                     ?_EUSART_SetFramingErrorHandler:	
  3628                           ; 1 bytes @ 0x0
  3629                           
  3630  0070                     ?_EUSART_SetOverrunErrorHandler:	
  3631                           ; 1 bytes @ 0x0
  3632                           
  3633  0070                     ?_EUSART_SetErrorHandler:	
  3634                           ; 1 bytes @ 0x0
  3635                           
  3636  0070                     ?_strcpy:	
  3637                           ; 1 bytes @ 0x0
  3638                           
  3639  0070                     ?_PIN_MANAGER_Initialize:	
  3640                           ; 1 bytes @ 0x0
  3641                           
  3642  0070                     ??_PIN_MANAGER_Initialize:	
  3643                           ; 1 bytes @ 0x0
  3644                           
  3645  0070                     ?_SYSTEM_Initialize:	
  3646                           ; 1 bytes @ 0x0
  3647                           
  3648  0070                     ?_ADC_SelectChannel:	
  3649                           ; 1 bytes @ 0x0
  3650                           
  3651  0070                     ??_ADC_SelectChannel:	
  3652                           ; 1 bytes @ 0x0
  3653                           
  3654  0070                     ?_ADC_StartConversion:	
  3655                           ; 1 bytes @ 0x0
  3656                           
  3657  0070                     ??_ADC_StartConversion:	
  3658                           ; 1 bytes @ 0x0
  3659                           
  3660  0070                     ?_EUSART_Write:	
  3661                           ; 1 bytes @ 0x0
  3662                           
  3663  0070                     ??_EUSART_Write:	
  3664                           ; 1 bytes @ 0x0
  3665                           
  3666  0070                     ?_putch:	
  3667                           ; 1 bytes @ 0x0
  3668                           
  3669  0070                     ?_main:	
  3670                           ; 1 bytes @ 0x0
  3671                           
  3672  0070                     ?_strlen:	
  3673                           ; 1 bytes @ 0x0
  3674                           
  3675  0070                     ?___fpclassifyf:	
  3676                           ; 2 bytes @ 0x0
  3677                           
  3678  0070                     ?_isupper:	
  3679                           ; 2 bytes @ 0x0
  3680                           
  3681  0070                     ?_isdigit:	
  3682                           ; 2 bytes @ 0x0
  3683                           
  3684  0070                     ?_strncmp:	
  3685                           ; 2 bytes @ 0x0
  3686                           
  3687  0070                     ?__Umul8_16:	
  3688                           ; 2 bytes @ 0x0
  3689                           
  3690  0070                     ?_isspace:	
  3691                           ; 2 bytes @ 0x0
  3692                           
  3693  0070                     ?_ADC_GetConversionResult:	
  3694                           ; 2 bytes @ 0x0
  3695                           
  3696  0070                     ?___wmul:	
  3697                           ; 2 bytes @ 0x0
  3698                           
  3699  0070                     ?___awdiv:	
  3700                           ; 2 bytes @ 0x0
  3701                           
  3702  0070                     ?___awmod:	
  3703                           ; 2 bytes @ 0x0
  3704                           
  3705  0070                     ?___flneg:	
  3706                           ; 2 bytes @ 0x0
  3707                           
  3708  0070                     ?___fltol:	
  3709                           ; 4 bytes @ 0x0
  3710                           
  3711  0070                     ?___fldiv:	
  3712                           ; 4 bytes @ 0x0
  3713                           
  3714  0070                     ?___xxtofl:	
  3715                           ; 4 bytes @ 0x0
  3716                           
  3717  0070                     EUSART_Write@txData:	
  3718                           ; 4 bytes @ 0x0
  3719                           
  3720  0070                     __Umul8_16@multiplicand:	
  3721                           ; 1 bytes @ 0x0
  3722                           
  3723  0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3724                           ; 1 bytes @ 0x0
  3725                           
  3726  0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3727                           ; 2 bytes @ 0x0
  3728                           
  3729  0070                     EUSART_SetErrorHandler@interruptHandler:	
  3730                           ; 2 bytes @ 0x0
  3731                           
  3732  0070                     ___wmul@multiplier:	
  3733                           ; 2 bytes @ 0x0
  3734                           
  3735  0070                     ___awdiv@divisor:	
  3736                           ; 2 bytes @ 0x0
  3737                           
  3738  0070                     ___awmod@divisor:	
  3739                           ; 2 bytes @ 0x0
  3740                           
  3741  0070                     isdigit@c:	
  3742                           ; 2 bytes @ 0x0
  3743                           
  3744  0070                     isspace@c:	
  3745                           ; 2 bytes @ 0x0
  3746                           
  3747  0070                     isupper@c:	
  3748                           ; 2 bytes @ 0x0
  3749                           
  3750  0070                     strcpy@src:	
  3751                           ; 2 bytes @ 0x0
  3752                           
  3753  0070                     strncmp@_r:	
  3754                           ; 2 bytes @ 0x0
  3755                           
  3756  0070                     ___fleq@ff1:	
  3757                           ; 2 bytes @ 0x0
  3758                           
  3759  0070                     ___flneg@f1:	
  3760                           ; 4 bytes @ 0x0
  3761                           
  3762  0070                     ___fltol@f1:	
  3763                           ; 4 bytes @ 0x0
  3764                           
  3765  0070                     ___fldiv@a:	
  3766                           ; 4 bytes @ 0x0
  3767                           
  3768  0070                     ___xxtofl@val:	
  3769                           ; 4 bytes @ 0x0
  3770                           
  3771  0070                     ___fpclassifyf@x:	
  3772                           ; 4 bytes @ 0x0
  3773                           
  3774                           
  3775                           ; 4 bytes @ 0x0
  3776  0070                     	ds	1
  3777  0071                     ??_putch:	
  3778  0071                     ADC_SelectChannel@channel:	
  3779                           ; 1 bytes @ 0x1
  3780                           
  3781  0071                     putch@txData:	
  3782                           ; 1 bytes @ 0x1
  3783                           
  3784                           
  3785                           ; 1 bytes @ 0x1
  3786  0071                     	ds	1
  3787  0072                     ??_EUSART_Initialize:	
  3788  0072                     ??_EUSART_SetFramingErrorHandler:	
  3789                           ; 1 bytes @ 0x2
  3790                           
  3791  0072                     ??_EUSART_SetOverrunErrorHandler:	
  3792                           ; 1 bytes @ 0x2
  3793                           
  3794  0072                     ??_EUSART_SetErrorHandler:	
  3795                           ; 1 bytes @ 0x2
  3796                           
  3797  0072                     ??_strlen:	
  3798                           ; 1 bytes @ 0x2
  3799                           
  3800  0072                     ??_isupper:	
  3801                           ; 1 bytes @ 0x2
  3802                           
  3803  0072                     ??_strcpy:	
  3804                           ; 1 bytes @ 0x2
  3805                           
  3806  0072                     ??_isdigit:	
  3807                           ; 1 bytes @ 0x2
  3808                           
  3809  0072                     ??__Umul8_16:	
  3810                           ; 1 bytes @ 0x2
  3811                           
  3812  0072                     ??_isspace:	
  3813                           ; 1 bytes @ 0x2
  3814                           
  3815  0072                     ??_SYSTEM_Initialize:	
  3816                           ; 1 bytes @ 0x2
  3817                           
  3818  0072                     ??_ADC_GetConversionResult:	
  3819                           ; 1 bytes @ 0x2
  3820                           
  3821  0072                     ?_fputc:	
  3822                           ; 1 bytes @ 0x2
  3823                           
  3824  0072                     ___wmul@multiplicand:	
  3825                           ; 2 bytes @ 0x2
  3826                           
  3827  0072                     ___awdiv@dividend:	
  3828                           ; 2 bytes @ 0x2
  3829                           
  3830  0072                     ___awmod@dividend:	
  3831                           ; 2 bytes @ 0x2
  3832                           
  3833  0072                     fputc@c:	
  3834                           ; 2 bytes @ 0x2
  3835                           
  3836  0072                     strncmp@n:	
  3837                           ; 2 bytes @ 0x2
  3838                           
  3839                           
  3840                           ; 2 bytes @ 0x2
  3841  0072                     	ds	1
  3842  0073                     strlen@a:	
  3843                           
  3844                           ; 1 bytes @ 0x3
  3845  0073                     	ds	1
  3846  0074                     ??___fpclassifyf:	
  3847  0074                     ??_strncmp:	
  3848                           ; 1 bytes @ 0x4
  3849                           
  3850  0074                     ??___wmul:	
  3851                           ; 1 bytes @ 0x4
  3852                           
  3853  0074                     ??___awdiv:	
  3854                           ; 1 bytes @ 0x4
  3855                           
  3856  0074                     ??___awmod:	
  3857                           ; 1 bytes @ 0x4
  3858                           
  3859  0074                     ??___flneg:	
  3860                           ; 1 bytes @ 0x4
  3861                           
  3862  0074                     ??___fltol:	
  3863                           ; 1 bytes @ 0x4
  3864                           
  3865  0074                     ??___xxtofl:	
  3866                           ; 1 bytes @ 0x4
  3867                           
  3868  0074                     _isspace$1169:	
  3869                           ; 1 bytes @ 0x4
  3870                           
  3871  0074                     fputc@fp:	
  3872                           ; 1 bytes @ 0x4
  3873                           
  3874  0074                     strlen@s:	
  3875                           ; 1 bytes @ 0x4
  3876                           
  3877  0074                     ___wmul@product:	
  3878                           ; 1 bytes @ 0x4
  3879                           
  3880  0074                     strcpy@s:	
  3881                           ; 2 bytes @ 0x4
  3882                           
  3883  0074                     __Umul8_16@product:	
  3884                           ; 2 bytes @ 0x4
  3885                           
  3886  0074                     ___fleq@ff2:	
  3887                           ; 2 bytes @ 0x4
  3888                           
  3889  0074                     ___fldiv@b:	
  3890                           ; 4 bytes @ 0x4
  3891                           
  3892                           
  3893                           ; 4 bytes @ 0x4
  3894  0074                     	ds	1
  3895  0075                     ??_fputc:	
  3896  0075                     ___awdiv@counter:	
  3897                           ; 1 bytes @ 0x5
  3898                           
  3899  0075                     ___awmod@counter:	
  3900                           ; 1 bytes @ 0x5
  3901                           
  3902  0075                     strncmp@_l:	
  3903                           ; 1 bytes @ 0x5
  3904                           
  3905                           
  3906                           ; 1 bytes @ 0x5
  3907  0075                     	ds	1
  3908  0076                     ?_tolower:	
  3909  0076                     ?_atoi:	
  3910                           ; 2 bytes @ 0x6
  3911                           
  3912  0076                     ___awdiv@sign:	
  3913                           ; 2 bytes @ 0x6
  3914                           
  3915  0076                     ___awmod@sign:	
  3916                           ; 1 bytes @ 0x6
  3917                           
  3918  0076                     strcpy@d:	
  3919                           ; 1 bytes @ 0x6
  3920                           
  3921  0076                     atoi@s:	
  3922                           ; 1 bytes @ 0x6
  3923                           
  3924  0076                     strncmp@r:	
  3925                           ; 2 bytes @ 0x6
  3926                           
  3927  0076                     tolower@c:	
  3928                           ; 2 bytes @ 0x6
  3929                           
  3930  0076                     __Umul8_16@word_mpld:	
  3931                           ; 2 bytes @ 0x6
  3932                           
  3933                           
  3934                           ; 2 bytes @ 0x6
  3935  0076                     	ds	1
  3936  0077                     strcpy@dest:	
  3937  0077                     ___awdiv@quotient:	
  3938                           ; 1 bytes @ 0x7
  3939                           
  3940                           
  3941                           ; 2 bytes @ 0x7
  3942  0077                     	ds	1
  3943  0078                     ??_tolower:	
  3944  0078                     ??_atoi:	
  3945                           ; 1 bytes @ 0x8
  3946                           
  3947  0078                     ??___fleq:	
  3948                           ; 1 bytes @ 0x8
  3949                           
  3950  0078                     ??___fldiv:	
  3951                           ; 1 bytes @ 0x8
  3952                           
  3953  0078                     ___xxtofl@sign:	
  3954                           ; 1 bytes @ 0x8
  3955                           
  3956  0078                     strncmp@l:	
  3957                           ; 1 bytes @ 0x8
  3958                           
  3959  0078                     __Umul8_16@multiplier:	
  3960                           ; 1 bytes @ 0x8
  3961                           
  3962                           
  3963                           ; 1 bytes @ 0x8
  3964  0078                     	ds	1
  3965  0079                     ___fltol@sign1:	
  3966  0079                     ___xxtofl@exp:	
  3967                           ; 1 bytes @ 0x9
  3968                           
  3969                           
  3970                           ; 1 bytes @ 0x9
  3971  0079                     	ds	1
  3972  007A                     ?_fputs:	
  3973  007A                     ___fltol@exp1:	
  3974                           ; 2 bytes @ 0xA
  3975                           
  3976  007A                     fputs@fp:	
  3977                           ; 1 bytes @ 0xA
  3978                           
  3979  007A                     ___xxtofl@arg:	
  3980                           ; 1 bytes @ 0xA
  3981                           
  3982                           
  3983                           ; 4 bytes @ 0xA
  3984  007A                     	ds	1
  3985  007B                     ??_fputs:	
  3986  007B                     ?_PWM3_LoadDutyValue:	
  3987                           ; 1 bytes @ 0xB
  3988                           
  3989  007B                     PWM3_LoadDutyValue@dutyValue:	
  3990                           ; 1 bytes @ 0xB
  3991                           
  3992                           
  3993                           ; 2 bytes @ 0xB
  3994  007B                     	ds	1
  3995  007C                     _tolower$1243:	
  3996                           
  3997                           ; 2 bytes @ 0xC
  3998  007C                     	ds	2
  3999  007E                     ??___flsub:	
  4000                           
  4001                           	psect	cstackBANK0
  4002  0020                     __pcstackBANK0:	
  4003                           ; 1 bytes @ 0xE
  4004                           
  4005  0020                     ??_PWM3_LoadDutyValue:	
  4006  0020                     fputs@c:	
  4007                           ; 1 bytes @ 0x0
  4008                           
  4009  0020                     ___fpclassifyf@e:	
  4010                           ; 1 bytes @ 0x0
  4011                           
  4012  0020                     atoi@neg:	
  4013                           ; 2 bytes @ 0x0
  4014                           
  4015  0020                     ___fldiv@rem:	
  4016                           ; 2 bytes @ 0x0
  4017                           
  4018                           
  4019                           ; 4 bytes @ 0x0
  4020  0020                     	ds	1
  4021  0021                     fputs@i:	
  4022                           
  4023                           ; 2 bytes @ 0x1
  4024  0021                     	ds	1
  4025  0022                     _atoi$1138:	
  4026  0022                     ___fpclassifyf@u:	
  4027                           ; 2 bytes @ 0x2
  4028                           
  4029                           
  4030                           ; 4 bytes @ 0x2
  4031  0022                     	ds	1
  4032  0023                     fputs@s:	
  4033                           
  4034                           ; 1 bytes @ 0x3
  4035  0023                     	ds	1
  4036  0024                     ?_pad:	
  4037  0024                     pad@buf:	
  4038                           ; 2 bytes @ 0x4
  4039                           
  4040  0024                     ___fldiv@sign:	
  4041                           ; 1 bytes @ 0x4
  4042                           
  4043  0024                     _atoi$1140:	
  4044                           ; 1 bytes @ 0x4
  4045                           
  4046                           
  4047                           ; 2 bytes @ 0x4
  4048  0024                     	ds	1
  4049  0025                     pad@p:	
  4050  0025                     ___fldiv@new_exp:	
  4051                           ; 2 bytes @ 0x5
  4052                           
  4053                           
  4054                           ; 2 bytes @ 0x5
  4055  0025                     	ds	1
  4056  0026                     _atoi$1139:	
  4057                           
  4058                           ; 1 bytes @ 0x6
  4059  0026                     	ds	1
  4060  0027                     ??_pad:	
  4061  0027                     atoi@n:	
  4062                           ; 1 bytes @ 0x7
  4063                           
  4064  0027                     ___fldiv@grs:	
  4065                           ; 2 bytes @ 0x7
  4066                           
  4067                           
  4068                           ; 4 bytes @ 0x7
  4069  0027                     	ds	1
  4070  0028                     pad@i:	
  4071                           
  4072                           ; 2 bytes @ 0x8
  4073  0028                     	ds	2
  4074  002A                     pad@w:	
  4075                           
  4076                           ; 2 bytes @ 0xA
  4077  002A                     	ds	1
  4078  002B                     ___fldiv@bexp:	
  4079                           
  4080                           ; 1 bytes @ 0xB
  4081  002B                     	ds	1
  4082  002C                     pad@fp:	
  4083  002C                     ___fldiv@aexp:	
  4084                           ; 1 bytes @ 0xC
  4085                           
  4086                           
  4087                           ; 1 bytes @ 0xC
  4088  002C                     	ds	1
  4089  002D                     ?_floorf:	
  4090  002D                     ?___flmul:	
  4091                           ; 4 bytes @ 0xD
  4092                           
  4093  002D                     ___flmul@b:	
  4094                           ; 4 bytes @ 0xD
  4095                           
  4096  002D                     floorf@x:	
  4097                           ; 4 bytes @ 0xD
  4098                           
  4099                           
  4100                           ; 4 bytes @ 0xD
  4101  002D                     	ds	4
  4102  0031                     ??_floorf:	
  4103  0031                     ___flmul@a:	
  4104                           ; 1 bytes @ 0x11
  4105                           
  4106                           
  4107                           ; 4 bytes @ 0x11
  4108  0031                     	ds	4
  4109  0035                     ??___flmul:	
  4110                           
  4111                           ; 1 bytes @ 0x15
  4112  0035                     	ds	2
  4113  0037                     floorf@m:	
  4114                           
  4115                           ; 4 bytes @ 0x17
  4116  0037                     	ds	3
  4117  003A                     ___flmul@sign:	
  4118                           
  4119                           ; 1 bytes @ 0x1A
  4120  003A                     	ds	1
  4121  003B                     floorf@e:	
  4122  003B                     ___flmul@grs:	
  4123                           ; 2 bytes @ 0x1B
  4124                           
  4125                           
  4126                           ; 4 bytes @ 0x1B
  4127  003B                     	ds	2
  4128  003D                     floorf@u:	
  4129                           
  4130                           ; 4 bytes @ 0x1D
  4131  003D                     	ds	2
  4132  003F                     ___flmul@aexp:	
  4133                           
  4134                           ; 1 bytes @ 0x1F
  4135  003F                     	ds	1
  4136  0040                     ___flmul@bexp:	
  4137                           
  4138                           ; 1 bytes @ 0x20
  4139  0040                     	ds	1
  4140  0041                     ___flmul@prod:	
  4141                           
  4142                           ; 4 bytes @ 0x21
  4143  0041                     	ds	4
  4144  0045                     ___flmul@temp:	
  4145                           
  4146                           ; 2 bytes @ 0x25
  4147  0045                     	ds	2
  4148  0047                     ?___flge:	
  4149  0047                     ?___fladd:	
  4150                           ; 1 bit 
  4151                           
  4152  0047                     ___flge@ff1:	
  4153                           ; 4 bytes @ 0x27
  4154                           
  4155  0047                     ___fladd@b:	
  4156                           ; 4 bytes @ 0x27
  4157                           
  4158                           
  4159                           ; 4 bytes @ 0x27
  4160  0047                     	ds	4
  4161  004B                     ___flge@ff2:	
  4162  004B                     ___fladd@a:	
  4163                           ; 4 bytes @ 0x2B
  4164                           
  4165                           
  4166                           ; 4 bytes @ 0x2B
  4167  004B                     	ds	4
  4168  004F                     ??___flge:	
  4169  004F                     ??___fladd:	
  4170                           ; 1 bytes @ 0x2F
  4171                           
  4172                           
  4173                           ; 1 bytes @ 0x2F
  4174  004F                     	ds	8
  4175  0057                     ___fladd@signs:	
  4176                           
  4177                           ; 1 bytes @ 0x37
  4178  0057                     	ds	1
  4179  0058                     ___fladd@aexp:	
  4180                           
  4181                           ; 1 bytes @ 0x38
  4182  0058                     	ds	1
  4183  0059                     ___fladd@bexp:	
  4184                           
  4185                           ; 1 bytes @ 0x39
  4186  0059                     	ds	1
  4187  005A                     ___fladd@grs:	
  4188                           
  4189                           ; 1 bytes @ 0x3A
  4190  005A                     	ds	1
  4191  005B                     ?___flsub:	
  4192  005B                     ___flsub@a:	
  4193                           ; 4 bytes @ 0x3B
  4194                           
  4195                           
  4196                           ; 4 bytes @ 0x3B
  4197  005B                     	ds	4
  4198  005F                     ___flsub@b:	
  4199                           
  4200                           ; 4 bytes @ 0x3F
  4201  005F                     	ds	4
  4202  0063                     ?_efgtoa:	
  4203  0063                     efgtoa@f:	
  4204                           ; 2 bytes @ 0x43
  4205                           
  4206                           
  4207                           ; 4 bytes @ 0x43
  4208  0063                     	ds	4
  4209  0067                     efgtoa@c:	
  4210                           
  4211                           ; 1 bytes @ 0x47
  4212  0067                     	ds	1
  4213  0068                     ??_efgtoa:	
  4214                           
  4215                           ; 1 bytes @ 0x48
  4216  0068                     	ds	4
  4217  006C                     ?_vfpfcnvrt:	
  4218  006C                     vfpfcnvrt@fmt:	
  4219                           ; 2 bytes @ 0x4C
  4220                           
  4221                           
  4222                           ; 1 bytes @ 0x4C
  4223  006C                     	ds	1
  4224  006D                     vfpfcnvrt@ap:	
  4225                           
  4226                           ; 1 bytes @ 0x4D
  4227  006D                     	ds	1
  4228  006E                     ??_vfprintf:	
  4229                           
  4230                           ; 1 bytes @ 0x4E
  4231  006E                     	ds	2
  4232                           
  4233                           	psect	maintext
  4234  1646                     __pmaintext:	
  4235 ;;
  4236 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4237 ;;
  4238 ;; *************** function _main *****************
  4239 ;; Defined at:
  4240 ;;		line 49 in file "main.c"
  4241 ;; Parameters:    Size  Location     Type
  4242 ;;		None
  4243 ;; Auto vars:     Size  Location     Type
  4244 ;;  Soma2           4   35[BANK2 ] float 
  4245 ;;  Soma            4   31[BANK2 ] float 
  4246 ;;  z               4   27[BANK2 ] float 
  4247 ;;  y               4   23[BANK2 ] float 
  4248 ;;  Umidade         4   19[BANK2 ] float 
  4249 ;;  x               4   15[BANK2 ] float 
  4250 ;;  j               2   41[BANK2 ] int 
  4251 ;;  i               2   39[BANK2 ] int 
  4252 ;;  Sinal           2   13[BANK2 ] unsigned short 
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  1    wreg      void 
  4255 ;; Registers used:
  4256 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4257 ;; Tracked objects:
  4258 ;;		On entry : B1F/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4263 ;;      Locals:         0       0       0      30       0       0       0       0       0       0       0       0       
      +0       0
  4264 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4265 ;;      Totals:         0       0       0      31       0       0       0       0       0       0       0       0       
      +0       0
  4266 ;;Total ram usage:       31 bytes
  4267 ;; Hardware stack levels required when called:    9
  4268 ;; This function calls:
  4269 ;;		_ADC_GetConversionResult
  4270 ;;		_ADC_Initialize
  4271 ;;		_ADC_SelectChannel
  4272 ;;		_ADC_StartConversion
  4273 ;;		_PWM3_LoadDutyValue
  4274 ;;		_SYSTEM_Initialize
  4275 ;;		___fladd
  4276 ;;		___fldiv
  4277 ;;		___flmul
  4278 ;;		___fltol
  4279 ;;		___xxtofl
  4280 ;;		_printf
  4281 ;; This function is called by:
  4282 ;;		Startup code after reset
  4283 ;; This function uses a non-reentrant model
  4284 ;;
  4285                           
  4286                           
  4287                           ;psect for function _main
  4288  1646                     _main:	
  4289                           
  4290                           ;main.c: 52:     SYSTEM_Initialize();
  4291                           
  4292                           ;incstack = 0
  4293                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4294  1646  3180  2005  3196   	fcall	_SYSTEM_Initialize
  4295                           
  4296                           ;main.c: 69:     ADC_Initialize();
  4297  1649  3190  20A8  3196   	fcall	_ADC_Initialize
  4298                           
  4299                           ;main.c: 76:     float Soma = 0;
  4300  164C  3000               	movlw	0
  4301  164D  0022               	movlb	2	; select bank2
  4302  164E  00C2               	movwf	(main@Soma+3)^(0+256)
  4303  164F  3000               	movlw	0
  4304  1650  00C1               	movwf	(main@Soma+2)^(0+256)
  4305  1651  3000               	movlw	0
  4306  1652  00C0               	movwf	(main@Soma+1)^(0+256)
  4307  1653  3000               	movlw	0
  4308  1654  00BF               	movwf	main@Soma^(0+256)
  4309                           
  4310                           ;main.c: 78:     float Soma2 = 0;
  4311  1655  3000               	movlw	0
  4312  1656                     L1:	
  4313  1656  00C6               	movwf	(main@Soma2+3)^(0+256)
  4314  1657  3000               	movlw	0
  4315  1658  00C5               	movwf	(main@Soma2+2)^(0+256)
  4316  1659  3000               	movlw	0
  4317  165A  00C4               	movwf	(main@Soma2+1)^(0+256)
  4318  165B  3000               	movlw	0
  4319  165C  00C3               	movwf	main@Soma2^(0+256)
  4320                           
  4321                           ;main.c: 83:     {;main.c: 84:         ADC_SelectChannel(IN_SINAL);
  4322                           
  4323                           ;main.c: 82:     while (1)
  4324  165D  3000               	movlw	0
  4325  165E  3188  2000  3196   	fcall	_ADC_SelectChannel
  4326                           
  4327                           ;main.c: 91:         for (j = 0; j<20; j++){
  4328  1661  0022               	movlb	2	; select bank2
  4329  1662  01C9               	clrf	main@j^(0+256)
  4330  1663  01CA               	clrf	(main@j+1)^(0+256)
  4331  1664                     l4217:	
  4332                           
  4333                           ;main.c: 92:             for (i = 0; i<10; i++){
  4334  1664  0022               	movlb	2	; select bank2
  4335  1665  01C7               	clrf	main@i^(0+256)
  4336  1666  01C8               	clrf	(main@i+1)^(0+256)
  4337  1667                     l4223:	
  4338                           
  4339                           ;main.c: 93:                 ADC_StartConversion();
  4340  1667  3190  2073  3196   	fcall	_ADC_StartConversion
  4341                           
  4342                           ;main.c: 94:                 Sinal = ADC_GetConversionResult();
  4343  166A  3190  207B  3196   	fcall	_ADC_GetConversionResult
  4344  166D  0871               	movf	?_ADC_GetConversionResult+1,w
  4345  166E  0022               	movlb	2	; select bank2
  4346  166F  00AE               	movwf	(main@Sinal+1)^(0+256)
  4347  1670  0870               	movf	?_ADC_GetConversionResult,w
  4348  1671  00AD               	movwf	main@Sinal^(0+256)
  4349                           
  4350                           ;main.c: 95:                 Soma = Soma + Sinal;
  4351  1672  0842               	movf	(main@Soma+3)^(0+256),w
  4352  1673  0020               	movlb	0	; select bank0
  4353  1674  00CA               	movwf	___fladd@b+3
  4354  1675  0022               	movlb	2	; select bank2
  4355  1676  0841               	movf	(main@Soma+2)^(0+256),w
  4356  1677  0020               	movlb	0	; select bank0
  4357  1678  00C9               	movwf	___fladd@b+2
  4358  1679  0022               	movlb	2	; select bank2
  4359  167A  0840               	movf	(main@Soma+1)^(0+256),w
  4360  167B  0020               	movlb	0	; select bank0
  4361  167C  00C8               	movwf	___fladd@b+1
  4362  167D  0022               	movlb	2	; select bank2
  4363  167E  083F               	movf	main@Soma^(0+256),w
  4364  167F  0020               	movlb	0	; select bank0
  4365  1680  00C7               	movwf	___fladd@b
  4366  1681  0022               	movlb	2	; select bank2
  4367  1682  082D               	movf	main@Sinal^(0+256),w
  4368  1683  00F0               	movwf	___xxtofl@val
  4369  1684  082E               	movf	(main@Sinal+1)^(0+256),w
  4370  1685  00F1               	movwf	___xxtofl@val+1
  4371  1686  01F2               	clrf	___xxtofl@val+2
  4372  1687  01F3               	clrf	___xxtofl@val+3
  4373  1688  3000               	movlw	0
  4374  1689  3195  25B1  3196   	fcall	___xxtofl
  4375  168C  0873               	movf	?___xxtofl+3,w
  4376  168D  0020               	movlb	0	; select bank0
  4377  168E  00CE               	movwf	___fladd@a+3
  4378  168F  0872               	movf	?___xxtofl+2,w
  4379  1690  00CD               	movwf	___fladd@a+2
  4380  1691  0871               	movf	?___xxtofl+1,w
  4381  1692  00CC               	movwf	___fladd@a+1
  4382  1693  0870               	movf	?___xxtofl,w
  4383  1694  00CB               	movwf	___fladd@a
  4384  1695  3189  2186  3196   	fcall	___fladd
  4385  1698  0020               	movlb	0	; select bank0
  4386  1699  084A               	movf	?___fladd+3,w
  4387  169A  0022               	movlb	2	; select bank2
  4388  169B  00C2               	movwf	(main@Soma+3)^(0+256)
  4389  169C  0020               	movlb	0	; select bank0
  4390  169D  0849               	movf	?___fladd+2,w
  4391  169E  0022               	movlb	2	; select bank2
  4392  169F  00C1               	movwf	(main@Soma+2)^(0+256)
  4393  16A0  0020               	movlb	0	; select bank0
  4394  16A1  0848               	movf	?___fladd+1,w
  4395  16A2  0022               	movlb	2	; select bank2
  4396  16A3  00C0               	movwf	(main@Soma+1)^(0+256)
  4397  16A4  0020               	movlb	0	; select bank0
  4398  16A5  0847               	movf	?___fladd,w
  4399  16A6  0022               	movlb	2	; select bank2
  4400  16A7  00BF               	movwf	main@Soma^(0+256)
  4401                           
  4402                           ;main.c: 96:         }
  4403  16A8  3001               	movlw	1
  4404  16A9  07C7               	addwf	main@i^(0+256),f
  4405  16AA  3000               	movlw	0
  4406  16AB  3DC8               	addwfc	(main@i+1)^(0+256),f
  4407  16AC  0848               	movf	(main@i+1)^(0+256),w
  4408  16AD  3A80               	xorlw	128
  4409  16AE  00AC               	movwf	??_main^(0+256)
  4410  16AF  3080               	movlw	128
  4411  16B0  022C               	subwf	??_main^(0+256),w
  4412  16B1  1D03               	skipz
  4413  16B2  2EB5               	goto	u5655
  4414  16B3  300A               	movlw	10
  4415  16B4  0247               	subwf	main@i^(0+256),w
  4416  16B5                     u5655:	
  4417  16B5  1C03               	skipc
  4418  16B6  2E67               	goto	l4223
  4419                           
  4420                           ;main.c: 97:             y = Soma/10.0;
  4421  16B7  3041               	movlw	65
  4422  16B8  00F3               	movwf	___fldiv@a+3
  4423  16B9  3020               	movlw	32
  4424  16BA  00F2               	movwf	___fldiv@a+2
  4425  16BB  3000               	movlw	0
  4426  16BC  00F1               	movwf	___fldiv@a+1
  4427  16BD  3000               	movlw	0
  4428  16BE  00F0               	movwf	___fldiv@a
  4429  16BF  0022               	movlb	2	; select bank2
  4430  16C0  0842               	movf	(main@Soma+3)^(0+256),w
  4431  16C1  00F7               	movwf	___fldiv@b+3
  4432  16C2  0841               	movf	(main@Soma+2)^(0+256),w
  4433  16C3  00F6               	movwf	___fldiv@b+2
  4434  16C4  0840               	movf	(main@Soma+1)^(0+256),w
  4435  16C5  00F5               	movwf	___fldiv@b+1
  4436  16C6  083F               	movf	main@Soma^(0+256),w
  4437  16C7  00F4               	movwf	___fldiv@b
  4438  16C8  3180  2017  3196   	fcall	___fldiv
  4439  16CB  0873               	movf	?___fldiv+3,w
  4440  16CC  0022               	movlb	2	; select bank2
  4441  16CD  00BA               	movwf	(main@y+3)^(0+256)
  4442  16CE  0872               	movf	?___fldiv+2,w
  4443  16CF  00B9               	movwf	(main@y+2)^(0+256)
  4444  16D0  0871               	movf	?___fldiv+1,w
  4445  16D1  00B8               	movwf	(main@y+1)^(0+256)
  4446  16D2  0870               	movf	?___fldiv,w
  4447  16D3  00B7               	movwf	main@y^(0+256)
  4448                           
  4449                           ;main.c: 98:             x = ((y/1023.0)*58)+17;
  4450  16D4  3041               	movlw	65
  4451  16D5  0020               	movlb	0	; select bank0
  4452  16D6  00CA               	movwf	___fladd@b+3
  4453  16D7  3088               	movlw	136
  4454  16D8  00C9               	movwf	___fladd@b+2
  4455  16D9  3000               	movlw	0
  4456  16DA  00C8               	movwf	___fladd@b+1
  4457  16DB  3000               	movlw	0
  4458  16DC  00C7               	movwf	___fladd@b
  4459  16DD  3042               	movlw	66
  4460  16DE  00B0               	movwf	___flmul@b+3
  4461  16DF  3068               	movlw	104
  4462  16E0  00AF               	movwf	___flmul@b+2
  4463  16E1  3000               	movlw	0
  4464  16E2  00AE               	movwf	___flmul@b+1
  4465  16E3  3000               	movlw	0
  4466  16E4  00AD               	movwf	___flmul@b
  4467  16E5  3044               	movlw	68
  4468  16E6  00F3               	movwf	___fldiv@a+3
  4469  16E7  307F               	movlw	127
  4470  16E8  00F2               	movwf	___fldiv@a+2
  4471  16E9  30C0               	movlw	192
  4472  16EA  00F1               	movwf	___fldiv@a+1
  4473  16EB  3000               	movlw	0
  4474  16EC  00F0               	movwf	___fldiv@a
  4475  16ED  0022               	movlb	2	; select bank2
  4476  16EE  083A               	movf	(main@y+3)^(0+256),w
  4477  16EF  00F7               	movwf	___fldiv@b+3
  4478  16F0  0839               	movf	(main@y+2)^(0+256),w
  4479  16F1  00F6               	movwf	___fldiv@b+2
  4480  16F2  0838               	movf	(main@y+1)^(0+256),w
  4481  16F3  00F5               	movwf	___fldiv@b+1
  4482  16F4  0837               	movf	main@y^(0+256),w
  4483  16F5  00F4               	movwf	___fldiv@b
  4484  16F6  3180  2017  3196   	fcall	___fldiv
  4485  16F9  0873               	movf	?___fldiv+3,w
  4486  16FA  0020               	movlb	0	; select bank0
  4487  16FB  00B4               	movwf	___flmul@a+3
  4488  16FC  0872               	movf	?___fldiv+2,w
  4489  16FD  00B3               	movwf	___flmul@a+2
  4490  16FE  0871               	movf	?___fldiv+1,w
  4491  16FF  00B2               	movwf	___flmul@a+1
  4492  1700  0870               	movf	?___fldiv,w
  4493  1701  00B1               	movwf	___flmul@a
  4494  1702  318B  2368  3196   	fcall	___flmul
  4495  1705  0020               	movlb	0	; select bank0
  4496  1706  0830               	movf	?___flmul+3,w
  4497  1707  00CE               	movwf	___fladd@a+3
  4498  1708  082F               	movf	?___flmul+2,w
  4499  1709  00CD               	movwf	___fladd@a+2
  4500  170A  082E               	movf	?___flmul+1,w
  4501  170B  00CC               	movwf	___fladd@a+1
  4502  170C  082D               	movf	?___flmul,w
  4503  170D  00CB               	movwf	___fladd@a
  4504  170E  3189  2186  3196   	fcall	___fladd
  4505  1711  0020               	movlb	0	; select bank0
  4506  1712  084A               	movf	?___fladd+3,w
  4507  1713  0022               	movlb	2	; select bank2
  4508  1714  00B2               	movwf	(main@x+3)^(0+256)
  4509  1715  0020               	movlb	0	; select bank0
  4510  1716  0849               	movf	?___fladd+2,w
  4511  1717  0022               	movlb	2	; select bank2
  4512  1718  00B1               	movwf	(main@x+2)^(0+256)
  4513  1719  0020               	movlb	0	; select bank0
  4514  171A  0848               	movf	?___fladd+1,w
  4515  171B  0022               	movlb	2	; select bank2
  4516  171C  00B0               	movwf	(main@x+1)^(0+256)
  4517  171D  0020               	movlb	0	; select bank0
  4518  171E  0847               	movf	?___fladd,w
  4519  171F  0022               	movlb	2	; select bank2
  4520  1720  00AF               	movwf	main@x^(0+256)
  4521                           
  4522                           ;main.c: 99:             Soma2 = Soma2 + x;
  4523  1721  0832               	movf	(main@x+3)^(0+256),w
  4524  1722  0020               	movlb	0	; select bank0
  4525  1723  00CA               	movwf	___fladd@b+3
  4526  1724  0022               	movlb	2	; select bank2
  4527  1725  0831               	movf	(main@x+2)^(0+256),w
  4528  1726  0020               	movlb	0	; select bank0
  4529  1727  00C9               	movwf	___fladd@b+2
  4530  1728  0022               	movlb	2	; select bank2
  4531  1729  0830               	movf	(main@x+1)^(0+256),w
  4532  172A  0020               	movlb	0	; select bank0
  4533  172B  00C8               	movwf	___fladd@b+1
  4534  172C  0022               	movlb	2	; select bank2
  4535  172D  082F               	movf	main@x^(0+256),w
  4536  172E  0020               	movlb	0	; select bank0
  4537  172F  00C7               	movwf	___fladd@b
  4538  1730  0022               	movlb	2	; select bank2
  4539  1731  0846               	movf	(main@Soma2+3)^(0+256),w
  4540  1732  0020               	movlb	0	; select bank0
  4541  1733  00CE               	movwf	___fladd@a+3
  4542  1734  0022               	movlb	2	; select bank2
  4543  1735  0845               	movf	(main@Soma2+2)^(0+256),w
  4544  1736  0020               	movlb	0	; select bank0
  4545  1737  00CD               	movwf	___fladd@a+2
  4546  1738  0022               	movlb	2	; select bank2
  4547  1739  0844               	movf	(main@Soma2+1)^(0+256),w
  4548  173A  0020               	movlb	0	; select bank0
  4549  173B  00CC               	movwf	___fladd@a+1
  4550  173C  0022               	movlb	2	; select bank2
  4551  173D  0843               	movf	main@Soma2^(0+256),w
  4552  173E  0020               	movlb	0	; select bank0
  4553  173F  00CB               	movwf	___fladd@a
  4554  1740  3189  2186  3196   	fcall	___fladd
  4555  1743  0020               	movlb	0	; select bank0
  4556  1744  084A               	movf	?___fladd+3,w
  4557  1745  0022               	movlb	2	; select bank2
  4558  1746  00C6               	movwf	(main@Soma2+3)^(0+256)
  4559  1747  0020               	movlb	0	; select bank0
  4560  1748  0849               	movf	?___fladd+2,w
  4561  1749  0022               	movlb	2	; select bank2
  4562  174A  00C5               	movwf	(main@Soma2+2)^(0+256)
  4563  174B  0020               	movlb	0	; select bank0
  4564  174C  0848               	movf	?___fladd+1,w
  4565  174D  0022               	movlb	2	; select bank2
  4566  174E  00C4               	movwf	(main@Soma2+1)^(0+256)
  4567  174F  0020               	movlb	0	; select bank0
  4568  1750  0847               	movf	?___fladd,w
  4569  1751  0022               	movlb	2	; select bank2
  4570  1752  00C3               	movwf	main@Soma2^(0+256)
  4571                           
  4572                           ;main.c: 100:             Soma = 0;
  4573  1753  3000               	movlw	0
  4574  1754  00C2               	movwf	(main@Soma+3)^(0+256)
  4575  1755  3000               	movlw	0
  4576  1756  00C1               	movwf	(main@Soma+2)^(0+256)
  4577  1757  3000               	movlw	0
  4578  1758  00C0               	movwf	(main@Soma+1)^(0+256)
  4579  1759  3000               	movlw	0
  4580  175A  00BF               	movwf	main@Soma^(0+256)
  4581                           
  4582                           ;main.c: 101:         }
  4583  175B  3001               	movlw	1
  4584  175C  07C9               	addwf	main@j^(0+256),f
  4585  175D  3000               	movlw	0
  4586  175E  3DCA               	addwfc	(main@j+1)^(0+256),f
  4587  175F  084A               	movf	(main@j+1)^(0+256),w
  4588  1760  3A80               	xorlw	128
  4589  1761  00AC               	movwf	??_main^(0+256)
  4590  1762  3080               	movlw	128
  4591  1763  022C               	subwf	??_main^(0+256),w
  4592  1764  1D03               	skipz
  4593  1765  2F68               	goto	u5665
  4594  1766  3014               	movlw	20
  4595  1767  0249               	subwf	main@j^(0+256),w
  4596  1768                     u5665:	
  4597  1768  1C03               	skipc
  4598  1769  2E64               	goto	l4217
  4599                           
  4600                           ;main.c: 102:         z = Soma2/20.0;
  4601  176A  3041               	movlw	65
  4602  176B  00F3               	movwf	___fldiv@a+3
  4603  176C  30A0               	movlw	160
  4604  176D  00F2               	movwf	___fldiv@a+2
  4605  176E  3000               	movlw	0
  4606  176F  00F1               	movwf	___fldiv@a+1
  4607  1770  3000               	movlw	0
  4608  1771  00F0               	movwf	___fldiv@a
  4609  1772  0022               	movlb	2	; select bank2
  4610  1773  0846               	movf	(main@Soma2+3)^(0+256),w
  4611  1774  00F7               	movwf	___fldiv@b+3
  4612  1775  0845               	movf	(main@Soma2+2)^(0+256),w
  4613  1776  00F6               	movwf	___fldiv@b+2
  4614  1777  0844               	movf	(main@Soma2+1)^(0+256),w
  4615  1778  00F5               	movwf	___fldiv@b+1
  4616  1779  0843               	movf	main@Soma2^(0+256),w
  4617  177A  00F4               	movwf	___fldiv@b
  4618  177B  3180  2017  3196   	fcall	___fldiv
  4619  177E  0873               	movf	?___fldiv+3,w
  4620  177F  0022               	movlb	2	; select bank2
  4621  1780  00BE               	movwf	(main@z+3)^(0+256)
  4622  1781  0872               	movf	?___fldiv+2,w
  4623  1782  00BD               	movwf	(main@z+2)^(0+256)
  4624  1783  0871               	movf	?___fldiv+1,w
  4625  1784  00BC               	movwf	(main@z+1)^(0+256)
  4626  1785  0870               	movf	?___fldiv,w
  4627  1786  00BB               	movwf	main@z^(0+256)
  4628                           
  4629                           ;main.c: 103:         Umidade = (((z-17)/58)*100);
  4630  1787  3042               	movlw	66
  4631  1788  0020               	movlb	0	; select bank0
  4632  1789  00B0               	movwf	___flmul@b+3
  4633  178A  30C8               	movlw	200
  4634  178B  00AF               	movwf	___flmul@b+2
  4635  178C  3000               	movlw	0
  4636  178D  00AE               	movwf	___flmul@b+1
  4637  178E  3000               	movlw	0
  4638  178F  00AD               	movwf	___flmul@b
  4639  1790  3042               	movlw	66
  4640  1791  00F3               	movwf	___fldiv@a+3
  4641  1792  3068               	movlw	104
  4642  1793  00F2               	movwf	___fldiv@a+2
  4643  1794  3000               	movlw	0
  4644  1795  00F1               	movwf	___fldiv@a+1
  4645  1796  3000               	movlw	0
  4646  1797  00F0               	movwf	___fldiv@a
  4647  1798  30C1               	movlw	193
  4648  1799  00CA               	movwf	___fladd@b+3
  4649  179A  3088               	movlw	136
  4650  179B  00C9               	movwf	___fladd@b+2
  4651  179C  3000               	movlw	0
  4652  179D  00C8               	movwf	___fladd@b+1
  4653  179E  3000               	movlw	0
  4654  179F  00C7               	movwf	___fladd@b
  4655  17A0  0022               	movlb	2	; select bank2
  4656  17A1  083E               	movf	(main@z+3)^(0+256),w
  4657  17A2  0020               	movlb	0	; select bank0
  4658  17A3  00CE               	movwf	___fladd@a+3
  4659  17A4  0022               	movlb	2	; select bank2
  4660  17A5  083D               	movf	(main@z+2)^(0+256),w
  4661  17A6  0020               	movlb	0	; select bank0
  4662  17A7  00CD               	movwf	___fladd@a+2
  4663  17A8  0022               	movlb	2	; select bank2
  4664  17A9  083C               	movf	(main@z+1)^(0+256),w
  4665  17AA  0020               	movlb	0	; select bank0
  4666  17AB  00CC               	movwf	___fladd@a+1
  4667  17AC  0022               	movlb	2	; select bank2
  4668  17AD  083B               	movf	main@z^(0+256),w
  4669  17AE  0020               	movlb	0	; select bank0
  4670  17AF  00CB               	movwf	___fladd@a
  4671  17B0  3189  2186  3196   	fcall	___fladd
  4672  17B3  0020               	movlb	0	; select bank0
  4673  17B4  084A               	movf	?___fladd+3,w
  4674  17B5  00F7               	movwf	___fldiv@b+3
  4675  17B6  0849               	movf	?___fladd+2,w
  4676  17B7  00F6               	movwf	___fldiv@b+2
  4677  17B8  0848               	movf	?___fladd+1,w
  4678  17B9  00F5               	movwf	___fldiv@b+1
  4679  17BA  0847               	movf	?___fladd,w
  4680  17BB  00F4               	movwf	___fldiv@b
  4681  17BC  3180  2017  3196   	fcall	___fldiv
  4682  17BF  0873               	movf	?___fldiv+3,w
  4683  17C0  0020               	movlb	0	; select bank0
  4684  17C1  00B4               	movwf	___flmul@a+3
  4685  17C2  0872               	movf	?___fldiv+2,w
  4686  17C3  00B3               	movwf	___flmul@a+2
  4687  17C4  0871               	movf	?___fldiv+1,w
  4688  17C5  00B2               	movwf	___flmul@a+1
  4689  17C6  0870               	movf	?___fldiv,w
  4690  17C7  00B1               	movwf	___flmul@a
  4691  17C8  318B  2368  3196   	fcall	___flmul
  4692  17CB  0020               	movlb	0	; select bank0
  4693  17CC  0830               	movf	?___flmul+3,w
  4694  17CD  0022               	movlb	2	; select bank2
  4695  17CE  00B6               	movwf	(main@Umidade+3)^(0+256)
  4696  17CF  0020               	movlb	0	; select bank0
  4697  17D0  082F               	movf	?___flmul+2,w
  4698  17D1  0022               	movlb	2	; select bank2
  4699  17D2  00B5               	movwf	(main@Umidade+2)^(0+256)
  4700  17D3  0020               	movlb	0	; select bank0
  4701  17D4  082E               	movf	?___flmul+1,w
  4702  17D5  0022               	movlb	2	; select bank2
  4703  17D6  00B4               	movwf	(main@Umidade+1)^(0+256)
  4704  17D7  0020               	movlb	0	; select bank0
  4705  17D8  082D               	movf	?___flmul,w
  4706  17D9  0022               	movlb	2	; select bank2
  4707  17DA  00B3               	movwf	main@Umidade^(0+256)
  4708                           
  4709                           ;main.c: 104:         printf("%.4f\n",Umidade);
  4710  17DB  3000               	movlw	low (STR_1| (0+32768))
  4711  17DC  00A3               	movwf	printf@fmt^(0+256)
  4712  17DD  3098               	movlw	high (STR_1| (0+32768))
  4713  17DE  00A4               	movwf	(printf@fmt^(0+256)+1)
  4714  17DF  0836               	movf	(main@Umidade+3)^(0+256),w
  4715  17E0  00A8               	movwf	((?_printf+3)^(0+256)+2)
  4716  17E1  0835               	movf	(main@Umidade+2)^(0+256),w
  4717  17E2  00A7               	movwf	((?_printf+2)^(0+256)+2)
  4718  17E3  0834               	movf	(main@Umidade+1)^(0+256),w
  4719  17E4  00A6               	movwf	((?_printf+1)^(0+256)+2)
  4720  17E5  0833               	movf	main@Umidade^(0+256),w
  4721  17E6  00A5               	movwf	(?_printf^(0+256)+2)
  4722  17E7  3190  20D0  3196   	fcall	_printf
  4723                           
  4724                           ;main.c: 106:         PWM3_LoadDutyValue(z);
  4725  17EA  0022               	movlb	2	; select bank2
  4726  17EB  083E               	movf	(main@z+3)^(0+256),w
  4727  17EC  00F3               	movwf	___fltol@f1+3
  4728  17ED  083D               	movf	(main@z+2)^(0+256),w
  4729  17EE  00F2               	movwf	___fltol@f1+2
  4730  17EF  083C               	movf	(main@z+1)^(0+256),w
  4731  17F0  00F1               	movwf	___fltol@f1+1
  4732  17F1  083B               	movf	main@z^(0+256),w
  4733  17F2  00F0               	movwf	___fltol@f1
  4734  17F3  3194  2458  3196   	fcall	___fltol
  4735  17F6  0871               	movf	?___fltol+1,w
  4736  17F7  00FC               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4737  17F8  0870               	movf	?___fltol,w
  4738  17F9  00FB               	movwf	PWM3_LoadDutyValue@dutyValue
  4739  17FA  3191  212B  3196   	fcall	_PWM3_LoadDutyValue
  4740                           
  4741                           ;main.c: 107:         Soma2 = 0;
  4742  17FD  3000               	movlw	0
  4743  17FE  0022               	movlb	2	; select bank2
  4744  17FF  2E56               	goto	L1
  4745  1800                     __end_of_main:	
  4746                           
  4747                           	psect	text1
  4748  10D0                     __ptext1:	
  4749 ;; *************** function _printf *****************
  4750 ;; Defined at:
  4751 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;  fmt             2    3[BANK2 ] PTR const unsigned char 
  4754 ;;		 -> STR_1(6), 
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;  ret             2    0        int 
  4757 ;;  ap              1   11[BANK2 ] PTR void [1]
  4758 ;;		 -> ?_printf(2), 
  4759 ;; Return value:  Size  Location     Type
  4760 ;;                  2    3[BANK2 ] int 
  4761 ;; Registers used:
  4762 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4763 ;; Tracked objects:
  4764 ;;		On entry : 0/0
  4765 ;;		On exit  : 0/0
  4766 ;;		Unchanged: 0/0
  4767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4768 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  4769 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  4770 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4771 ;;      Totals:         0       0       1       9       0       0       0       0       0       0       0       0       
      +0       0
  4772 ;;Total ram usage:       10 bytes
  4773 ;; Hardware stack levels used:    1
  4774 ;; Hardware stack levels required when called:    8
  4775 ;; This function calls:
  4776 ;;		_vfprintf
  4777 ;; This function is called by:
  4778 ;;		_main
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782                           
  4783                           ;psect for function _printf
  4784  10D0                     _printf:	
  4785                           
  4786                           ;incstack = 0
  4787                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4788  10D0  3025               	movlw	(low ((?_printf| (0+256)+2)))& (0+255)
  4789  10D1  0021               	movlb	1	; select bank1
  4790  10D2  00EF               	movwf	??_printf^(0+128)
  4791  10D3  086F               	movf	??_printf^(0+128),w
  4792  10D4  0022               	movlb	2	; select bank2
  4793  10D5  00AB               	movwf	printf@ap^(0+256)
  4794  10D6  0824               	movf	(printf@fmt+1)^(0+256),w
  4795  10D7  0021               	movlb	1	; select bank1
  4796  10D8  00ED               	movwf	(vfprintf@fmt+1)^(0+128)
  4797  10D9  0022               	movlb	2	; select bank2
  4798  10DA  0823               	movf	printf@fmt^(0+256),w
  4799  10DB  0021               	movlb	1	; select bank1
  4800  10DC  00EC               	movwf	vfprintf@fmt^(0+128)
  4801  10DD  302B               	movlw	(low (printf@ap| (0+256)))& (0+255)
  4802  10DE  00EF               	movwf	??_printf^(0+128)
  4803  10DF  086F               	movf	??_printf^(0+128),w
  4804  10E0  00EE               	movwf	vfprintf@ap^(0+128)
  4805  10E1  3000               	movlw	0
  4806  10E2  3192  2273         	fcall	_vfprintf
  4807  10E4  0008               	return
  4808  10E5                     __end_of_printf:	
  4809                           
  4810                           	psect	text2
  4811  1273                     __ptext2:	
  4812 ;; *************** function _vfprintf *****************
  4813 ;; Defined at:
  4814 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4815 ;; Parameters:    Size  Location     Type
  4816 ;;  fp              1    wreg     PTR struct _IO_FILE
  4817 ;;		 -> NULL(0), 
  4818 ;;  fmt             2   76[BANK1 ] PTR const unsigned char 
  4819 ;;		 -> STR_1(6), 
  4820 ;;  ap              1   78[BANK1 ] PTR PTR void 
  4821 ;;		 -> printf@ap(1), 
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;  fp              1    0[BANK2 ] PTR struct _IO_FILE
  4824 ;;		 -> NULL(0), 
  4825 ;;  cfmt            2    1[BANK2 ] PTR unsigned char 
  4826 ;;		 -> STR_1(6), 
  4827 ;; Return value:  Size  Location     Type
  4828 ;;                  2   76[BANK1 ] int 
  4829 ;; Registers used:
  4830 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/0
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4836 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4837 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  4838 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4839 ;;      Totals:         0       2       3       3       0       0       0       0       0       0       0       0       
      +0       0
  4840 ;;Total ram usage:        8 bytes
  4841 ;; Hardware stack levels used:    1
  4842 ;; Hardware stack levels required when called:    7
  4843 ;; This function calls:
  4844 ;;		_vfpfcnvrt
  4845 ;; This function is called by:
  4846 ;;		_printf
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850                           
  4851                           ;psect for function _vfprintf
  4852  1273                     _vfprintf:	
  4853                           
  4854                           ;incstack = 0
  4855                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4856                           ;vfprintf@fp stored from wreg
  4857  1273  0022               	movlb	2	; select bank2
  4858  1274  00A0               	movwf	vfprintf@fp^(0+256)
  4859                           
  4860                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4861  1275  0021               	movlb	1	; select bank1
  4862  1276  086D               	movf	(vfprintf@fmt+1)^(0+128),w
  4863  1277  0022               	movlb	2	; select bank2
  4864  1278  00A2               	movwf	(vfprintf@cfmt+1)^(0+256)
  4865  1279  0021               	movlb	1	; select bank1
  4866  127A  086C               	movf	vfprintf@fmt^(0+128),w
  4867  127B  0022               	movlb	2	; select bank2
  4868  127C  00A1               	movwf	vfprintf@cfmt^(0+256)
  4869                           
  4870                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4871  127D  01D3               	clrf	_nout^(0+256)
  4872  127E  01D4               	clrf	(_nout+1)^(0+256)
  4873  127F                     l4107:	
  4874                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4875                           
  4876                           
  4877                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4878  127F  0821               	movf	vfprintf@cfmt^(0+256),w
  4879  1280  0084               	movwf	4
  4880  1281  0822               	movf	(vfprintf@cfmt+1)^(0+256),w
  4881  1282  0085               	movwf	5
  4882  1283  0012               	moviw fsr0++
  4883  1284  1903               	btfsc	3,2
  4884  1285  2A9F               	goto	l4109
  4885                           
  4886                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4887  1286  3021               	movlw	(low (vfprintf@cfmt| (0+256)))& (0+255)
  4888  1287  0020               	movlb	0	; select bank0
  4889  1288  00EE               	movwf	??_vfprintf
  4890  1289  086E               	movf	??_vfprintf,w
  4891  128A  00EC               	movwf	vfpfcnvrt@fmt
  4892  128B  0021               	movlb	1	; select bank1
  4893  128C  086E               	movf	vfprintf@ap^(0+128),w
  4894  128D  0020               	movlb	0	; select bank0
  4895  128E  00EF               	movwf	??_vfprintf+1
  4896  128F  086F               	movf	??_vfprintf+1,w
  4897  1290  00ED               	movwf	vfpfcnvrt@ap
  4898  1291  0022               	movlb	2	; select bank2
  4899  1292  0820               	movf	vfprintf@fp^(0+256),w
  4900  1293  318D  2594  3192   	fcall	_vfpfcnvrt
  4901  1296  0020               	movlb	0	; select bank0
  4902  1297  086C               	movf	?_vfpfcnvrt,w
  4903  1298  0022               	movlb	2	; select bank2
  4904  1299  07D3               	addwf	_nout^(0+256),f
  4905  129A  0020               	movlb	0	; select bank0
  4906  129B  086D               	movf	?_vfpfcnvrt+1,w
  4907  129C  0022               	movlb	2	; select bank2
  4908  129D  3DD4               	addwfc	(_nout+1)^(0+256),f
  4909  129E  2A7F               	goto	l4107
  4910  129F                     l4109:	
  4911                           
  4912                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4913  129F  0854               	movf	(_nout+1)^(0+256),w
  4914  12A0  0021               	movlb	1	; select bank1
  4915  12A1  00ED               	movwf	(?_vfprintf+1)^(0+128)
  4916  12A2  0022               	movlb	2	; select bank2
  4917  12A3  0853               	movf	_nout^(0+256),w
  4918  12A4  0021               	movlb	1	; select bank1
  4919  12A5  00EC               	movwf	?_vfprintf^(0+128)
  4920  12A6  0008               	return
  4921  12A7                     __end_of_vfprintf:	
  4922                           
  4923                           	psect	text3
  4924  0D94                     __ptext3:	
  4925 ;; *************** function _vfpfcnvrt *****************
  4926 ;; Defined at:
  4927 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;  fp              1    wreg     PTR struct _IO_FILE
  4930 ;;		 -> NULL(0), 
  4931 ;;  fmt             1   76[BANK0 ] PTR PTR unsigned char 
  4932 ;;		 -> vfprintf@cfmt(2), 
  4933 ;;  ap              1   77[BANK0 ] PTR PTR void 
  4934 ;;		 -> printf@ap(1), 
  4935 ;; Auto vars:     Size  Location     Type
  4936 ;;  fp              1   75[BANK1 ] PTR struct _IO_FILE
  4937 ;;		 -> NULL(0), 
  4938 ;;  llu             8    0        unsigned long long 
  4939 ;;  ll              8    0        long long 
  4940 ;;  f               4   67[BANK1 ] long long 
  4941 ;;  ct              3   71[BANK1 ] unsigned char [3]
  4942 ;;  vp              2    0        PTR void 
  4943 ;;  i               2    0        int 
  4944 ;;  done            2    0        int 
  4945 ;;  cp              2    0        PTR unsigned char 
  4946 ;;  c               1   74[BANK1 ] unsigned char 
  4947 ;; Return value:  Size  Location     Type
  4948 ;;                  2   76[BANK0 ] int 
  4949 ;; Registers used:
  4950 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4956 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4957 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  4958 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  4959 ;;      Totals:         0       2      19       0       0       0       0       0       0       0       0       0       
      +0       0
  4960 ;;Total ram usage:       21 bytes
  4961 ;; Hardware stack levels used:    1
  4962 ;; Hardware stack levels required when called:    6
  4963 ;; This function calls:
  4964 ;;		_atoi
  4965 ;;		_efgtoa
  4966 ;;		_fputc
  4967 ;;		_isdigit
  4968 ;;		_isupper
  4969 ;;		_strncmp
  4970 ;;		_tolower
  4971 ;; This function is called by:
  4972 ;;		_vfprintf
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           
  4977                           ;psect for function _vfpfcnvrt
  4978  0D94                     _vfpfcnvrt:	
  4979                           
  4980                           ;incstack = 0
  4981                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4982                           ;vfpfcnvrt@fp stored from wreg
  4983  0D94  0021               	movlb	1	; select bank1
  4984  0D95  00EB               	movwf	vfpfcnvrt@fp^(0+128)
  4985                           
  4986                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4987  0D96  0020               	movlb	0	; select bank0
  4988  0D97  086C               	movf	vfpfcnvrt@fmt,w
  4989  0D98  0086               	movwf	6
  4990  0D99  3001               	movlw	1	; select bank2/3
  4991  0D9A  0087               	movwf	7
  4992  0D9B  3F40               	moviw [0]fsr1
  4993  0D9C  0021               	movlb	1	; select bank1
  4994  0D9D  00D9               	movwf	??_vfpfcnvrt^(0+128)
  4995  0D9E  3F41               	moviw [1]fsr1
  4996  0D9F  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4997  0DA0  0859               	movf	??_vfpfcnvrt^(0+128),w
  4998  0DA1  0084               	movwf	4
  4999  0DA2  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5000  0DA3  0085               	movwf	5
  5001  0DA4  0012               	moviw fsr0++
  5002  0DA5  3A25               	xorlw	37
  5003  0DA6  1D03               	btfss	3,2
  5004  0DA7  2FD9               	goto	l4019
  5005                           
  5006                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5007  0DA8  0020               	movlb	0	; select bank0
  5008  0DA9  086C               	movf	vfpfcnvrt@fmt,w
  5009  0DAA  0086               	movwf	6
  5010  0DAB  3001               	movlw	1	; select bank2/3
  5011  0DAC  0087               	movwf	7
  5012  0DAD  3001               	movlw	1
  5013  0DAE  0781               	addwf	1,f
  5014  0DAF  3141               	addfsr 1,1
  5015  0DB0  1803               	skipnc
  5016  0DB1  0A81               	incf	1,f
  5017                           
  5018                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5019  0DB2  0022               	movlb	2	; select bank2
  5020  0DB3  01D5               	clrf	_width^(0+256)
  5021  0DB4  01D6               	clrf	(_width+1)^(0+256)
  5022  0DB5  01D9               	clrf	_flags^(0+256)
  5023  0DB6  01DA               	clrf	(_flags+1)^(0+256)
  5024                           
  5025                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5026  0DB7  30FF               	movlw	255
  5027  0DB8  00D7               	movwf	_prec^(0+256)
  5028  0DB9  30FF               	movlw	255
  5029  0DBA  00D8               	movwf	(_prec^(0+256)+1)
  5030                           
  5031                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  5032  0DBB  0020               	movlb	0	; select bank0
  5033  0DBC  086C               	movf	vfpfcnvrt@fmt,w
  5034  0DBD  0086               	movwf	6
  5035  0DBE  3001               	movlw	1	; select bank2/3
  5036  0DBF  0087               	movwf	7
  5037  0DC0  3F40               	moviw [0]fsr1
  5038  0DC1  0021               	movlb	1	; select bank1
  5039  0DC2  00D9               	movwf	??_vfpfcnvrt^(0+128)
  5040  0DC3  3F41               	moviw [1]fsr1
  5041  0DC4  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5042  0DC5  0859               	movf	??_vfpfcnvrt^(0+128),w
  5043  0DC6  0084               	movwf	4
  5044  0DC7  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5045  0DC8  0085               	movwf	5
  5046  0DC9  0012               	moviw fsr0++
  5047  0DCA  3A2E               	xorlw	46
  5048  0DCB  1D03               	btfss	3,2
  5049  0DCC  2E4A               	goto	l3963
  5050                           
  5051                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  5052  0DCD  0022               	movlb	2	; select bank2
  5053  0DCE  01D7               	clrf	_prec^(0+256)
  5054  0DCF  01D8               	clrf	(_prec+1)^(0+256)
  5055                           
  5056                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  5057  0DD0  0020               	movlb	0	; select bank0
  5058  0DD1  086C               	movf	vfpfcnvrt@fmt,w
  5059  0DD2  0086               	movwf	6
  5060  0DD3  3001               	movlw	1	; select bank2/3
  5061  0DD4  0087               	movwf	7
  5062  0DD5  3001               	movlw	1
  5063  0DD6  0781               	addwf	1,f
  5064  0DD7  3141               	addfsr 1,1
  5065  0DD8  1803               	skipnc
  5066  0DD9  0A81               	incf	1,f
  5067                           
  5068                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  5069  0DDA  086C               	movf	vfpfcnvrt@fmt,w
  5070  0DDB  0086               	movwf	6
  5071  0DDC  3001               	movlw	1	; select bank2/3
  5072  0DDD  0087               	movwf	7
  5073  0DDE  3F40               	moviw [0]fsr1
  5074  0DDF  0021               	movlb	1	; select bank1
  5075  0DE0  00D9               	movwf	??_vfpfcnvrt^(0+128)
  5076  0DE1  3F41               	moviw [1]fsr1
  5077  0DE2  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5078  0DE3  0859               	movf	??_vfpfcnvrt^(0+128),w
  5079  0DE4  0084               	movwf	4
  5080  0DE5  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5081  0DE6  0085               	movwf	5
  5082  0DE7  0012               	moviw fsr0++
  5083  0DE8  3A2A               	xorlw	42
  5084  0DE9  1D03               	btfss	3,2
  5085  0DEA  2E05               	goto	l3953
  5086                           
  5087                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  5088  0DEB  0020               	movlb	0	; select bank0
  5089  0DEC  086C               	movf	vfpfcnvrt@fmt,w
  5090  0DED  0086               	movwf	6
  5091  0DEE  3001               	movlw	1	; select bank2/3
  5092  0DEF  0087               	movwf	7
  5093  0DF0  3001               	movlw	1
  5094  0DF1  0781               	addwf	1,f
  5095  0DF2  3141               	addfsr 1,1
  5096  0DF3  1803               	skipnc
  5097  0DF4  0A81               	incf	1,f
  5098                           
  5099                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  5100  0DF5  086D               	movf	vfpfcnvrt@ap,w
  5101  0DF6  0086               	movwf	6
  5102  0DF7  3001               	movlw	1	; select bank2/3
  5103  0DF8  0087               	movwf	7
  5104  0DF9  0801               	movf	1,w
  5105  0DFA  0084               	movwf	4
  5106  0DFB  3001               	movlw	1	; select bank2/3
  5107  0DFC  0085               	movwf	5
  5108  0DFD  3002               	movlw	2
  5109  0DFE  0781               	addwf	1,f
  5110  0DFF  3F00               	moviw [0]fsr0
  5111  0E00  0022               	movlb	2	; select bank2
  5112  0E01  00D7               	movwf	_prec^(0+256)
  5113  0E02  3F01               	moviw [1]fsr0
  5114  0E03  00D8               	movwf	(_prec+1)^(0+256)
  5115                           
  5116                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  5117  0E04  2E4A               	goto	l3963
  5118  0E05                     l3953:	
  5119                           
  5120                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  5121  0E05  0020               	movlb	0	; select bank0
  5122  0E06  086C               	movf	vfpfcnvrt@fmt,w
  5123  0E07  0086               	movwf	6
  5124  0E08  3001               	movlw	1	; select bank2/3
  5125  0E09  0087               	movwf	7
  5126  0E0A  3F40               	moviw [0]fsr1
  5127  0E0B  00F6               	movwf	atoi@s
  5128  0E0C  3F41               	moviw [1]fsr1
  5129  0E0D  00F7               	movwf	atoi@s+1
  5130  0E0E  3188  200D  318D   	fcall	_atoi
  5131  0E11  0877               	movf	?_atoi+1,w
  5132  0E12  0022               	movlb	2	; select bank2
  5133  0E13  00D8               	movwf	(_prec+1)^(0+256)
  5134  0E14  0876               	movf	?_atoi,w
  5135  0E15  00D7               	movwf	_prec^(0+256)
  5136                           
  5137                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5138  0E16  2E21               	goto	l3957
  5139  0E17                     l3955:	
  5140                           
  5141                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  5142  0E17  0020               	movlb	0	; select bank0
  5143  0E18  086C               	movf	vfpfcnvrt@fmt,w
  5144  0E19  0086               	movwf	6
  5145  0E1A  3001               	movlw	1	; select bank2/3
  5146  0E1B  0087               	movwf	7
  5147  0E1C  3001               	movlw	1
  5148  0E1D  0781               	addwf	1,f
  5149  0E1E  3141               	addfsr 1,1
  5150  0E1F  1803               	skipnc
  5151  0E20  0A81               	incf	1,f
  5152  0E21                     l3957:	
  5153  0E21  0020               	movlb	0	; select bank0
  5154  0E22  086C               	movf	vfpfcnvrt@fmt,w
  5155  0E23  0086               	movwf	6
  5156  0E24  3001               	movlw	1	; select bank2/3
  5157  0E25  0087               	movwf	7
  5158  0E26  3F40               	moviw [0]fsr1
  5159  0E27  0021               	movlb	1	; select bank1
  5160  0E28  00D9               	movwf	??_vfpfcnvrt^(0+128)
  5161  0E29  3F41               	moviw [1]fsr1
  5162  0E2A  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5163  0E2B  0859               	movf	??_vfpfcnvrt^(0+128),w
  5164  0E2C  0084               	movwf	4
  5165  0E2D  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5166  0E2E  0085               	movwf	5
  5167  0E2F  0800               	movf	0,w	;code access
  5168  0E30  3ED0               	addlw	208
  5169  0E31  00DB               	movwf	(??_vfpfcnvrt+2)^(0+128)
  5170  0E32  30FF               	movlw	255
  5171  0E33  1803               	skipnc
  5172  0E34  3000               	movlw	0
  5173  0E35  00DC               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  5174  0E36  3000               	movlw	0
  5175  0E37  025C               	subwf	(??_vfpfcnvrt+3)^(0+128),w
  5176  0E38  300A               	movlw	10
  5177  0E39  1903               	skipnz
  5178  0E3A  025B               	subwf	(??_vfpfcnvrt+2)^(0+128),w
  5179  0E3B  1803               	btfsc	3,0
  5180  0E3C  2E3F               	goto	u5360
  5181  0E3D  3001               	movlw	1
  5182  0E3E  2E40               	goto	u5370
  5183  0E3F                     u5360:	
  5184  0E3F  3000               	movlw	0
  5185  0E40                     u5370:	
  5186  0E40  00DD               	movwf	(??_vfpfcnvrt+4)^(0+128)
  5187  0E41  01DE               	clrf	((??_vfpfcnvrt+4)^(0+128)+1)
  5188  0E42  085D               	movf	(??_vfpfcnvrt+4)^(0+128),w
  5189  0E43  00DF               	movwf	_vfpfcnvrt$825^(0+128)
  5190  0E44  085E               	movf	(??_vfpfcnvrt+5)^(0+128),w
  5191  0E45  00E0               	movwf	(_vfpfcnvrt$825+1)^(0+128)
  5192  0E46  085F               	movf	_vfpfcnvrt$825^(0+128),w
  5193  0E47  0460               	iorwf	(_vfpfcnvrt$825+1)^(0+128),w
  5194  0E48  1D03               	btfss	3,2
  5195  0E49  2E17               	goto	l3955
  5196  0E4A                     l3963:	
  5197                           
  5198                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  5199  0E4A  0020               	movlb	0	; select bank0
  5200  0E4B  086C               	movf	vfpfcnvrt@fmt,w
  5201  0E4C  0086               	movwf	6
  5202  0E4D  3001               	movlw	1	; select bank2/3
  5203  0E4E  0087               	movwf	7
  5204  0E4F  3F40               	moviw [0]fsr1
  5205  0E50  0021               	movlb	1	; select bank1
  5206  0E51  00D9               	movwf	??_vfpfcnvrt^(0+128)
  5207  0E52  3F41               	moviw [1]fsr1
  5208  0E53  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5209  0E54  0859               	movf	??_vfpfcnvrt^(0+128),w
  5210  0E55  0084               	movwf	4
  5211  0E56  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5212  0E57  0085               	movwf	5
  5213  0E58  0800               	movf	0,w	;code access
  5214  0E59  00DB               	movwf	(??_vfpfcnvrt+2)^(0+128)
  5215  0E5A  01DC               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  5216  0E5B  085B               	movf	(??_vfpfcnvrt+2)^(0+128),w
  5217  0E5C  00F6               	movwf	tolower@c
  5218  0E5D  085C               	movf	(??_vfpfcnvrt+3)^(0+128),w
  5219  0E5E  00F7               	movwf	tolower@c+1
  5220  0E5F  3191  21F9  318D   	fcall	_tolower
  5221  0E62  0876               	movf	?_tolower,w
  5222  0E63  0021               	movlb	1	; select bank1
  5223  0E64  00DD               	movwf	(??_vfpfcnvrt+4)^(0+128)
  5224  0E65  085D               	movf	(??_vfpfcnvrt+4)^(0+128),w
  5225  0E66  00E7               	movwf	vfpfcnvrt@ct^(0+128)
  5226                           
  5227                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  5228  0E67  0867               	movf	vfpfcnvrt@ct^(0+128),w
  5229  0E68  1903               	btfsc	3,2
  5230  0E69  2EAD               	goto	l3973
  5231                           
  5232                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  5233  0E6A  0020               	movlb	0	; select bank0
  5234  0E6B  086C               	movf	vfpfcnvrt@fmt,w
  5235  0E6C  0086               	movwf	6
  5236  0E6D  3001               	movlw	1	; select bank2/3
  5237  0E6E  0087               	movwf	7
  5238  0E6F  3F40               	moviw [0]fsr1
  5239  0E70  0021               	movlb	1	; select bank1
  5240  0E71  00D9               	movwf	??_vfpfcnvrt^(0+128)
  5241  0E72  3F41               	moviw [1]fsr1
  5242  0E73  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5243  0E74  3001               	movlw	1
  5244  0E75  0759               	addwf	??_vfpfcnvrt^(0+128),w
  5245  0E76  0084               	movwf	4
  5246  0E77  085A               	movf	(??_vfpfcnvrt^(0+128)+1),w
  5247  0E78  1803               	skipnc
  5248  0E79  0A5A               	incf	(??_vfpfcnvrt^(0+128)+1),w
  5249  0E7A  0085               	movwf	5
  5250  0E7B  0800               	movf	0,w	;code access
  5251  0E7C  00DB               	movwf	(??_vfpfcnvrt+2)^(0+128)
  5252  0E7D  01DC               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  5253  0E7E  085B               	movf	(??_vfpfcnvrt+2)^(0+128),w
  5254  0E7F  00F6               	movwf	tolower@c
  5255  0E80  085C               	movf	(??_vfpfcnvrt+3)^(0+128),w
  5256  0E81  00F7               	movwf	tolower@c+1
  5257  0E82  3191  21F9  318D   	fcall	_tolower
  5258  0E85  0876               	movf	?_tolower,w
  5259  0E86  0021               	movlb	1	; select bank1
  5260  0E87  00DD               	movwf	(??_vfpfcnvrt+4)^(0+128)
  5261  0E88  085D               	movf	(??_vfpfcnvrt+4)^(0+128),w
  5262  0E89  00E8               	movwf	(vfpfcnvrt@ct^(0+128)+1)
  5263                           
  5264                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  5265  0E8A  0868               	movf	(vfpfcnvrt@ct^(0+128)+1),w
  5266  0E8B  1903               	btfsc	3,2
  5267  0E8C  2EAD               	goto	l3973
  5268                           
  5269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  5270  0E8D  0020               	movlb	0	; select bank0
  5271  0E8E  086C               	movf	vfpfcnvrt@fmt,w
  5272  0E8F  0086               	movwf	6
  5273  0E90  3001               	movlw	1	; select bank2/3
  5274  0E91  0087               	movwf	7
  5275  0E92  3F40               	moviw [0]fsr1
  5276  0E93  0021               	movlb	1	; select bank1
  5277  0E94  00D9               	movwf	??_vfpfcnvrt^(0+128)
  5278  0E95  3F41               	moviw [1]fsr1
  5279  0E96  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5280  0E97  3002               	movlw	2
  5281  0E98  0759               	addwf	??_vfpfcnvrt^(0+128),w
  5282  0E99  0084               	movwf	4
  5283  0E9A  085A               	movf	(??_vfpfcnvrt^(0+128)+1),w
  5284  0E9B  1803               	skipnc
  5285  0E9C  0A5A               	incf	(??_vfpfcnvrt^(0+128)+1),w
  5286  0E9D  0085               	movwf	5
  5287  0E9E  0800               	movf	0,w	;code access
  5288  0E9F  00DB               	movwf	(??_vfpfcnvrt+2)^(0+128)
  5289  0EA0  01DC               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  5290  0EA1  085B               	movf	(??_vfpfcnvrt+2)^(0+128),w
  5291  0EA2  00F6               	movwf	tolower@c
  5292  0EA3  085C               	movf	(??_vfpfcnvrt+3)^(0+128),w
  5293  0EA4  00F7               	movwf	tolower@c+1
  5294  0EA5  3191  21F9  318D   	fcall	_tolower
  5295  0EA8  0876               	movf	?_tolower,w
  5296  0EA9  0021               	movlb	1	; select bank1
  5297  0EAA  00DD               	movwf	(??_vfpfcnvrt+4)^(0+128)
  5298  0EAB  085D               	movf	(??_vfpfcnvrt+4)^(0+128),w
  5299  0EAC  00E9               	movwf	(vfpfcnvrt@ct^(0+128)+2)
  5300  0EAD                     l3973:	
  5301                           
  5302                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  5303  0EAD  3066               	movlw	102
  5304  0EAE  0667               	xorwf	vfpfcnvrt@ct^(0+128),w
  5305  0EAF  1D03               	btfss	3,2
  5306  0EB0  2EFF               	goto	l3985
  5307                           
  5308                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  5309  0EB1  0020               	movlb	0	; select bank0
  5310  0EB2  086C               	movf	vfpfcnvrt@fmt,w
  5311  0EB3  0086               	movwf	6
  5312  0EB4  3001               	movlw	1	; select bank2/3
  5313  0EB5  0087               	movwf	7
  5314  0EB6  3F40               	moviw [0]fsr1
  5315  0EB7  0021               	movlb	1	; select bank1
  5316  0EB8  00D9               	movwf	??_vfpfcnvrt^(0+128)
  5317  0EB9  3F41               	moviw [1]fsr1
  5318  0EBA  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5319  0EBB  0859               	movf	??_vfpfcnvrt^(0+128),w
  5320  0EBC  0084               	movwf	4
  5321  0EBD  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5322  0EBE  0085               	movwf	5
  5323  0EBF  0800               	movf	0,w	;code access
  5324  0EC0  00DB               	movwf	(??_vfpfcnvrt+2)^(0+128)
  5325  0EC1  085B               	movf	(??_vfpfcnvrt+2)^(0+128),w
  5326  0EC2  00EA               	movwf	vfpfcnvrt@c^(0+128)
  5327                           
  5328                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  5329  0EC3  0020               	movlb	0	; select bank0
  5330  0EC4  086C               	movf	vfpfcnvrt@fmt,w
  5331  0EC5  0086               	movwf	6
  5332  0EC6  3001               	movlw	1	; select bank2/3
  5333  0EC7  0087               	movwf	7
  5334  0EC8  3001               	movlw	1
  5335  0EC9  0781               	addwf	1,f
  5336  0ECA  3141               	addfsr 1,1
  5337  0ECB  1803               	skipnc
  5338  0ECC  0A81               	incf	1,f
  5339                           
  5340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5341  0ECD  086D               	movf	vfpfcnvrt@ap,w
  5342  0ECE  0086               	movwf	6
  5343  0ECF  3001               	movlw	1	; select bank2/3
  5344  0ED0  0087               	movwf	7
  5345  0ED1  0801               	movf	1,w
  5346  0ED2  0084               	movwf	4
  5347  0ED3  3001               	movlw	1	; select bank2/3
  5348  0ED4  0085               	movwf	5
  5349  0ED5  3004               	movlw	4
  5350  0ED6  0781               	addwf	1,f
  5351  0ED7  3F00               	moviw [0]fsr0
  5352  0ED8  0021               	movlb	1	; select bank1
  5353  0ED9  00E3               	movwf	vfpfcnvrt@f^(0+128)
  5354  0EDA  3F01               	moviw [1]fsr0
  5355  0EDB  00E4               	movwf	(vfpfcnvrt@f+1)^(0+128)
  5356  0EDC  3F02               	moviw [2]fsr0
  5357  0EDD  00E5               	movwf	(vfpfcnvrt@f+2)^(0+128)
  5358  0EDE  3F03               	moviw [3]fsr0
  5359  0EDF  00E6               	movwf	(vfpfcnvrt@f+3)^(0+128)
  5360                           
  5361                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  5362  0EE0  0866               	movf	(vfpfcnvrt@f+3)^(0+128),w
  5363  0EE1  0020               	movlb	0	; select bank0
  5364  0EE2  00E6               	movwf	efgtoa@f+3
  5365  0EE3  0021               	movlb	1	; select bank1
  5366  0EE4  0865               	movf	(vfpfcnvrt@f+2)^(0+128),w
  5367  0EE5  0020               	movlb	0	; select bank0
  5368  0EE6  00E5               	movwf	efgtoa@f+2
  5369  0EE7  0021               	movlb	1	; select bank1
  5370  0EE8  0864               	movf	(vfpfcnvrt@f+1)^(0+128),w
  5371  0EE9  0020               	movlb	0	; select bank0
  5372  0EEA  00E4               	movwf	efgtoa@f+1
  5373  0EEB  0021               	movlb	1	; select bank1
  5374  0EEC  0863               	movf	vfpfcnvrt@f^(0+128),w
  5375  0EED  0020               	movlb	0	; select bank0
  5376  0EEE  00E3               	movwf	efgtoa@f
  5377  0EEF  0021               	movlb	1	; select bank1
  5378  0EF0  086A               	movf	vfpfcnvrt@c^(0+128),w
  5379  0EF1  00D9               	movwf	??_vfpfcnvrt^(0+128)
  5380  0EF2  0859               	movf	??_vfpfcnvrt^(0+128),w
  5381  0EF3  0020               	movlb	0	; select bank0
  5382  0EF4  00E7               	movwf	efgtoa@c
  5383  0EF5  0021               	movlb	1	; select bank1
  5384  0EF6  086B               	movf	vfpfcnvrt@fp^(0+128),w
  5385  0EF7  3181  2191         	fcall	_efgtoa
  5386  0EF9  0020               	movlb	0	; select bank0
  5387  0EFA  0864               	movf	?_efgtoa+1,w
  5388  0EFB  00ED               	movwf	?_vfpfcnvrt+1
  5389  0EFC  0863               	movf	?_efgtoa,w
  5390  0EFD  00EC               	movwf	?_vfpfcnvrt
  5391  0EFE  0008               	return
  5392  0EFF                     l3985:	
  5393                           
  5394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  5395  0EFF  3016               	movlw	low (STR_10| (0+32768))
  5396  0F00  00F0               	movwf	strncmp@_r
  5397  0F01  3098               	movlw	high (STR_10| (0+32768))
  5398  0F02  00F1               	movwf	strncmp@_r+1
  5399  0F03  3002               	movlw	2
  5400  0F04  00F2               	movwf	strncmp@n
  5401  0F05  3000               	movlw	0
  5402  0F06  00F3               	movwf	strncmp@n+1
  5403  0F07  30E7               	movlw	(low (vfpfcnvrt@ct| 0))& (0+255)
  5404  0F08  3193  2369  318D   	fcall	_strncmp
  5405  0F0B  0870               	movf	?_strncmp,w
  5406  0F0C  0471               	iorwf	?_strncmp+1,w
  5407  0F0D  1D03               	btfss	3,2
  5408  0F0E  2F9F               	goto	l4003
  5409                           
  5410                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  5411  0F0F  0020               	movlb	0	; select bank0
  5412  0F10  086C               	movf	vfpfcnvrt@fmt,w
  5413  0F11  0086               	movwf	6
  5414  0F12  3001               	movlw	1	; select bank2/3
  5415  0F13  0087               	movwf	7
  5416  0F14  3F40               	moviw [0]fsr1
  5417  0F15  0021               	movlb	1	; select bank1
  5418  0F16  00D9               	movwf	??_vfpfcnvrt^(0+128)
  5419  0F17  3F41               	moviw [1]fsr1
  5420  0F18  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5421  0F19  3001               	movlw	1
  5422  0F1A  0759               	addwf	??_vfpfcnvrt^(0+128),w
  5423  0F1B  0084               	movwf	4
  5424  0F1C  085A               	movf	(??_vfpfcnvrt^(0+128)+1),w
  5425  0F1D  1803               	skipnc
  5426  0F1E  0A5A               	incf	(??_vfpfcnvrt^(0+128)+1),w
  5427  0F1F  0085               	movwf	5
  5428  0F20  0800               	movf	0,w	;code access
  5429  0F21  00DB               	movwf	(??_vfpfcnvrt+2)^(0+128)
  5430  0F22  085B               	movf	(??_vfpfcnvrt+2)^(0+128),w
  5431  0F23  00EA               	movwf	vfpfcnvrt@c^(0+128)
  5432  0F24  0020               	movlb	0	; select bank0
  5433  0F25  086C               	movf	vfpfcnvrt@fmt,w
  5434  0F26  0086               	movwf	6
  5435  0F27  3001               	movlw	1	; select bank2/3
  5436  0F28  0087               	movwf	7
  5437  0F29  3F40               	moviw [0]fsr1
  5438  0F2A  0021               	movlb	1	; select bank1
  5439  0F2B  00D9               	movwf	??_vfpfcnvrt^(0+128)
  5440  0F2C  3F41               	moviw [1]fsr1
  5441  0F2D  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5442  0F2E  0859               	movf	??_vfpfcnvrt^(0+128),w
  5443  0F2F  0084               	movwf	4
  5444  0F30  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5445  0F31  0085               	movwf	5
  5446  0F32  0800               	movf	0,w	;code access
  5447  0F33  3EBF               	addlw	191
  5448  0F34  00DB               	movwf	(??_vfpfcnvrt+2)^(0+128)
  5449  0F35  30FF               	movlw	255
  5450  0F36  1803               	skipnc
  5451  0F37  3000               	movlw	0
  5452  0F38  00DC               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  5453  0F39  3000               	movlw	0
  5454  0F3A  025C               	subwf	(??_vfpfcnvrt+3)^(0+128),w
  5455  0F3B  301A               	movlw	26
  5456  0F3C  1903               	skipnz
  5457  0F3D  025B               	subwf	(??_vfpfcnvrt+2)^(0+128),w
  5458  0F3E  1803               	btfsc	3,0
  5459  0F3F  2F42               	goto	u5430
  5460  0F40  3001               	movlw	1
  5461  0F41  2F43               	goto	u5440
  5462  0F42                     u5430:	
  5463  0F42  3000               	movlw	0
  5464  0F43                     u5440:	
  5465  0F43  00DD               	movwf	(??_vfpfcnvrt+4)^(0+128)
  5466  0F44  01DE               	clrf	((??_vfpfcnvrt+4)^(0+128)+1)
  5467  0F45  085D               	movf	(??_vfpfcnvrt+4)^(0+128),w
  5468  0F46  00E1               	movwf	_vfpfcnvrt$829^(0+128)
  5469  0F47  085E               	movf	(??_vfpfcnvrt+5)^(0+128),w
  5470  0F48  00E2               	movwf	(_vfpfcnvrt$829+1)^(0+128)
  5471  0F49  0861               	movf	_vfpfcnvrt$829^(0+128),w
  5472  0F4A  0462               	iorwf	(_vfpfcnvrt$829+1)^(0+128),w
  5473  0F4B  1903               	btfsc	3,2
  5474  0F4C  2F61               	goto	l3995
  5475                           
  5476                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  5477  0F4D  0020               	movlb	0	; select bank0
  5478  0F4E  086D               	movf	vfpfcnvrt@ap,w
  5479  0F4F  0086               	movwf	6
  5480  0F50  3001               	movlw	1	; select bank2/3
  5481  0F51  0087               	movwf	7
  5482  0F52  0801               	movf	1,w
  5483  0F53  0084               	movwf	4
  5484  0F54  3001               	movlw	1	; select bank2/3
  5485  0F55  0085               	movwf	5
  5486  0F56  3004               	movlw	4
  5487  0F57  0781               	addwf	1,f
  5488  0F58  3F00               	moviw [0]fsr0
  5489  0F59  0021               	movlb	1	; select bank1
  5490  0F5A  00E3               	movwf	vfpfcnvrt@f^(0+128)
  5491  0F5B  3F01               	moviw [1]fsr0
  5492  0F5C  00E4               	movwf	(vfpfcnvrt@f+1)^(0+128)
  5493  0F5D  3F02               	moviw [2]fsr0
  5494  0F5E  00E5               	movwf	(vfpfcnvrt@f+2)^(0+128)
  5495  0F5F  3F03               	moviw [3]fsr0
  5496  0F60  2F74               	goto	L2
  5497  0F61                     l3995:	
  5498                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  5499                           
  5500                           
  5501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5502  0F61  0020               	movlb	0	; select bank0
  5503  0F62  086D               	movf	vfpfcnvrt@ap,w
  5504  0F63  0086               	movwf	6
  5505  0F64  3001               	movlw	1	; select bank2/3
  5506  0F65  0087               	movwf	7
  5507  0F66  0801               	movf	1,w
  5508  0F67  0084               	movwf	4
  5509  0F68  3001               	movlw	1	; select bank2/3
  5510  0F69  0085               	movwf	5
  5511  0F6A  3004               	movlw	4
  5512  0F6B  0781               	addwf	1,f
  5513  0F6C  3F00               	moviw [0]fsr0
  5514  0F6D  0021               	movlb	1	; select bank1
  5515  0F6E  00E3               	movwf	vfpfcnvrt@f^(0+128)
  5516  0F6F  3F01               	moviw [1]fsr0
  5517  0F70  00E4               	movwf	(vfpfcnvrt@f+1)^(0+128)
  5518  0F71  3F02               	moviw [2]fsr0
  5519  0F72  00E5               	movwf	(vfpfcnvrt@f+2)^(0+128)
  5520  0F73  3F03               	moviw [3]fsr0
  5521  0F74                     L2:	
  5522  0F74  00E6               	movwf	(vfpfcnvrt@f+3)^(0+128)
  5523                           
  5524                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  5525  0F75  0020               	movlb	0	; select bank0
  5526  0F76  086C               	movf	vfpfcnvrt@fmt,w
  5527  0F77  0086               	movwf	6
  5528  0F78  3001               	movlw	1	; select bank2/3
  5529  0F79  0087               	movwf	7
  5530  0F7A  3002               	movlw	2
  5531  0F7B  0781               	addwf	1,f
  5532  0F7C  3141               	addfsr 1,1
  5533  0F7D  1803               	skipnc
  5534  0F7E  0A81               	incf	1,f
  5535                           
  5536                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 938:       
      +                                return efgtoa(fp, f, c);
  5537  0F7F  0021               	movlb	1	; select bank1
  5538  0F80  0866               	movf	(vfpfcnvrt@f+3)^(0+128),w
  5539  0F81  0020               	movlb	0	; select bank0
  5540  0F82  00E6               	movwf	efgtoa@f+3
  5541  0F83  0021               	movlb	1	; select bank1
  5542  0F84  0865               	movf	(vfpfcnvrt@f+2)^(0+128),w
  5543  0F85  0020               	movlb	0	; select bank0
  5544  0F86  00E5               	movwf	efgtoa@f+2
  5545  0F87  0021               	movlb	1	; select bank1
  5546  0F88  0864               	movf	(vfpfcnvrt@f+1)^(0+128),w
  5547  0F89  0020               	movlb	0	; select bank0
  5548  0F8A  00E4               	movwf	efgtoa@f+1
  5549  0F8B  0021               	movlb	1	; select bank1
  5550  0F8C  0863               	movf	vfpfcnvrt@f^(0+128),w
  5551  0F8D  0020               	movlb	0	; select bank0
  5552  0F8E  00E3               	movwf	efgtoa@f
  5553  0F8F  0021               	movlb	1	; select bank1
  5554  0F90  086A               	movf	vfpfcnvrt@c^(0+128),w
  5555  0F91  00D9               	movwf	??_vfpfcnvrt^(0+128)
  5556  0F92  0859               	movf	??_vfpfcnvrt^(0+128),w
  5557  0F93  0020               	movlb	0	; select bank0
  5558  0F94  00E7               	movwf	efgtoa@c
  5559  0F95  0021               	movlb	1	; select bank1
  5560  0F96  086B               	movf	vfpfcnvrt@fp^(0+128),w
  5561  0F97  3181  2191         	fcall	_efgtoa
  5562  0F99  0020               	movlb	0	; select bank0
  5563  0F9A  0864               	movf	?_efgtoa+1,w
  5564  0F9B  00ED               	movwf	?_vfpfcnvrt+1
  5565  0F9C  0863               	movf	?_efgtoa,w
  5566  0F9D  00EC               	movwf	?_vfpfcnvrt
  5567  0F9E  0008               	return
  5568  0F9F                     l4003:	
  5569                           
  5570                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5571  0F9F  0020               	movlb	0	; select bank0
  5572  0FA0  086C               	movf	vfpfcnvrt@fmt,w
  5573  0FA1  0086               	movwf	6
  5574  0FA2  3001               	movlw	1	; select bank2/3
  5575  0FA3  0087               	movwf	7
  5576  0FA4  3F40               	moviw [0]fsr1
  5577  0FA5  0021               	movlb	1	; select bank1
  5578  0FA6  00D9               	movwf	??_vfpfcnvrt^(0+128)
  5579  0FA7  3F41               	moviw [1]fsr1
  5580  0FA8  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5581  0FA9  0859               	movf	??_vfpfcnvrt^(0+128),w
  5582  0FAA  0084               	movwf	4
  5583  0FAB  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5584  0FAC  0085               	movwf	5
  5585  0FAD  0012               	moviw fsr0++
  5586  0FAE  3A25               	xorlw	37
  5587  0FAF  1D03               	btfss	3,2
  5588  0FB0  2FCC               	goto	l4013
  5589                           
  5590                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  5591  0FB1  0020               	movlb	0	; select bank0
  5592  0FB2  086C               	movf	vfpfcnvrt@fmt,w
  5593  0FB3  0086               	movwf	6
  5594  0FB4  3001               	movlw	1	; select bank2/3
  5595  0FB5  0087               	movwf	7
  5596  0FB6  3001               	movlw	1
  5597  0FB7  0781               	addwf	1,f
  5598  0FB8  3141               	addfsr 1,1
  5599  0FB9  1803               	skipnc
  5600  0FBA  0A81               	incf	1,f
  5601                           
  5602                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  5603  0FBB  3025               	movlw	37
  5604  0FBC  00F2               	movwf	fputc@c
  5605  0FBD  3000               	movlw	0
  5606  0FBE  00F3               	movwf	fputc@c+1
  5607  0FBF  0021               	movlb	1	; select bank1
  5608  0FC0  086B               	movf	vfpfcnvrt@fp^(0+128),w
  5609  0FC1  00D9               	movwf	??_vfpfcnvrt^(0+128)
  5610  0FC2  0859               	movf	??_vfpfcnvrt^(0+128),w
  5611  0FC3  00F4               	movwf	fputc@fp
  5612  0FC4  3192  22A7         	fcall	_fputc
  5613  0FC6                     l4009:	
  5614                           
  5615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  5616  0FC6  3001               	movlw	1
  5617  0FC7  0020               	movlb	0	; select bank0
  5618  0FC8  00EC               	movwf	?_vfpfcnvrt
  5619  0FC9  3000               	movlw	0
  5620  0FCA  00ED               	movwf	?_vfpfcnvrt+1
  5621  0FCB  0008               	return
  5622  0FCC                     l4013:	
  5623                           
  5624                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  5625  0FCC  0020               	movlb	0	; select bank0
  5626  0FCD  086C               	movf	vfpfcnvrt@fmt,w
  5627  0FCE  0086               	movwf	6
  5628  0FCF  3001               	movlw	1	; select bank2/3
  5629  0FD0  0087               	movwf	7
  5630  0FD1  3001               	movlw	1
  5631  0FD2  0781               	addwf	1,f
  5632  0FD3  3141               	addfsr 1,1
  5633  0FD4  1803               	skipnc
  5634  0FD5  0A81               	incf	1,f
  5635                           
  5636                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  5637  0FD6  01EC               	clrf	?_vfpfcnvrt
  5638  0FD7  01ED               	clrf	?_vfpfcnvrt+1
  5639  0FD8  0008               	return
  5640  0FD9                     l4019:	
  5641                           
  5642                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  5643  0FD9  0020               	movlb	0	; select bank0
  5644  0FDA  086C               	movf	vfpfcnvrt@fmt,w
  5645  0FDB  0086               	movwf	6
  5646  0FDC  3001               	movlw	1	; select bank2/3
  5647  0FDD  0087               	movwf	7
  5648  0FDE  3F40               	moviw [0]fsr1
  5649  0FDF  0021               	movlb	1	; select bank1
  5650  0FE0  00D9               	movwf	??_vfpfcnvrt^(0+128)
  5651  0FE1  3F41               	moviw [1]fsr1
  5652  0FE2  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5653  0FE3  0859               	movf	??_vfpfcnvrt^(0+128),w
  5654  0FE4  0084               	movwf	4
  5655  0FE5  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5656  0FE6  0085               	movwf	5
  5657  0FE7  0800               	movf	0,w	;code access
  5658  0FE8  00DB               	movwf	(??_vfpfcnvrt+2)^(0+128)
  5659  0FE9  01DC               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  5660  0FEA  085B               	movf	(??_vfpfcnvrt+2)^(0+128),w
  5661  0FEB  00F2               	movwf	fputc@c
  5662  0FEC  085C               	movf	(??_vfpfcnvrt+3)^(0+128),w
  5663  0FED  00F3               	movwf	fputc@c+1
  5664  0FEE  086B               	movf	vfpfcnvrt@fp^(0+128),w
  5665  0FEF  00DD               	movwf	(??_vfpfcnvrt+4)^(0+128)
  5666  0FF0  085D               	movf	(??_vfpfcnvrt+4)^(0+128),w
  5667  0FF1  00F4               	movwf	fputc@fp
  5668  0FF2  3192  22A7  318D   	fcall	_fputc
  5669                           
  5670                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5671  0FF5  0020               	movlb	0	; select bank0
  5672  0FF6  086C               	movf	vfpfcnvrt@fmt,w
  5673  0FF7  0086               	movwf	6
  5674  0FF8  3001               	movlw	1	; select bank2/3
  5675  0FF9  0087               	movwf	7
  5676  0FFA  3001               	movlw	1
  5677  0FFB  0781               	addwf	1,f
  5678  0FFC  3141               	addfsr 1,1
  5679  0FFD  1803               	skipnc
  5680  0FFE  0A81               	incf	1,f
  5681  0FFF  2FC6               	goto	l4009
  5682  1000                     __end_of_vfpfcnvrt:	
  5683                           
  5684                           	psect	text4
  5685  1369                     __ptext4:	
  5686 ;; *************** function _strncmp *****************
  5687 ;; Defined at:
  5688 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  5689 ;; Parameters:    Size  Location     Type
  5690 ;;  _l              1    wreg     PTR const unsigned char 
  5691 ;;		 -> vfpfcnvrt@ct(3), 
  5692 ;;  _r              2    0[COMMON] PTR const unsigned char 
  5693 ;;		 -> STR_12(3), 
  5694 ;;  n               2    2[COMMON] unsigned int 
  5695 ;; Auto vars:     Size  Location     Type
  5696 ;;  _l              1    5[COMMON] PTR const unsigned char 
  5697 ;;		 -> vfpfcnvrt@ct(3), 
  5698 ;;  r               2    6[COMMON] PTR const unsigned char 
  5699 ;;		 -> STR_12(3), 
  5700 ;;  l               1    8[COMMON] PTR const unsigned char 
  5701 ;;		 -> vfpfcnvrt@ct(3), 
  5702 ;; Return value:  Size  Location     Type
  5703 ;;                  2    0[COMMON] int 
  5704 ;; Registers used:
  5705 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  5706 ;; Tracked objects:
  5707 ;;		On entry : 0/0
  5708 ;;		On exit  : 0/0
  5709 ;;		Unchanged: 0/0
  5710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5711 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5712 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5713 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5714 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5715 ;;Total ram usage:        9 bytes
  5716 ;; Hardware stack levels used:    1
  5717 ;; This function calls:
  5718 ;;		Nothing
  5719 ;; This function is called by:
  5720 ;;		_vfpfcnvrt
  5721 ;; This function uses a non-reentrant model
  5722 ;;
  5723                           
  5724                           
  5725                           ;psect for function _strncmp
  5726  1369                     _strncmp:	
  5727                           
  5728                           ;incstack = 0
  5729                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  5730                           ;strncmp@_l stored from wreg
  5731  1369  00F5               	movwf	strncmp@_l
  5732  136A  0875               	movf	strncmp@_l,w
  5733  136B  00F4               	movwf	??_strncmp
  5734  136C  0874               	movf	??_strncmp,w
  5735  136D  00F8               	movwf	strncmp@l
  5736  136E  0871               	movf	strncmp@_r+1,w
  5737  136F  00F7               	movwf	strncmp@r+1
  5738  1370  0870               	movf	strncmp@_r,w
  5739  1371  00F6               	movwf	strncmp@r
  5740  1372  3001               	movlw	1
  5741  1373  02F2               	subwf	strncmp@n,f
  5742  1374  3000               	movlw	0
  5743  1375  3BF3               	subwfb	strncmp@n+1,f
  5744  1376  0A72               	incf	strncmp@n,w
  5745  1377  1D03               	skipz
  5746  1378  2BA3               	goto	l3915
  5747  1379  0A73               	incf	strncmp@n+1,w
  5748  137A  1D03               	btfss	3,2
  5749  137B  2BA3               	goto	l3915
  5750  137C  01F0               	clrf	?_strncmp
  5751  137D  01F1               	clrf	?_strncmp+1
  5752  137E  0008               	return
  5753  137F                     l3917:	
  5754  137F  0876               	movf	strncmp@r,w
  5755  1380  0084               	movwf	4
  5756  1381  0877               	movf	strncmp@r+1,w
  5757  1382  0085               	movwf	5
  5758  1383  0012               	moviw fsr0++
  5759  1384  1903               	btfsc	3,2
  5760  1385  2BA9               	goto	l3923
  5761  1386  0872               	movf	strncmp@n,w
  5762  1387  0473               	iorwf	strncmp@n+1,w
  5763  1388  1903               	btfsc	3,2
  5764  1389  2BA9               	goto	l3923
  5765  138A  0876               	movf	strncmp@r,w
  5766  138B  0084               	movwf	4
  5767  138C  0877               	movf	strncmp@r+1,w
  5768  138D  0085               	movwf	5
  5769  138E  0800               	movf	0,w	;code access
  5770  138F  00F4               	movwf	??_strncmp
  5771  1390  0878               	movf	strncmp@l,w
  5772  1391  0086               	movwf	6
  5773  1392  0187               	clrf	7
  5774  1393  0801               	movf	1,w
  5775  1394  0674               	xorwf	??_strncmp,w
  5776  1395  1D03               	btfss	3,2
  5777  1396  2BA9               	goto	l3923
  5778  1397  3001               	movlw	1
  5779  1398  00F4               	movwf	??_strncmp
  5780  1399  0874               	movf	??_strncmp,w
  5781  139A  07F8               	addwf	strncmp@l,f
  5782  139B  3001               	movlw	1
  5783  139C  07F6               	addwf	strncmp@r,f
  5784  139D  3000               	movlw	0
  5785  139E  3DF7               	addwfc	strncmp@r+1,f
  5786  139F  3001               	movlw	1
  5787  13A0  02F2               	subwf	strncmp@n,f
  5788  13A1  3000               	movlw	0
  5789  13A2  3BF3               	subwfb	strncmp@n+1,f
  5790  13A3                     l3915:	
  5791  13A3  0878               	movf	strncmp@l,w
  5792  13A4  0086               	movwf	6
  5793  13A5  0187               	clrf	7
  5794  13A6  0801               	movf	1,w
  5795  13A7  1D03               	btfss	3,2
  5796  13A8  2B7F               	goto	l3917
  5797  13A9                     l3923:	
  5798  13A9  0878               	movf	strncmp@l,w
  5799  13AA  0086               	movwf	6
  5800  13AB  0187               	clrf	7
  5801  13AC  0876               	movf	strncmp@r,w
  5802  13AD  0084               	movwf	4
  5803  13AE  0877               	movf	strncmp@r+1,w
  5804  13AF  0085               	movwf	5
  5805  13B0  0800               	movf	0,w	;code access
  5806  13B1  0201               	subwf	1,w
  5807  13B2  00F0               	movwf	?_strncmp
  5808  13B3  01F1               	clrf	?_strncmp+1
  5809  13B4  1C03               	skipc
  5810  13B5  03F1               	decf	?_strncmp+1,f
  5811  13B6  0008               	return
  5812  13B7                     __end_of_strncmp:	
  5813                           
  5814                           	psect	text5
  5815  0191                     __ptext5:	
  5816 ;; *************** function _efgtoa *****************
  5817 ;; Defined at:
  5818 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5819 ;; Parameters:    Size  Location     Type
  5820 ;;  fp              1    wreg     PTR struct _IO_FILE
  5821 ;;		 -> NULL(0), 
  5822 ;;  f               4   67[BANK0 ] PTR struct _IO_FILE
  5823 ;;  c               1   71[BANK0 ] unsigned char 
  5824 ;; Auto vars:     Size  Location     Type
  5825 ;;  fp              1   30[BANK1 ] PTR struct _IO_FILE
  5826 ;;		 -> NULL(0), 
  5827 ;;  u               4   53[BANK1 ] PTR struct _IO_FILE
  5828 ;;  g               4   45[BANK1 ] PTR struct _IO_FILE
  5829 ;;  l               4   39[BANK1 ] PTR struct _IO_FILE
  5830 ;;  h               4   35[BANK1 ] PTR struct _IO_FILE
  5831 ;;  ou              4    0[BANK1 ] PTR struct _IO_FILE
  5832 ;;  n               2   51[BANK1 ] int 
  5833 ;;  e               2   49[BANK1 ] int 
  5834 ;;  i               2   43[BANK1 ] int 
  5835 ;;  w               2   32[BANK1 ] int 
  5836 ;;  p               2   28[BANK1 ] int 
  5837 ;;  sign            2   26[BANK1 ] int 
  5838 ;;  d               2   24[BANK1 ] int 
  5839 ;;  ne              2   22[BANK1 ] int 
  5840 ;;  m               2   20[BANK1 ] int 
  5841 ;;  pp              2   18[BANK1 ] int 
  5842 ;;  t               2   16[BANK1 ] int 
  5843 ;;  mode            1   34[BANK1 ] unsigned char 
  5844 ;;  nmode           1   31[BANK1 ] unsigned char 
  5845 ;; Return value:  Size  Location     Type
  5846 ;;                  2   67[BANK0 ] int 
  5847 ;; Registers used:
  5848 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5849 ;; Tracked objects:
  5850 ;;		On entry : 0/0
  5851 ;;		On exit  : 0/0
  5852 ;;		Unchanged: 0/0
  5853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5854 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5855 ;;      Locals:         0       0      57       0       0       0       0       0       0       0       0       0       
      +0       0
  5856 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5857 ;;      Totals:         0       9      57       0       0       0       0       0       0       0       0       0       
      +0       0
  5858 ;;Total ram usage:       66 bytes
  5859 ;; Hardware stack levels used:    1
  5860 ;; Hardware stack levels required when called:    5
  5861 ;; This function calls:
  5862 ;;		___awdiv
  5863 ;;		___awmod
  5864 ;;		___fladd
  5865 ;;		___fldiv
  5866 ;;		___fleq
  5867 ;;		___flge
  5868 ;;		___flmul
  5869 ;;		___flneg
  5870 ;;		___flsub
  5871 ;;		___fltol
  5872 ;;		___fpclassifyf
  5873 ;;		_floorf
  5874 ;;		_isupper
  5875 ;;		_pad
  5876 ;;		_strcpy
  5877 ;;		_tolower
  5878 ;; This function is called by:
  5879 ;;		_vfpfcnvrt
  5880 ;; This function uses a non-reentrant model
  5881 ;;
  5882                           
  5883                           
  5884                           ;psect for function _efgtoa
  5885  0191                     _efgtoa:	
  5886                           
  5887                           ;incstack = 0
  5888                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5889                           ;efgtoa@fp stored from wreg
  5890  0191  0021               	movlb	1	; select bank1
  5891  0192  00BE               	movwf	efgtoa@fp^(0+128)
  5892                           
  5893                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  5894  0193  01BA               	clrf	efgtoa@sign^(0+128)
  5895  0194  01BB               	clrf	(efgtoa@sign+1)^(0+128)
  5896                           
  5897                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  5898  0195  0020               	movlb	0	; select bank0
  5899  0196  0866               	movf	efgtoa@f+3,w
  5900  0197  0021               	movlb	1	; select bank1
  5901  0198  00D0               	movwf	(efgtoa@g+3)^(0+128)
  5902  0199  0020               	movlb	0	; select bank0
  5903  019A  0865               	movf	efgtoa@f+2,w
  5904  019B  0021               	movlb	1	; select bank1
  5905  019C  00CF               	movwf	(efgtoa@g+2)^(0+128)
  5906  019D  0020               	movlb	0	; select bank0
  5907  019E  0864               	movf	efgtoa@f+1,w
  5908  019F  0021               	movlb	1	; select bank1
  5909  01A0  00CE               	movwf	(efgtoa@g+1)^(0+128)
  5910  01A1  0020               	movlb	0	; select bank0
  5911  01A2  0863               	movf	efgtoa@f,w
  5912  01A3  0021               	movlb	1	; select bank1
  5913  01A4  00CD               	movwf	efgtoa@g^(0+128)
  5914                           
  5915                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  5916  01A5  0850               	movf	(efgtoa@g+3)^(0+128),w
  5917  01A6  0020               	movlb	0	; select bank0
  5918  01A7  00CA               	movwf	___flge@ff1+3
  5919  01A8  0021               	movlb	1	; select bank1
  5920  01A9  084F               	movf	(efgtoa@g+2)^(0+128),w
  5921  01AA  0020               	movlb	0	; select bank0
  5922  01AB  00C9               	movwf	___flge@ff1+2
  5923  01AC  0021               	movlb	1	; select bank1
  5924  01AD  084E               	movf	(efgtoa@g+1)^(0+128),w
  5925  01AE  0020               	movlb	0	; select bank0
  5926  01AF  00C8               	movwf	___flge@ff1+1
  5927  01B0  0021               	movlb	1	; select bank1
  5928  01B1  084D               	movf	efgtoa@g^(0+128),w
  5929  01B2  0020               	movlb	0	; select bank0
  5930  01B3  00C7               	movwf	___flge@ff1
  5931  01B4  3000               	movlw	0
  5932  01B5  00CE               	movwf	___flge@ff2+3
  5933  01B6  3000               	movlw	0
  5934  01B7  00CD               	movwf	___flge@ff2+2
  5935  01B8  3000               	movlw	0
  5936  01B9  00CC               	movwf	___flge@ff2+1
  5937  01BA  3000               	movlw	0
  5938  01BB  00CB               	movwf	___flge@ff2
  5939  01BC  3195  2535  3181   	fcall	___flge
  5940  01BF  1803               	btfsc	3,0
  5941  01C0  29DA               	goto	l3573
  5942                           
  5943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  5944  01C1  3001               	movlw	1
  5945  01C2  0021               	movlb	1	; select bank1
  5946  01C3  00BA               	movwf	efgtoa@sign^(0+128)
  5947  01C4  3000               	movlw	0
  5948  01C5  00BB               	movwf	(efgtoa@sign^(0+128)+1)
  5949                           
  5950                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  5951  01C6  0850               	movf	(efgtoa@g+3)^(0+128),w
  5952  01C7  00F3               	movwf	___flneg@f1+3
  5953  01C8  084F               	movf	(efgtoa@g+2)^(0+128),w
  5954  01C9  00F2               	movwf	___flneg@f1+2
  5955  01CA  084E               	movf	(efgtoa@g+1)^(0+128),w
  5956  01CB  00F1               	movwf	___flneg@f1+1
  5957  01CC  084D               	movf	efgtoa@g^(0+128),w
  5958  01CD  00F0               	movwf	___flneg@f1
  5959  01CE  3190  20B1  3181   	fcall	___flneg
  5960  01D1  0873               	movf	?___flneg+3,w
  5961  01D2  0021               	movlb	1	; select bank1
  5962  01D3  00D0               	movwf	(efgtoa@g+3)^(0+128)
  5963  01D4  0872               	movf	?___flneg+2,w
  5964  01D5  00CF               	movwf	(efgtoa@g+2)^(0+128)
  5965  01D6  0871               	movf	?___flneg+1,w
  5966  01D7  00CE               	movwf	(efgtoa@g+1)^(0+128)
  5967  01D8  0870               	movf	?___flneg,w
  5968  01D9  00CD               	movwf	efgtoa@g^(0+128)
  5969  01DA                     l3573:	
  5970                           
  5971                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  5972  01DA  0021               	movlb	1	; select bank1
  5973  01DB  01D3               	clrf	efgtoa@n^(0+128)
  5974  01DC  01D4               	clrf	(efgtoa@n+1)^(0+128)
  5975                           
  5976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  5977  01DD  0022               	movlb	2	; select bank2
  5978  01DE  0856               	movf	(_width+1)^(0+256),w
  5979  01DF  0021               	movlb	1	; select bank1
  5980  01E0  00C1               	movwf	(efgtoa@w+1)^(0+128)
  5981  01E1  0022               	movlb	2	; select bank2
  5982  01E2  0855               	movf	_width^(0+256),w
  5983  01E3  0021               	movlb	1	; select bank1
  5984  01E4  00C0               	movwf	efgtoa@w^(0+128)
  5985                           
  5986                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  5987  01E5  083A               	movf	efgtoa@sign^(0+128),w
  5988  01E6  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  5989  01E7  1D03               	btfss	3,2
  5990  01E8  29EC               	goto	l3581
  5991  01E9  0022               	movlb	2	; select bank2
  5992  01EA  1D59               	btfss	_flags^(0+256),2
  5993  01EB  2A06               	goto	l3593
  5994  01EC                     l3581:	
  5995                           
  5996                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  5997  01EC  0021               	movlb	1	; select bank1
  5998  01ED  083A               	movf	efgtoa@sign^(0+128),w
  5999  01EE  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  6000  01EF  1D03               	btfss	3,2
  6001  01F0  29F3               	goto	l3585
  6002  01F1  302B               	movlw	43
  6003  01F2  29F4               	goto	L3
  6004  01F3                     l3585:	
  6005  01F3  302D               	movlw	45
  6006  01F4                     L3:	
  6007  01F4  00A4               	movwf	_efgtoa$799^(0+128)
  6008  01F5  3000               	movlw	0
  6009  01F6  00A5               	movwf	(_efgtoa$799^(0+128)+1)
  6010  01F7  0824               	movf	_efgtoa$799^(0+128),w
  6011  01F8  0020               	movlb	0	; select bank0
  6012  01F9  00E8               	movwf	??_efgtoa
  6013  01FA  0868               	movf	??_efgtoa,w
  6014  01FB  0023               	movlb	3	; select bank3
  6015  01FC  00A0               	movwf	_dbuf^(0+384)
  6016                           
  6017                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  6018  01FD  3001               	movlw	1
  6019  01FE  0021               	movlb	1	; select bank1
  6020  01FF  07D3               	addwf	efgtoa@n^(0+128),f
  6021  0200  3000               	movlw	0
  6022  0201  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  6023                           
  6024                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  6025  0202  30FF               	movlw	255
  6026  0203  07C0               	addwf	efgtoa@w^(0+128),f
  6027  0204  30FF               	movlw	255
  6028  0205  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  6029  0206                     l3593:	
  6030                           
  6031                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6032  0206  0021               	movlb	1	; select bank1
  6033  0207  0850               	movf	(efgtoa@g+3)^(0+128),w
  6034  0208  00F3               	movwf	___fpclassifyf@x+3
  6035  0209  084F               	movf	(efgtoa@g+2)^(0+128),w
  6036  020A  00F2               	movwf	___fpclassifyf@x+2
  6037  020B  084E               	movf	(efgtoa@g+1)^(0+128),w
  6038  020C  00F1               	movwf	___fpclassifyf@x+1
  6039  020D  084D               	movf	efgtoa@g^(0+128),w
  6040  020E  00F0               	movwf	___fpclassifyf@x
  6041  020F  3194  24BD  3181   	fcall	___fpclassifyf
  6042  0212  0370               	decf	?___fpclassifyf,w
  6043  0213  0471               	iorwf	?___fpclassifyf+1,w
  6044  0214  1D03               	btfss	3,2
  6045  0215  2A5E               	goto	l3611
  6046  0216  0020               	movlb	0	; select bank0
  6047  0217  0867               	movf	efgtoa@c,w
  6048  0218  3EBF               	addlw	191
  6049  0219  00E8               	movwf	??_efgtoa
  6050  021A  30FF               	movlw	255
  6051  021B  1803               	skipnc
  6052  021C  3000               	movlw	0
  6053  021D  00E9               	movwf	??_efgtoa+1
  6054  021E  3000               	movlw	0
  6055  021F  0269               	subwf	??_efgtoa+1,w
  6056  0220  301A               	movlw	26
  6057  0221  1903               	skipnz
  6058  0222  0268               	subwf	??_efgtoa,w
  6059  0223  1803               	btfsc	3,0
  6060  0224  2A27               	goto	u4740
  6061  0225  3001               	movlw	1
  6062  0226  2A28               	goto	u4750
  6063  0227                     u4740:	
  6064  0227  3000               	movlw	0
  6065  0228                     u4750:	
  6066  0228  00EA               	movwf	??_efgtoa+2
  6067  0229  01EB               	clrf	??_efgtoa+3
  6068  022A  086A               	movf	??_efgtoa+2,w
  6069  022B  0021               	movlb	1	; select bank1
  6070  022C  00A6               	movwf	_efgtoa$800^(0+128)
  6071  022D  0020               	movlb	0	; select bank0
  6072  022E  086B               	movf	??_efgtoa+3,w
  6073  022F  0021               	movlb	1	; select bank1
  6074  0230  00A7               	movwf	(_efgtoa$800+1)^(0+128)
  6075  0231  0826               	movf	_efgtoa$800^(0+128),w
  6076  0232  0427               	iorwf	(_efgtoa$800+1)^(0+128),w
  6077  0233  1903               	btfsc	3,2
  6078  0234  2A39               	goto	l3603
  6079                           
  6080                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  6081  0235  3006               	movlw	low (STR_2| (0+32768))
  6082  0236  00F0               	movwf	strcpy@src
  6083  0237  3098               	movlw	high (STR_2| (0+32768))
  6084  0238  2A3C               	goto	L4
  6085  0239                     l3603:	
  6086                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  6087                           
  6088                           
  6089                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  6090  0239  300E               	movlw	low (STR_3| (0+32768))
  6091  023A  00F0               	movwf	strcpy@src
  6092  023B  3098               	movlw	high (STR_3| (0+32768))
  6093  023C                     L4:	
  6094  023C  00F1               	movwf	strcpy@src+1
  6095  023D  0853               	movf	efgtoa@n^(0+128),w
  6096  023E  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6097  023F  3191  21B9  3181   	fcall	_strcpy
  6098                           
  6099                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  6100  0242  30FD               	movlw	253
  6101  0243  0021               	movlb	1	; select bank1
  6102  0244  07C0               	addwf	efgtoa@w^(0+128),f
  6103  0245  30FF               	movlw	255
  6104  0246  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  6105                           
  6106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  6107  0247  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  6108  0248  0020               	movlb	0	; select bank0
  6109  0249  00E8               	movwf	??_efgtoa
  6110  024A  0868               	movf	??_efgtoa,w
  6111  024B  00A4               	movwf	pad@buf
  6112  024C  0021               	movlb	1	; select bank1
  6113  024D  0841               	movf	(efgtoa@w+1)^(0+128),w
  6114  024E  0020               	movlb	0	; select bank0
  6115  024F  00A6               	movwf	pad@p+1
  6116  0250  0021               	movlb	1	; select bank1
  6117  0251  0840               	movf	efgtoa@w^(0+128),w
  6118  0252  0020               	movlb	0	; select bank0
  6119  0253  00A5               	movwf	pad@p
  6120  0254  0021               	movlb	1	; select bank1
  6121  0255  083E               	movf	efgtoa@fp^(0+128),w
  6122  0256  3193  23B7         	fcall	_pad
  6123  0258  0020               	movlb	0	; select bank0
  6124  0259  0825               	movf	?_pad+1,w
  6125  025A  00E4               	movwf	?_efgtoa+1
  6126  025B  0824               	movf	?_pad,w
  6127  025C  00E3               	movwf	?_efgtoa
  6128  025D  0008               	return
  6129  025E                     l3611:	
  6130                           
  6131                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6132  025E  0021               	movlb	1	; select bank1
  6133  025F  0850               	movf	(efgtoa@g+3)^(0+128),w
  6134  0260  00F3               	movwf	___fpclassifyf@x+3
  6135  0261  084F               	movf	(efgtoa@g+2)^(0+128),w
  6136  0262  00F2               	movwf	___fpclassifyf@x+2
  6137  0263  084E               	movf	(efgtoa@g+1)^(0+128),w
  6138  0264  00F1               	movwf	___fpclassifyf@x+1
  6139  0265  084D               	movf	efgtoa@g^(0+128),w
  6140  0266  00F0               	movwf	___fpclassifyf@x
  6141  0267  3194  24BD  3181   	fcall	___fpclassifyf
  6142  026A  0870               	movf	?___fpclassifyf,w
  6143  026B  0471               	iorwf	?___fpclassifyf+1,w
  6144  026C  1D03               	btfss	3,2
  6145  026D  2AB6               	goto	l3629
  6146  026E  0020               	movlb	0	; select bank0
  6147  026F  0867               	movf	efgtoa@c,w
  6148  0270  3EBF               	addlw	191
  6149  0271  00E8               	movwf	??_efgtoa
  6150  0272  30FF               	movlw	255
  6151  0273  1803               	skipnc
  6152  0274  3000               	movlw	0
  6153  0275  00E9               	movwf	??_efgtoa+1
  6154  0276  3000               	movlw	0
  6155  0277  0269               	subwf	??_efgtoa+1,w
  6156  0278  301A               	movlw	26
  6157  0279  1903               	skipnz
  6158  027A  0268               	subwf	??_efgtoa,w
  6159  027B  1803               	btfsc	3,0
  6160  027C  2A7F               	goto	u4780
  6161  027D  3001               	movlw	1
  6162  027E  2A80               	goto	u4790
  6163  027F                     u4780:	
  6164  027F  3000               	movlw	0
  6165  0280                     u4790:	
  6166  0280  00EA               	movwf	??_efgtoa+2
  6167  0281  01EB               	clrf	??_efgtoa+3
  6168  0282  086A               	movf	??_efgtoa+2,w
  6169  0283  0021               	movlb	1	; select bank1
  6170  0284  00A8               	movwf	_efgtoa$805^(0+128)
  6171  0285  0020               	movlb	0	; select bank0
  6172  0286  086B               	movf	??_efgtoa+3,w
  6173  0287  0021               	movlb	1	; select bank1
  6174  0288  00A9               	movwf	(_efgtoa$805+1)^(0+128)
  6175  0289  0828               	movf	_efgtoa$805^(0+128),w
  6176  028A  0429               	iorwf	(_efgtoa$805+1)^(0+128),w
  6177  028B  1903               	btfsc	3,2
  6178  028C  2A91               	goto	l3621
  6179                           
  6180                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  6181  028D  300A               	movlw	low (STR_6| (0+32768))
  6182  028E  00F0               	movwf	strcpy@src
  6183  028F  3098               	movlw	high (STR_6| (0+32768))
  6184  0290  2A94               	goto	L5
  6185  0291                     l3621:	
  6186                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  6187                           
  6188                           
  6189                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  6190  0291  3012               	movlw	low (STR_7| (0+32768))
  6191  0292  00F0               	movwf	strcpy@src
  6192  0293  3098               	movlw	high (STR_7| (0+32768))
  6193  0294                     L5:	
  6194  0294  00F1               	movwf	strcpy@src+1
  6195  0295  0853               	movf	efgtoa@n^(0+128),w
  6196  0296  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6197  0297  3191  21B9  3181   	fcall	_strcpy
  6198                           
  6199                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 358:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  6200  029A  30FD               	movlw	253
  6201  029B  0021               	movlb	1	; select bank1
  6202  029C  07C0               	addwf	efgtoa@w^(0+128),f
  6203  029D  30FF               	movlw	255
  6204  029E  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  6205                           
  6206                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 359:       
      +                            return pad(fp, &dbuf[0], w);
  6207  029F  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  6208  02A0  0020               	movlb	0	; select bank0
  6209  02A1  00E8               	movwf	??_efgtoa
  6210  02A2  0868               	movf	??_efgtoa,w
  6211  02A3  00A4               	movwf	pad@buf
  6212  02A4  0021               	movlb	1	; select bank1
  6213  02A5  0841               	movf	(efgtoa@w+1)^(0+128),w
  6214  02A6  0020               	movlb	0	; select bank0
  6215  02A7  00A6               	movwf	pad@p+1
  6216  02A8  0021               	movlb	1	; select bank1
  6217  02A9  0840               	movf	efgtoa@w^(0+128),w
  6218  02AA  0020               	movlb	0	; select bank0
  6219  02AB  00A5               	movwf	pad@p
  6220  02AC  0021               	movlb	1	; select bank1
  6221  02AD  083E               	movf	efgtoa@fp^(0+128),w
  6222  02AE  3193  23B7         	fcall	_pad
  6223  02B0  0020               	movlb	0	; select bank0
  6224  02B1  0825               	movf	?_pad+1,w
  6225  02B2  00E4               	movwf	?_efgtoa+1
  6226  02B3  0824               	movf	?_pad,w
  6227  02B4  00E3               	movwf	?_efgtoa
  6228  02B5  0008               	return
  6229  02B6                     l3629:	
  6230                           
  6231                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  6232  02B6  303F               	movlw	63
  6233  02B7  0021               	movlb	1	; select bank1
  6234  02B8  00D8               	movwf	(efgtoa@u+3)^(0+128)
  6235  02B9  3080               	movlw	128
  6236  02BA  00D7               	movwf	(efgtoa@u+2)^(0+128)
  6237  02BB  3000               	movlw	0
  6238  02BC  00D6               	movwf	(efgtoa@u+1)^(0+128)
  6239  02BD  3000               	movlw	0
  6240  02BE  00D5               	movwf	efgtoa@u^(0+128)
  6241                           
  6242                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  6243  02BF  01D1               	clrf	efgtoa@e^(0+128)
  6244  02C0  01D2               	clrf	(efgtoa@e+1)^(0+128)
  6245                           
  6246                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  6247  02C1  0850               	movf	(efgtoa@g+3)^(0+128),w
  6248  02C2  00F3               	movwf	___fleq@ff1+3
  6249  02C3  084F               	movf	(efgtoa@g+2)^(0+128),w
  6250  02C4  00F2               	movwf	___fleq@ff1+2
  6251  02C5  084E               	movf	(efgtoa@g+1)^(0+128),w
  6252  02C6  00F1               	movwf	___fleq@ff1+1
  6253  02C7  084D               	movf	efgtoa@g^(0+128),w
  6254  02C8  00F0               	movwf	___fleq@ff1
  6255  02C9  3000               	movlw	0
  6256  02CA  00F7               	movwf	___fleq@ff2+3
  6257  02CB  3000               	movlw	0
  6258  02CC  00F6               	movwf	___fleq@ff2+2
  6259  02CD  3000               	movlw	0
  6260  02CE  00F5               	movwf	___fleq@ff2+1
  6261  02CF  3000               	movlw	0
  6262  02D0  00F4               	movwf	___fleq@ff2
  6263  02D1  3193  2321  3181   	fcall	___fleq
  6264  02D4  1C03               	btfss	3,0
  6265  02D5  2B07               	goto	l3641
  6266  02D6  2B87               	goto	l3649
  6267  02D7                     l3637:	
  6268                           
  6269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  6270  02D7  3041               	movlw	65
  6271  02D8  0020               	movlb	0	; select bank0
  6272  02D9  00B0               	movwf	___flmul@b+3
  6273  02DA  3020               	movlw	32
  6274  02DB  00AF               	movwf	___flmul@b+2
  6275  02DC  3000               	movlw	0
  6276  02DD  00AE               	movwf	___flmul@b+1
  6277  02DE  3000               	movlw	0
  6278  02DF  00AD               	movwf	___flmul@b
  6279  02E0  0021               	movlb	1	; select bank1
  6280  02E1  0858               	movf	(efgtoa@u+3)^(0+128),w
  6281  02E2  0020               	movlb	0	; select bank0
  6282  02E3  00B4               	movwf	___flmul@a+3
  6283  02E4  0021               	movlb	1	; select bank1
  6284  02E5  0857               	movf	(efgtoa@u+2)^(0+128),w
  6285  02E6  0020               	movlb	0	; select bank0
  6286  02E7  00B3               	movwf	___flmul@a+2
  6287  02E8  0021               	movlb	1	; select bank1
  6288  02E9  0856               	movf	(efgtoa@u+1)^(0+128),w
  6289  02EA  0020               	movlb	0	; select bank0
  6290  02EB  00B2               	movwf	___flmul@a+1
  6291  02EC  0021               	movlb	1	; select bank1
  6292  02ED  0855               	movf	efgtoa@u^(0+128),w
  6293  02EE  0020               	movlb	0	; select bank0
  6294  02EF  00B1               	movwf	___flmul@a
  6295  02F0  318B  2368  3181   	fcall	___flmul
  6296  02F3  0020               	movlb	0	; select bank0
  6297  02F4  0830               	movf	?___flmul+3,w
  6298  02F5  0021               	movlb	1	; select bank1
  6299  02F6  00D8               	movwf	(efgtoa@u+3)^(0+128)
  6300  02F7  0020               	movlb	0	; select bank0
  6301  02F8  082F               	movf	?___flmul+2,w
  6302  02F9  0021               	movlb	1	; select bank1
  6303  02FA  00D7               	movwf	(efgtoa@u+2)^(0+128)
  6304  02FB  0020               	movlb	0	; select bank0
  6305  02FC  082E               	movf	?___flmul+1,w
  6306  02FD  0021               	movlb	1	; select bank1
  6307  02FE  00D6               	movwf	(efgtoa@u+1)^(0+128)
  6308  02FF  0020               	movlb	0	; select bank0
  6309  0300  082D               	movf	?___flmul,w
  6310  0301  0021               	movlb	1	; select bank1
  6311  0302  00D5               	movwf	efgtoa@u^(0+128)
  6312                           
  6313                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  6314  0303  3001               	movlw	1
  6315  0304  07D1               	addwf	efgtoa@e^(0+128),f
  6316  0305  3000               	movlw	0
  6317  0306  3DD2               	addwfc	(efgtoa@e+1)^(0+128),f
  6318  0307                     l3641:	
  6319                           
  6320                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  6321  0307  0021               	movlb	1	; select bank1
  6322  0308  0850               	movf	(efgtoa@g+3)^(0+128),w
  6323  0309  0020               	movlb	0	; select bank0
  6324  030A  00CA               	movwf	___flge@ff1+3
  6325  030B  0021               	movlb	1	; select bank1
  6326  030C  084F               	movf	(efgtoa@g+2)^(0+128),w
  6327  030D  0020               	movlb	0	; select bank0
  6328  030E  00C9               	movwf	___flge@ff1+2
  6329  030F  0021               	movlb	1	; select bank1
  6330  0310  084E               	movf	(efgtoa@g+1)^(0+128),w
  6331  0311  0020               	movlb	0	; select bank0
  6332  0312  00C8               	movwf	___flge@ff1+1
  6333  0313  0021               	movlb	1	; select bank1
  6334  0314  084D               	movf	efgtoa@g^(0+128),w
  6335  0315  0020               	movlb	0	; select bank0
  6336  0316  00C7               	movwf	___flge@ff1
  6337  0317  3041               	movlw	65
  6338  0318  00B0               	movwf	___flmul@b+3
  6339  0319  3020               	movlw	32
  6340  031A  00AF               	movwf	___flmul@b+2
  6341  031B  3000               	movlw	0
  6342  031C  00AE               	movwf	___flmul@b+1
  6343  031D  3000               	movlw	0
  6344  031E  00AD               	movwf	___flmul@b
  6345  031F  0021               	movlb	1	; select bank1
  6346  0320  0858               	movf	(efgtoa@u+3)^(0+128),w
  6347  0321  0020               	movlb	0	; select bank0
  6348  0322  00B4               	movwf	___flmul@a+3
  6349  0323  0021               	movlb	1	; select bank1
  6350  0324  0857               	movf	(efgtoa@u+2)^(0+128),w
  6351  0325  0020               	movlb	0	; select bank0
  6352  0326  00B3               	movwf	___flmul@a+2
  6353  0327  0021               	movlb	1	; select bank1
  6354  0328  0856               	movf	(efgtoa@u+1)^(0+128),w
  6355  0329  0020               	movlb	0	; select bank0
  6356  032A  00B2               	movwf	___flmul@a+1
  6357  032B  0021               	movlb	1	; select bank1
  6358  032C  0855               	movf	efgtoa@u^(0+128),w
  6359  032D  0020               	movlb	0	; select bank0
  6360  032E  00B1               	movwf	___flmul@a
  6361  032F  318B  2368  3181   	fcall	___flmul
  6362  0332  0020               	movlb	0	; select bank0
  6363  0333  0830               	movf	?___flmul+3,w
  6364  0334  00CE               	movwf	___flge@ff2+3
  6365  0335  082F               	movf	?___flmul+2,w
  6366  0336  00CD               	movwf	___flge@ff2+2
  6367  0337  082E               	movf	?___flmul+1,w
  6368  0338  00CC               	movwf	___flge@ff2+1
  6369  0339  082D               	movf	?___flmul,w
  6370  033A  00CB               	movwf	___flge@ff2
  6371  033B  3195  2535  3181   	fcall	___flge
  6372  033E  1C03               	btfss	3,0
  6373  033F  2B62               	goto	l3647
  6374  0340  2AD7               	goto	l3637
  6375  0341                     l3643:	
  6376                           
  6377                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  6378  0341  3041               	movlw	65
  6379  0342  00F3               	movwf	___fldiv@a+3
  6380  0343  3020               	movlw	32
  6381  0344  00F2               	movwf	___fldiv@a+2
  6382  0345  3000               	movlw	0
  6383  0346  00F1               	movwf	___fldiv@a+1
  6384  0347  3000               	movlw	0
  6385  0348  00F0               	movwf	___fldiv@a
  6386  0349  0021               	movlb	1	; select bank1
  6387  034A  0858               	movf	(efgtoa@u+3)^(0+128),w
  6388  034B  00F7               	movwf	___fldiv@b+3
  6389  034C  0857               	movf	(efgtoa@u+2)^(0+128),w
  6390  034D  00F6               	movwf	___fldiv@b+2
  6391  034E  0856               	movf	(efgtoa@u+1)^(0+128),w
  6392  034F  00F5               	movwf	___fldiv@b+1
  6393  0350  0855               	movf	efgtoa@u^(0+128),w
  6394  0351  00F4               	movwf	___fldiv@b
  6395  0352  3180  2017  3181   	fcall	___fldiv
  6396  0355  0873               	movf	?___fldiv+3,w
  6397  0356  0021               	movlb	1	; select bank1
  6398  0357  00D8               	movwf	(efgtoa@u+3)^(0+128)
  6399  0358  0872               	movf	?___fldiv+2,w
  6400  0359  00D7               	movwf	(efgtoa@u+2)^(0+128)
  6401  035A  0871               	movf	?___fldiv+1,w
  6402  035B  00D6               	movwf	(efgtoa@u+1)^(0+128)
  6403  035C  0870               	movf	?___fldiv,w
  6404  035D  00D5               	movwf	efgtoa@u^(0+128)
  6405                           
  6406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  6407  035E  30FF               	movlw	255
  6408  035F  07D1               	addwf	efgtoa@e^(0+128),f
  6409  0360  30FF               	movlw	255
  6410  0361  3DD2               	addwfc	(efgtoa@e+1)^(0+128),f
  6411  0362                     l3647:	
  6412                           
  6413                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  6414  0362  0021               	movlb	1	; select bank1
  6415  0363  0850               	movf	(efgtoa@g+3)^(0+128),w
  6416  0364  0020               	movlb	0	; select bank0
  6417  0365  00CA               	movwf	___flge@ff1+3
  6418  0366  0021               	movlb	1	; select bank1
  6419  0367  084F               	movf	(efgtoa@g+2)^(0+128),w
  6420  0368  0020               	movlb	0	; select bank0
  6421  0369  00C9               	movwf	___flge@ff1+2
  6422  036A  0021               	movlb	1	; select bank1
  6423  036B  084E               	movf	(efgtoa@g+1)^(0+128),w
  6424  036C  0020               	movlb	0	; select bank0
  6425  036D  00C8               	movwf	___flge@ff1+1
  6426  036E  0021               	movlb	1	; select bank1
  6427  036F  084D               	movf	efgtoa@g^(0+128),w
  6428  0370  0020               	movlb	0	; select bank0
  6429  0371  00C7               	movwf	___flge@ff1
  6430  0372  0021               	movlb	1	; select bank1
  6431  0373  0858               	movf	(efgtoa@u+3)^(0+128),w
  6432  0374  0020               	movlb	0	; select bank0
  6433  0375  00CE               	movwf	___flge@ff2+3
  6434  0376  0021               	movlb	1	; select bank1
  6435  0377  0857               	movf	(efgtoa@u+2)^(0+128),w
  6436  0378  0020               	movlb	0	; select bank0
  6437  0379  00CD               	movwf	___flge@ff2+2
  6438  037A  0021               	movlb	1	; select bank1
  6439  037B  0856               	movf	(efgtoa@u+1)^(0+128),w
  6440  037C  0020               	movlb	0	; select bank0
  6441  037D  00CC               	movwf	___flge@ff2+1
  6442  037E  0021               	movlb	1	; select bank1
  6443  037F  0855               	movf	efgtoa@u^(0+128),w
  6444  0380  0020               	movlb	0	; select bank0
  6445  0381  00CB               	movwf	___flge@ff2
  6446  0382  3195  2535  3181   	fcall	___flge
  6447  0385  1C03               	btfss	3,0
  6448  0386  2B41               	goto	l3643
  6449  0387                     l3649:	
  6450                           
  6451                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  6452  0387  0020               	movlb	0	; select bank0
  6453  0388  0867               	movf	efgtoa@c,w
  6454  0389  00E8               	movwf	??_efgtoa
  6455  038A  01E9               	clrf	??_efgtoa+1
  6456  038B  0868               	movf	??_efgtoa,w
  6457  038C  00F6               	movwf	tolower@c
  6458  038D  0869               	movf	??_efgtoa+1,w
  6459  038E  00F7               	movwf	tolower@c+1
  6460  038F  3191  21F9  3181   	fcall	_tolower
  6461  0392  0876               	movf	?_tolower,w
  6462  0393  0020               	movlb	0	; select bank0
  6463  0394  00EA               	movwf	??_efgtoa+2
  6464  0395  086A               	movf	??_efgtoa+2,w
  6465  0396  0021               	movlb	1	; select bank1
  6466  0397  00C2               	movwf	efgtoa@mode^(0+128)
  6467                           
  6468                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  6469  0398  0842               	movf	efgtoa@mode^(0+128),w
  6470  0399  0020               	movlb	0	; select bank0
  6471  039A  00E8               	movwf	??_efgtoa
  6472  039B  0868               	movf	??_efgtoa,w
  6473  039C  0021               	movlb	1	; select bank1
  6474  039D  00BF               	movwf	efgtoa@nmode^(0+128)
  6475                           
  6476                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  6477  039E  3067               	movlw	103
  6478  039F  0642               	xorwf	efgtoa@mode^(0+128),w
  6479  03A0  1D03               	btfss	3,2
  6480  03A1  2BBE               	goto	l464
  6481                           
  6482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  6483  03A2  0022               	movlb	2	; select bank2
  6484  03A3  0857               	movf	_prec^(0+256),w
  6485  03A4  0458               	iorwf	(_prec+1)^(0+256),w
  6486  03A5  1D03               	btfss	3,2
  6487  03A6  2BAB               	goto	l465
  6488                           
  6489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  6490  03A7  3001               	movlw	1
  6491  03A8  00D7               	movwf	_prec^(0+256)
  6492  03A9  3000               	movlw	0
  6493  03AA  00D8               	movwf	(_prec^(0+256)+1)
  6494  03AB                     l465:	
  6495                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 382:   }
  6496                           
  6497                           
  6498                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  6499  03AB  0858               	movf	(_prec+1)^(0+256),w
  6500  03AC  3A80               	xorlw	128
  6501  03AD  0020               	movlb	0	; select bank0
  6502  03AE  00E8               	movwf	??_efgtoa
  6503  03AF  3080               	movlw	128
  6504  03B0  0268               	subwf	??_efgtoa,w
  6505  03B1  1D03               	skipz
  6506  03B2  2BB6               	goto	u4865
  6507  03B3  3001               	movlw	1
  6508  03B4  0022               	movlb	2	; select bank2
  6509  03B5  0257               	subwf	_prec^(0+256),w
  6510  03B6                     u4865:	
  6511  03B6  1803               	skipnc
  6512  03B7  2BC1               	goto	l3661
  6513  03B8                     l3659:	
  6514  03B8  3006               	movlw	6
  6515  03B9  0021               	movlb	1	; select bank1
  6516  03BA  00BC               	movwf	efgtoa@p^(0+128)
  6517  03BB  3000               	movlw	0
  6518  03BC  00BD               	movwf	(efgtoa@p^(0+128)+1)
  6519  03BD  2BC9               	goto	l3667
  6520  03BE                     l464:	
  6521                           
  6522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  6523  03BE  0022               	movlb	2	; select bank2
  6524  03BF  1BD8               	btfsc	(_prec+1)^(0+256),7
  6525  03C0  2BB8               	goto	l3659
  6526  03C1                     l3661:	
  6527  03C1  0022               	movlb	2	; select bank2
  6528  03C2  0858               	movf	(_prec+1)^(0+256),w
  6529  03C3  0021               	movlb	1	; select bank1
  6530  03C4  00BD               	movwf	(efgtoa@p+1)^(0+128)
  6531  03C5  0022               	movlb	2	; select bank2
  6532  03C6  0857               	movf	_prec^(0+256),w
  6533  03C7  0021               	movlb	1	; select bank1
  6534  03C8  00BC               	movwf	efgtoa@p^(0+128)
  6535  03C9                     l3667:	
  6536                           
  6537                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  6538  03C9  3067               	movlw	103
  6539  03CA  0642               	xorwf	efgtoa@mode^(0+128),w
  6540  03CB  1D03               	btfss	3,2
  6541  03CC  2BFC               	goto	l475
  6542                           
  6543                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  6544  03CD  0852               	movf	(efgtoa@e+1)^(0+128),w
  6545  03CE  3A80               	xorlw	128
  6546  03CF  0020               	movlb	0	; select bank0
  6547  03D0  00E8               	movwf	??_efgtoa
  6548  03D1  307F               	movlw	127
  6549  03D2  0268               	subwf	??_efgtoa,w
  6550  03D3  1D03               	skipz
  6551  03D4  2BD8               	goto	u4895
  6552  03D5  30FC               	movlw	252
  6553  03D6  0021               	movlb	1	; select bank1
  6554  03D7  0251               	subwf	efgtoa@e^(0+128),w
  6555  03D8                     u4895:	
  6556  03D8  1C03               	skipc
  6557  03D9  2BF6               	goto	l3675
  6558  03DA  0021               	movlb	1	; select bank1
  6559  03DB  083C               	movf	efgtoa@p^(0+128),w
  6560  03DC  3EFF               	addlw	255
  6561  03DD  0020               	movlb	0	; select bank0
  6562  03DE  00E8               	movwf	??_efgtoa
  6563  03DF  30FF               	movlw	255
  6564  03E0  0021               	movlb	1	; select bank1
  6565  03E1  3D3D               	addwfc	(efgtoa@p+1)^(0+128),w
  6566  03E2  0020               	movlb	0	; select bank0
  6567  03E3  00E9               	movwf	??_efgtoa+1
  6568  03E4  0869               	movf	??_efgtoa+1,w
  6569  03E5  3A80               	xorlw	128
  6570  03E6  00EA               	movwf	??_efgtoa+2
  6571  03E7  0021               	movlb	1	; select bank1
  6572  03E8  0852               	movf	(efgtoa@e+1)^(0+128),w
  6573  03E9  3A80               	xorlw	128
  6574  03EA  0020               	movlb	0	; select bank0
  6575  03EB  026A               	subwf	??_efgtoa+2,w
  6576  03EC  1D03               	skipz
  6577  03ED  2BF2               	goto	u4905
  6578  03EE  0021               	movlb	1	; select bank1
  6579  03EF  0851               	movf	efgtoa@e^(0+128),w
  6580  03F0  0020               	movlb	0	; select bank0
  6581  03F1  0268               	subwf	??_efgtoa,w
  6582  03F2                     u4905:	
  6583  03F2  1C03               	skipc
  6584  03F3  2BF6               	goto	l3675
  6585                           
  6586                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  6587  03F4  3066               	movlw	102
  6588  03F5  2BF7               	goto	L6
  6589  03F6                     l3675:	
  6590                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  6591                           
  6592                           
  6593                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  6594  03F6  3065               	movlw	101
  6595  03F7                     L6:	
  6596  03F7  0020               	movlb	0	; select bank0
  6597  03F8  00E8               	movwf	??_efgtoa
  6598  03F9  0868               	movf	??_efgtoa,w
  6599  03FA  0021               	movlb	1	; select bank1
  6600  03FB  00BF               	movwf	efgtoa@nmode^(0+128)
  6601  03FC                     l475:	
  6602                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 395:     }
  6603                           
  6604                           
  6605                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  6606  03FC  083D               	movf	(efgtoa@p+1)^(0+128),w
  6607  03FD  00B5               	movwf	(efgtoa@m+1)^(0+128)
  6608  03FE  083C               	movf	efgtoa@p^(0+128),w
  6609  03FF  00B4               	movwf	efgtoa@m^(0+128)
  6610                           
  6611                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  6612  0400  3067               	movlw	103
  6613  0401  0642               	xorwf	efgtoa@mode^(0+128),w
  6614  0402  1D03               	btfss	3,2
  6615  0403  2C09               	goto	l3683
  6616  0404  3066               	movlw	102
  6617  0405  063F               	xorwf	efgtoa@nmode^(0+128),w
  6618  0406  1903               	btfsc	3,2
  6619  0407  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  6620  0408  2C0D               	goto	l3685
  6621  0409                     l3683:	
  6622                           
  6623                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  6624  0409  3001               	movlw	1
  6625  040A  07B4               	addwf	efgtoa@m^(0+128),f
  6626  040B  3000               	movlw	0
  6627  040C  3DB5               	addwfc	(efgtoa@m+1)^(0+128),f
  6628  040D                     l3685:	
  6629                           
  6630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  6631  040D  3066               	movlw	102
  6632  040E  063F               	xorwf	efgtoa@nmode^(0+128),w
  6633  040F  1D03               	btfss	3,2
  6634  0410  2C25               	goto	l3697
  6635                           
  6636                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  6637  0411  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  6638  0412  2C1D               	goto	l3693
  6639                           
  6640                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  6641  0413  303F               	movlw	63
  6642  0414  00D8               	movwf	(efgtoa@u+3)^(0+128)
  6643  0415  3080               	movlw	128
  6644  0416  00D7               	movwf	(efgtoa@u+2)^(0+128)
  6645  0417  3000               	movlw	0
  6646  0418  00D6               	movwf	(efgtoa@u+1)^(0+128)
  6647  0419  3000               	movlw	0
  6648  041A  00D5               	movwf	efgtoa@u^(0+128)
  6649                           
  6650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  6651  041B  01D1               	clrf	efgtoa@e^(0+128)
  6652  041C  01D2               	clrf	(efgtoa@e+1)^(0+128)
  6653  041D                     l3693:	
  6654                           
  6655                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  6656  041D  3067               	movlw	103
  6657  041E  0642               	xorwf	efgtoa@mode^(0+128),w
  6658  041F  1903               	btfsc	3,2
  6659  0420  2C25               	goto	l3697
  6660                           
  6661                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  6662  0421  0851               	movf	efgtoa@e^(0+128),w
  6663  0422  07B4               	addwf	efgtoa@m^(0+128),f
  6664  0423  0852               	movf	(efgtoa@e+1)^(0+128),w
  6665  0424  3DB5               	addwfc	(efgtoa@m+1)^(0+128),f
  6666  0425                     l3697:	
  6667                           
  6668                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  6669  0425  01CB               	clrf	efgtoa@i^(0+128)
  6670  0426  01CC               	clrf	(efgtoa@i+1)^(0+128)
  6671                           
  6672                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  6673  0427  0850               	movf	(efgtoa@g+3)^(0+128),w
  6674  0428  00C6               	movwf	(efgtoa@h+3)^(0+128)
  6675  0429  084F               	movf	(efgtoa@g+2)^(0+128),w
  6676  042A  00C5               	movwf	(efgtoa@h+2)^(0+128)
  6677  042B  084E               	movf	(efgtoa@g+1)^(0+128),w
  6678  042C  00C4               	movwf	(efgtoa@h+1)^(0+128)
  6679  042D  084D               	movf	efgtoa@g^(0+128),w
  6680  042E  00C3               	movwf	efgtoa@h^(0+128)
  6681                           
  6682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  6683  042F  0858               	movf	(efgtoa@u+3)^(0+128),w
  6684  0430  00A3               	movwf	(efgtoa@ou+3)^(0+128)
  6685  0431  0857               	movf	(efgtoa@u+2)^(0+128),w
  6686  0432  00A2               	movwf	(efgtoa@ou+2)^(0+128)
  6687  0433  0856               	movf	(efgtoa@u+1)^(0+128),w
  6688  0434  00A1               	movwf	(efgtoa@ou+1)^(0+128)
  6689  0435  0855               	movf	efgtoa@u^(0+128),w
  6690  0436  00A0               	movwf	efgtoa@ou^(0+128)
  6691  0437                     l3707:	
  6692                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  6693                           
  6694                           
  6695                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  6696  0437  084C               	movf	(efgtoa@i+1)^(0+128),w
  6697  0438  3A80               	xorlw	128
  6698  0439  0020               	movlb	0	; select bank0
  6699  043A  00E8               	movwf	??_efgtoa
  6700  043B  0021               	movlb	1	; select bank1
  6701  043C  0835               	movf	(efgtoa@m+1)^(0+128),w
  6702  043D  3A80               	xorlw	128
  6703  043E  0020               	movlb	0	; select bank0
  6704  043F  0268               	subwf	??_efgtoa,w
  6705  0440  1D03               	skipz
  6706  0441  2C45               	goto	u4975
  6707  0442  0021               	movlb	1	; select bank1
  6708  0443  0834               	movf	efgtoa@m^(0+128),w
  6709  0444  024B               	subwf	efgtoa@i^(0+128),w
  6710  0445                     u4975:	
  6711  0445  1803               	btfsc	3,0
  6712  0446  2CF6               	goto	l3709
  6713                           
  6714                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  6715  0447  0021               	movlb	1	; select bank1
  6716  0448  0858               	movf	(efgtoa@u+3)^(0+128),w
  6717  0449  00F3               	movwf	___fldiv@a+3
  6718  044A  0857               	movf	(efgtoa@u+2)^(0+128),w
  6719  044B  00F2               	movwf	___fldiv@a+2
  6720  044C  0856               	movf	(efgtoa@u+1)^(0+128),w
  6721  044D  00F1               	movwf	___fldiv@a+1
  6722  044E  0855               	movf	efgtoa@u^(0+128),w
  6723  044F  00F0               	movwf	___fldiv@a
  6724  0450  0846               	movf	(efgtoa@h+3)^(0+128),w
  6725  0451  00F7               	movwf	___fldiv@b+3
  6726  0452  0845               	movf	(efgtoa@h+2)^(0+128),w
  6727  0453  00F6               	movwf	___fldiv@b+2
  6728  0454  0844               	movf	(efgtoa@h+1)^(0+128),w
  6729  0455  00F5               	movwf	___fldiv@b+1
  6730  0456  0843               	movf	efgtoa@h^(0+128),w
  6731  0457  00F4               	movwf	___fldiv@b
  6732  0458  3180  2017  3181   	fcall	___fldiv
  6733  045B  0873               	movf	?___fldiv+3,w
  6734  045C  0020               	movlb	0	; select bank0
  6735  045D  00B0               	movwf	floorf@x+3
  6736  045E  0872               	movf	?___fldiv+2,w
  6737  045F  00AF               	movwf	floorf@x+2
  6738  0460  0871               	movf	?___fldiv+1,w
  6739  0461  00AE               	movwf	floorf@x+1
  6740  0462  0870               	movf	?___fldiv,w
  6741  0463  00AD               	movwf	floorf@x
  6742  0464  3188  20AE  3181   	fcall	_floorf
  6743  0467  0020               	movlb	0	; select bank0
  6744  0468  0830               	movf	?_floorf+3,w
  6745  0469  0021               	movlb	1	; select bank1
  6746  046A  00CA               	movwf	(efgtoa@l+3)^(0+128)
  6747  046B  0020               	movlb	0	; select bank0
  6748  046C  082F               	movf	?_floorf+2,w
  6749  046D  0021               	movlb	1	; select bank1
  6750  046E  00C9               	movwf	(efgtoa@l+2)^(0+128)
  6751  046F  0020               	movlb	0	; select bank0
  6752  0470  082E               	movf	?_floorf+1,w
  6753  0471  0021               	movlb	1	; select bank1
  6754  0472  00C8               	movwf	(efgtoa@l+1)^(0+128)
  6755  0473  0020               	movlb	0	; select bank0
  6756  0474  082D               	movf	?_floorf,w
  6757  0475  0021               	movlb	1	; select bank1
  6758  0476  00C7               	movwf	efgtoa@l^(0+128)
  6759                           
  6760                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  6761  0477  084A               	movf	(efgtoa@l+3)^(0+128),w
  6762  0478  00F3               	movwf	___fltol@f1+3
  6763  0479  0849               	movf	(efgtoa@l+2)^(0+128),w
  6764  047A  00F2               	movwf	___fltol@f1+2
  6765  047B  0848               	movf	(efgtoa@l+1)^(0+128),w
  6766  047C  00F1               	movwf	___fltol@f1+1
  6767  047D  0847               	movf	efgtoa@l^(0+128),w
  6768  047E  00F0               	movwf	___fltol@f1
  6769  047F  3194  2458  3181   	fcall	___fltol
  6770  0482  0871               	movf	?___fltol+1,w
  6771  0483  0021               	movlb	1	; select bank1
  6772  0484  00B9               	movwf	(efgtoa@d+1)^(0+128)
  6773  0485  0870               	movf	?___fltol,w
  6774  0486  00B8               	movwf	efgtoa@d^(0+128)
  6775                           
  6776                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  6777  0487  084A               	movf	(efgtoa@l+3)^(0+128),w
  6778  0488  0020               	movlb	0	; select bank0
  6779  0489  00B4               	movwf	___flmul@a+3
  6780  048A  0021               	movlb	1	; select bank1
  6781  048B  0849               	movf	(efgtoa@l+2)^(0+128),w
  6782  048C  0020               	movlb	0	; select bank0
  6783  048D  00B3               	movwf	___flmul@a+2
  6784  048E  0021               	movlb	1	; select bank1
  6785  048F  0848               	movf	(efgtoa@l+1)^(0+128),w
  6786  0490  0020               	movlb	0	; select bank0
  6787  0491  00B2               	movwf	___flmul@a+1
  6788  0492  0021               	movlb	1	; select bank1
  6789  0493  0847               	movf	efgtoa@l^(0+128),w
  6790  0494  0020               	movlb	0	; select bank0
  6791  0495  00B1               	movwf	___flmul@a
  6792  0496  0021               	movlb	1	; select bank1
  6793  0497  0858               	movf	(efgtoa@u+3)^(0+128),w
  6794  0498  0020               	movlb	0	; select bank0
  6795  0499  00B0               	movwf	___flmul@b+3
  6796  049A  0021               	movlb	1	; select bank1
  6797  049B  0857               	movf	(efgtoa@u+2)^(0+128),w
  6798  049C  0020               	movlb	0	; select bank0
  6799  049D  00AF               	movwf	___flmul@b+2
  6800  049E  0021               	movlb	1	; select bank1
  6801  049F  0856               	movf	(efgtoa@u+1)^(0+128),w
  6802  04A0  0020               	movlb	0	; select bank0
  6803  04A1  00AE               	movwf	___flmul@b+1
  6804  04A2  0021               	movlb	1	; select bank1
  6805  04A3  0855               	movf	efgtoa@u^(0+128),w
  6806  04A4  0020               	movlb	0	; select bank0
  6807  04A5  00AD               	movwf	___flmul@b
  6808  04A6  318B  2368  3181   	fcall	___flmul
  6809  04A9  0020               	movlb	0	; select bank0
  6810  04AA  0830               	movf	?___flmul+3,w
  6811  04AB  00DE               	movwf	___flsub@a+3
  6812  04AC  082F               	movf	?___flmul+2,w
  6813  04AD  00DD               	movwf	___flsub@a+2
  6814  04AE  082E               	movf	?___flmul+1,w
  6815  04AF  00DC               	movwf	___flsub@a+1
  6816  04B0  082D               	movf	?___flmul,w
  6817  04B1  00DB               	movwf	___flsub@a
  6818  04B2  0021               	movlb	1	; select bank1
  6819  04B3  0846               	movf	(efgtoa@h+3)^(0+128),w
  6820  04B4  0020               	movlb	0	; select bank0
  6821  04B5  00E2               	movwf	___flsub@b+3
  6822  04B6  0021               	movlb	1	; select bank1
  6823  04B7  0845               	movf	(efgtoa@h+2)^(0+128),w
  6824  04B8  0020               	movlb	0	; select bank0
  6825  04B9  00E1               	movwf	___flsub@b+2
  6826  04BA  0021               	movlb	1	; select bank1
  6827  04BB  0844               	movf	(efgtoa@h+1)^(0+128),w
  6828  04BC  0020               	movlb	0	; select bank0
  6829  04BD  00E0               	movwf	___flsub@b+1
  6830  04BE  0021               	movlb	1	; select bank1
  6831  04BF  0843               	movf	efgtoa@h^(0+128),w
  6832  04C0  0020               	movlb	0	; select bank0
  6833  04C1  00DF               	movwf	___flsub@b
  6834  04C2  3191  219A  3181   	fcall	___flsub
  6835  04C5  0020               	movlb	0	; select bank0
  6836  04C6  085E               	movf	?___flsub+3,w
  6837  04C7  0021               	movlb	1	; select bank1
  6838  04C8  00C6               	movwf	(efgtoa@h+3)^(0+128)
  6839  04C9  0020               	movlb	0	; select bank0
  6840  04CA  085D               	movf	?___flsub+2,w
  6841  04CB  0021               	movlb	1	; select bank1
  6842  04CC  00C5               	movwf	(efgtoa@h+2)^(0+128)
  6843  04CD  0020               	movlb	0	; select bank0
  6844  04CE  085C               	movf	?___flsub+1,w
  6845  04CF  0021               	movlb	1	; select bank1
  6846  04D0  00C4               	movwf	(efgtoa@h+1)^(0+128)
  6847  04D1  0020               	movlb	0	; select bank0
  6848  04D2  085B               	movf	?___flsub,w
  6849  04D3  0021               	movlb	1	; select bank1
  6850  04D4  00C3               	movwf	efgtoa@h^(0+128)
  6851                           
  6852                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  6853  04D5  3041               	movlw	65
  6854  04D6  00F3               	movwf	___fldiv@a+3
  6855  04D7  3020               	movlw	32
  6856  04D8  00F2               	movwf	___fldiv@a+2
  6857  04D9  3000               	movlw	0
  6858  04DA  00F1               	movwf	___fldiv@a+1
  6859  04DB  3000               	movlw	0
  6860  04DC  00F0               	movwf	___fldiv@a
  6861  04DD  0858               	movf	(efgtoa@u+3)^(0+128),w
  6862  04DE  00F7               	movwf	___fldiv@b+3
  6863  04DF  0857               	movf	(efgtoa@u+2)^(0+128),w
  6864  04E0  00F6               	movwf	___fldiv@b+2
  6865  04E1  0856               	movf	(efgtoa@u+1)^(0+128),w
  6866  04E2  00F5               	movwf	___fldiv@b+1
  6867  04E3  0855               	movf	efgtoa@u^(0+128),w
  6868  04E4  00F4               	movwf	___fldiv@b
  6869  04E5  3180  2017  3181   	fcall	___fldiv
  6870  04E8  0873               	movf	?___fldiv+3,w
  6871  04E9  0021               	movlb	1	; select bank1
  6872  04EA  00D8               	movwf	(efgtoa@u+3)^(0+128)
  6873  04EB  0872               	movf	?___fldiv+2,w
  6874  04EC  00D7               	movwf	(efgtoa@u+2)^(0+128)
  6875  04ED  0871               	movf	?___fldiv+1,w
  6876  04EE  00D6               	movwf	(efgtoa@u+1)^(0+128)
  6877  04EF  0870               	movf	?___fldiv,w
  6878  04F0  00D5               	movwf	efgtoa@u^(0+128)
  6879                           
  6880                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  6881  04F1  3001               	movlw	1
  6882  04F2  07CB               	addwf	efgtoa@i^(0+128),f
  6883  04F3  3000               	movlw	0
  6884  04F4  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  6885  04F5  2C37               	goto	l3707
  6886  04F6                     l3709:	
  6887                           
  6888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  6889  04F6  3040               	movlw	64
  6890  04F7  0020               	movlb	0	; select bank0
  6891  04F8  00B0               	movwf	___flmul@b+3
  6892  04F9  30A0               	movlw	160
  6893  04FA  00AF               	movwf	___flmul@b+2
  6894  04FB  3000               	movlw	0
  6895  04FC  00AE               	movwf	___flmul@b+1
  6896  04FD  3000               	movlw	0
  6897  04FE  00AD               	movwf	___flmul@b
  6898  04FF  0021               	movlb	1	; select bank1
  6899  0500  0858               	movf	(efgtoa@u+3)^(0+128),w
  6900  0501  0020               	movlb	0	; select bank0
  6901  0502  00B4               	movwf	___flmul@a+3
  6902  0503  0021               	movlb	1	; select bank1
  6903  0504  0857               	movf	(efgtoa@u+2)^(0+128),w
  6904  0505  0020               	movlb	0	; select bank0
  6905  0506  00B3               	movwf	___flmul@a+2
  6906  0507  0021               	movlb	1	; select bank1
  6907  0508  0856               	movf	(efgtoa@u+1)^(0+128),w
  6908  0509  0020               	movlb	0	; select bank0
  6909  050A  00B2               	movwf	___flmul@a+1
  6910  050B  0021               	movlb	1	; select bank1
  6911  050C  0855               	movf	efgtoa@u^(0+128),w
  6912  050D  0020               	movlb	0	; select bank0
  6913  050E  00B1               	movwf	___flmul@a
  6914  050F  318B  2368  3181   	fcall	___flmul
  6915  0512  0020               	movlb	0	; select bank0
  6916  0513  0830               	movf	?___flmul+3,w
  6917  0514  0021               	movlb	1	; select bank1
  6918  0515  00CA               	movwf	(efgtoa@l+3)^(0+128)
  6919  0516  0020               	movlb	0	; select bank0
  6920  0517  082F               	movf	?___flmul+2,w
  6921  0518  0021               	movlb	1	; select bank1
  6922  0519  00C9               	movwf	(efgtoa@l+2)^(0+128)
  6923  051A  0020               	movlb	0	; select bank0
  6924  051B  082E               	movf	?___flmul+1,w
  6925  051C  0021               	movlb	1	; select bank1
  6926  051D  00C8               	movwf	(efgtoa@l+1)^(0+128)
  6927  051E  0020               	movlb	0	; select bank0
  6928  051F  082D               	movf	?___flmul,w
  6929  0520  0021               	movlb	1	; select bank1
  6930  0521  00C7               	movwf	efgtoa@l^(0+128)
  6931                           
  6932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  6933  0522  0846               	movf	(efgtoa@h+3)^(0+128),w
  6934  0523  0020               	movlb	0	; select bank0
  6935  0524  00CA               	movwf	___flge@ff1+3
  6936  0525  0021               	movlb	1	; select bank1
  6937  0526  0845               	movf	(efgtoa@h+2)^(0+128),w
  6938  0527  0020               	movlb	0	; select bank0
  6939  0528  00C9               	movwf	___flge@ff1+2
  6940  0529  0021               	movlb	1	; select bank1
  6941  052A  0844               	movf	(efgtoa@h+1)^(0+128),w
  6942  052B  0020               	movlb	0	; select bank0
  6943  052C  00C8               	movwf	___flge@ff1+1
  6944  052D  0021               	movlb	1	; select bank1
  6945  052E  0843               	movf	efgtoa@h^(0+128),w
  6946  052F  0020               	movlb	0	; select bank0
  6947  0530  00C7               	movwf	___flge@ff1
  6948  0531  0021               	movlb	1	; select bank1
  6949  0532  084A               	movf	(efgtoa@l+3)^(0+128),w
  6950  0533  0020               	movlb	0	; select bank0
  6951  0534  00CE               	movwf	___flge@ff2+3
  6952  0535  0021               	movlb	1	; select bank1
  6953  0536  0849               	movf	(efgtoa@l+2)^(0+128),w
  6954  0537  0020               	movlb	0	; select bank0
  6955  0538  00CD               	movwf	___flge@ff2+2
  6956  0539  0021               	movlb	1	; select bank1
  6957  053A  0848               	movf	(efgtoa@l+1)^(0+128),w
  6958  053B  0020               	movlb	0	; select bank0
  6959  053C  00CC               	movwf	___flge@ff2+1
  6960  053D  0021               	movlb	1	; select bank1
  6961  053E  0847               	movf	efgtoa@l^(0+128),w
  6962  053F  0020               	movlb	0	; select bank0
  6963  0540  00CB               	movwf	___flge@ff2
  6964  0541  3195  2535  3181   	fcall	___flge
  6965  0544  1803               	btfsc	3,0
  6966  0545  2D49               	goto	l3713
  6967                           
  6968                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  6969  0546  3000               	movlw	0
  6970  0547  0021               	movlb	1	; select bank1
  6971  0548  2D63               	goto	L7
  6972  0549                     l3713:	
  6973                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  6974                           
  6975                           
  6976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  6977  0549  0021               	movlb	1	; select bank1
  6978  054A  0846               	movf	(efgtoa@h+3)^(0+128),w
  6979  054B  00F3               	movwf	___fleq@ff1+3
  6980  054C  0845               	movf	(efgtoa@h+2)^(0+128),w
  6981  054D  00F2               	movwf	___fleq@ff1+2
  6982  054E  0844               	movf	(efgtoa@h+1)^(0+128),w
  6983  054F  00F1               	movwf	___fleq@ff1+1
  6984  0550  0843               	movf	efgtoa@h^(0+128),w
  6985  0551  00F0               	movwf	___fleq@ff1
  6986  0552  084A               	movf	(efgtoa@l+3)^(0+128),w
  6987  0553  00F7               	movwf	___fleq@ff2+3
  6988  0554  0849               	movf	(efgtoa@l+2)^(0+128),w
  6989  0555  00F6               	movwf	___fleq@ff2+2
  6990  0556  0848               	movf	(efgtoa@l+1)^(0+128),w
  6991  0557  00F5               	movwf	___fleq@ff2+1
  6992  0558  0847               	movf	efgtoa@l^(0+128),w
  6993  0559  00F4               	movwf	___fleq@ff2
  6994  055A  3193  2321  3181   	fcall	___fleq
  6995  055D  1C03               	btfss	3,0
  6996  055E  2D6A               	goto	l3719
  6997  055F  0021               	movlb	1	; select bank1
  6998  0560  1838               	btfsc	efgtoa@d^(0+128),0
  6999  0561  2D6A               	goto	l3719
  7000                           
  7001                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  7002  0562  3000               	movlw	0
  7003  0563                     L7:	
  7004  0563  00CA               	movwf	(efgtoa@l+3)^(0+128)
  7005  0564  3000               	movlw	0
  7006  0565  00C9               	movwf	(efgtoa@l+2)^(0+128)
  7007  0566  3000               	movlw	0
  7008  0567  00C8               	movwf	(efgtoa@l+1)^(0+128)
  7009  0568  3000               	movlw	0
  7010  0569  00C7               	movwf	efgtoa@l^(0+128)
  7011  056A                     l3719:	
  7012                           
  7013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  7014  056A  0021               	movlb	1	; select bank1
  7015  056B  084A               	movf	(efgtoa@l+3)^(0+128),w
  7016  056C  0020               	movlb	0	; select bank0
  7017  056D  00CA               	movwf	___fladd@b+3
  7018  056E  0021               	movlb	1	; select bank1
  7019  056F  0849               	movf	(efgtoa@l+2)^(0+128),w
  7020  0570  0020               	movlb	0	; select bank0
  7021  0571  00C9               	movwf	___fladd@b+2
  7022  0572  0021               	movlb	1	; select bank1
  7023  0573  0848               	movf	(efgtoa@l+1)^(0+128),w
  7024  0574  0020               	movlb	0	; select bank0
  7025  0575  00C8               	movwf	___fladd@b+1
  7026  0576  0021               	movlb	1	; select bank1
  7027  0577  0847               	movf	efgtoa@l^(0+128),w
  7028  0578  0020               	movlb	0	; select bank0
  7029  0579  00C7               	movwf	___fladd@b
  7030  057A  0021               	movlb	1	; select bank1
  7031  057B  0850               	movf	(efgtoa@g+3)^(0+128),w
  7032  057C  0020               	movlb	0	; select bank0
  7033  057D  00CE               	movwf	___fladd@a+3
  7034  057E  0021               	movlb	1	; select bank1
  7035  057F  084F               	movf	(efgtoa@g+2)^(0+128),w
  7036  0580  0020               	movlb	0	; select bank0
  7037  0581  00CD               	movwf	___fladd@a+2
  7038  0582  0021               	movlb	1	; select bank1
  7039  0583  084E               	movf	(efgtoa@g+1)^(0+128),w
  7040  0584  0020               	movlb	0	; select bank0
  7041  0585  00CC               	movwf	___fladd@a+1
  7042  0586  0021               	movlb	1	; select bank1
  7043  0587  084D               	movf	efgtoa@g^(0+128),w
  7044  0588  0020               	movlb	0	; select bank0
  7045  0589  00CB               	movwf	___fladd@a
  7046  058A  3189  2186  3181   	fcall	___fladd
  7047  058D  0020               	movlb	0	; select bank0
  7048  058E  084A               	movf	?___fladd+3,w
  7049  058F  0021               	movlb	1	; select bank1
  7050  0590  00C6               	movwf	(efgtoa@h+3)^(0+128)
  7051  0591  0020               	movlb	0	; select bank0
  7052  0592  0849               	movf	?___fladd+2,w
  7053  0593  0021               	movlb	1	; select bank1
  7054  0594  00C5               	movwf	(efgtoa@h+2)^(0+128)
  7055  0595  0020               	movlb	0	; select bank0
  7056  0596  0848               	movf	?___fladd+1,w
  7057  0597  0021               	movlb	1	; select bank1
  7058  0598  00C4               	movwf	(efgtoa@h+1)^(0+128)
  7059  0599  0020               	movlb	0	; select bank0
  7060  059A  0847               	movf	?___fladd,w
  7061  059B  0021               	movlb	1	; select bank1
  7062  059C  00C3               	movwf	efgtoa@h^(0+128)
  7063                           
  7064                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  7065  059D  0823               	movf	(efgtoa@ou+3)^(0+128),w
  7066  059E  00D8               	movwf	(efgtoa@u+3)^(0+128)
  7067  059F  0822               	movf	(efgtoa@ou+2)^(0+128),w
  7068  05A0  00D7               	movwf	(efgtoa@u+2)^(0+128)
  7069  05A1  0821               	movf	(efgtoa@ou+1)^(0+128),w
  7070  05A2  00D6               	movwf	(efgtoa@u+1)^(0+128)
  7071  05A3  0820               	movf	efgtoa@ou^(0+128),w
  7072  05A4  00D5               	movwf	efgtoa@u^(0+128)
  7073                           
  7074                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  7075  05A5  3065               	movlw	101
  7076  05A6  063F               	xorwf	efgtoa@nmode^(0+128),w
  7077  05A7  1903               	btfsc	3,2
  7078  05A8  2DAE               	goto	l3727
  7079  05A9  0852               	movf	(efgtoa@e+1)^(0+128),w
  7080  05AA  00B7               	movwf	(efgtoa@ne+1)^(0+128)
  7081  05AB  0851               	movf	efgtoa@e^(0+128),w
  7082  05AC  00B6               	movwf	efgtoa@ne^(0+128)
  7083  05AD  2DB0               	goto	l493
  7084  05AE                     l3727:	
  7085  05AE  01B6               	clrf	efgtoa@ne^(0+128)
  7086  05AF  01B7               	clrf	(efgtoa@ne+1)^(0+128)
  7087  05B0                     l493:	
  7088                           
  7089                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  7090  05B0  01B2               	clrf	efgtoa@pp^(0+128)
  7091  05B1  01B3               	clrf	(efgtoa@pp+1)^(0+128)
  7092                           
  7093                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  7094  05B2  01B0               	clrf	efgtoa@t^(0+128)
  7095  05B3  01B1               	clrf	(efgtoa@t+1)^(0+128)
  7096                           
  7097                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  7098  05B4  01CB               	clrf	efgtoa@i^(0+128)
  7099  05B5  01CC               	clrf	(efgtoa@i+1)^(0+128)
  7100                           
  7101                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  7102  05B6  2ECE               	goto	l3777
  7103  05B7                     l3729:	
  7104                           
  7105                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  7106  05B7  0021               	movlb	1	; select bank1
  7107  05B8  0858               	movf	(efgtoa@u+3)^(0+128),w
  7108  05B9  00F3               	movwf	___fldiv@a+3
  7109  05BA  0857               	movf	(efgtoa@u+2)^(0+128),w
  7110  05BB  00F2               	movwf	___fldiv@a+2
  7111  05BC  0856               	movf	(efgtoa@u+1)^(0+128),w
  7112  05BD  00F1               	movwf	___fldiv@a+1
  7113  05BE  0855               	movf	efgtoa@u^(0+128),w
  7114  05BF  00F0               	movwf	___fldiv@a
  7115  05C0  0846               	movf	(efgtoa@h+3)^(0+128),w
  7116  05C1  00F7               	movwf	___fldiv@b+3
  7117  05C2  0845               	movf	(efgtoa@h+2)^(0+128),w
  7118  05C3  00F6               	movwf	___fldiv@b+2
  7119  05C4  0844               	movf	(efgtoa@h+1)^(0+128),w
  7120  05C5  00F5               	movwf	___fldiv@b+1
  7121  05C6  0843               	movf	efgtoa@h^(0+128),w
  7122  05C7  00F4               	movwf	___fldiv@b
  7123  05C8  3180  2017  3181   	fcall	___fldiv
  7124  05CB  0873               	movf	?___fldiv+3,w
  7125  05CC  0020               	movlb	0	; select bank0
  7126  05CD  00B0               	movwf	floorf@x+3
  7127  05CE  0872               	movf	?___fldiv+2,w
  7128  05CF  00AF               	movwf	floorf@x+2
  7129  05D0  0871               	movf	?___fldiv+1,w
  7130  05D1  00AE               	movwf	floorf@x+1
  7131  05D2  0870               	movf	?___fldiv,w
  7132  05D3  00AD               	movwf	floorf@x
  7133  05D4  3188  20AE  3181   	fcall	_floorf
  7134  05D7  0020               	movlb	0	; select bank0
  7135  05D8  0830               	movf	?_floorf+3,w
  7136  05D9  0021               	movlb	1	; select bank1
  7137  05DA  00CA               	movwf	(efgtoa@l+3)^(0+128)
  7138  05DB  0020               	movlb	0	; select bank0
  7139  05DC  082F               	movf	?_floorf+2,w
  7140  05DD  0021               	movlb	1	; select bank1
  7141  05DE  00C9               	movwf	(efgtoa@l+2)^(0+128)
  7142  05DF  0020               	movlb	0	; select bank0
  7143  05E0  082E               	movf	?_floorf+1,w
  7144  05E1  0021               	movlb	1	; select bank1
  7145  05E2  00C8               	movwf	(efgtoa@l+1)^(0+128)
  7146  05E3  0020               	movlb	0	; select bank0
  7147  05E4  082D               	movf	?_floorf,w
  7148  05E5  0021               	movlb	1	; select bank1
  7149  05E6  00C7               	movwf	efgtoa@l^(0+128)
  7150                           
  7151                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  7152  05E7  084A               	movf	(efgtoa@l+3)^(0+128),w
  7153  05E8  00F3               	movwf	___fltol@f1+3
  7154  05E9  0849               	movf	(efgtoa@l+2)^(0+128),w
  7155  05EA  00F2               	movwf	___fltol@f1+2
  7156  05EB  0848               	movf	(efgtoa@l+1)^(0+128),w
  7157  05EC  00F1               	movwf	___fltol@f1+1
  7158  05ED  0847               	movf	efgtoa@l^(0+128),w
  7159  05EE  00F0               	movwf	___fltol@f1
  7160  05EF  3194  2458  3181   	fcall	___fltol
  7161  05F2  0871               	movf	?___fltol+1,w
  7162  05F3  0021               	movlb	1	; select bank1
  7163  05F4  00B9               	movwf	(efgtoa@d+1)^(0+128)
  7164  05F5  0870               	movf	?___fltol,w
  7165  05F6  00B8               	movwf	efgtoa@d^(0+128)
  7166                           
  7167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  7168  05F7  0022               	movlb	2	; select bank2
  7169  05F8  1A59               	btfsc	_flags^(0+256),4
  7170  05F9  2E09               	goto	l3741
  7171  05FA  0021               	movlb	1	; select bank1
  7172  05FB  0838               	movf	efgtoa@d^(0+128),w
  7173  05FC  0439               	iorwf	(efgtoa@d+1)^(0+128),w
  7174  05FD  1D03               	btfss	3,2
  7175  05FE  2E09               	goto	l3741
  7176  05FF  3067               	movlw	103
  7177  0600  0642               	xorwf	efgtoa@mode^(0+128),w
  7178  0601  1903               	btfsc	3,2
  7179  0602  1FB7               	btfss	(efgtoa@ne+1)^(0+128),7
  7180  0603  2E09               	goto	l3741
  7181                           
  7182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  7183  0604  3001               	movlw	1
  7184  0605  07B0               	addwf	efgtoa@t^(0+128),f
  7185  0606  3000               	movlw	0
  7186  0607  3DB1               	addwfc	(efgtoa@t+1)^(0+128),f
  7187                           
  7188                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  7189  0608  2E5C               	goto	l3769
  7190  0609                     l3741:	
  7191                           
  7192                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  7193  0609  0021               	movlb	1	; select bank1
  7194  060A  0832               	movf	efgtoa@pp^(0+128),w
  7195  060B  0433               	iorwf	(efgtoa@pp+1)^(0+128),w
  7196  060C  1903               	btfsc	3,2
  7197  060D  1FB7               	btfss	(efgtoa@ne+1)^(0+128),7
  7198  060E  2E28               	goto	l3761
  7199                           
  7200                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  7201  060F  302E               	movlw	46
  7202  0610  0020               	movlb	0	; select bank0
  7203  0611  00E8               	movwf	??_efgtoa
  7204  0612  0021               	movlb	1	; select bank1
  7205  0613  0853               	movf	efgtoa@n^(0+128),w
  7206  0614  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7207  0615  0086               	movwf	6
  7208  0616  3001               	movlw	1	; select bank3/4
  7209  0617  0087               	movwf	7
  7210  0618  0020               	movlb	0	; select bank0
  7211  0619  0868               	movf	??_efgtoa,w
  7212  061A  0081               	movwf	1
  7213  061B  3001               	movlw	1
  7214  061C  0021               	movlb	1	; select bank1
  7215  061D  07D3               	addwf	efgtoa@n^(0+128),f
  7216  061E  3000               	movlw	0
  7217  061F  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  7218                           
  7219                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  7220  0620  30FF               	movlw	255
  7221  0621  07C0               	addwf	efgtoa@w^(0+128),f
  7222  0622  30FF               	movlw	255
  7223  0623  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  7224                           
  7225                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  7226  0624  3001               	movlw	1
  7227  0625  00B2               	movwf	efgtoa@pp^(0+128)
  7228  0626  3000               	movlw	0
  7229  0627  00B3               	movwf	(efgtoa@pp^(0+128)+1)
  7230  0628                     l3761:	
  7231                           
  7232                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  7233  0628  0830               	movf	efgtoa@t^(0+128),w
  7234  0629  0431               	iorwf	(efgtoa@t+1)^(0+128),w
  7235  062A  1903               	btfsc	3,2
  7236  062B  2E46               	goto	l3763
  7237                           
  7238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  7239  062C  3030               	movlw	48
  7240  062D  0020               	movlb	0	; select bank0
  7241  062E  00E8               	movwf	??_efgtoa
  7242  062F  0021               	movlb	1	; select bank1
  7243  0630  0853               	movf	efgtoa@n^(0+128),w
  7244  0631  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7245  0632  0086               	movwf	6
  7246  0633  3001               	movlw	1	; select bank3/4
  7247  0634  0087               	movwf	7
  7248  0635  0020               	movlb	0	; select bank0
  7249  0636  0868               	movf	??_efgtoa,w
  7250  0637  0081               	movwf	1
  7251  0638  3001               	movlw	1
  7252  0639  0021               	movlb	1	; select bank1
  7253  063A  07D3               	addwf	efgtoa@n^(0+128),f
  7254  063B  3000               	movlw	0
  7255  063C  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  7256                           
  7257                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  7258  063D  30FF               	movlw	255
  7259  063E  07C0               	addwf	efgtoa@w^(0+128),f
  7260  063F  30FF               	movlw	255
  7261  0640  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  7262                           
  7263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  7264  0641  30FF               	movlw	255
  7265  0642  07B0               	addwf	efgtoa@t^(0+128),f
  7266  0643  30FF               	movlw	255
  7267  0644  3DB1               	addwfc	(efgtoa@t+1)^(0+128),f
  7268  0645  2E28               	goto	l3761
  7269  0646                     l3763:	
  7270                           
  7271                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  7272  0646  0838               	movf	efgtoa@d^(0+128),w
  7273  0647  3E30               	addlw	48
  7274  0648  0020               	movlb	0	; select bank0
  7275  0649  00E8               	movwf	??_efgtoa
  7276  064A  0021               	movlb	1	; select bank1
  7277  064B  0853               	movf	efgtoa@n^(0+128),w
  7278  064C  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7279  064D  0086               	movwf	6
  7280  064E  3001               	movlw	1	; select bank3/4
  7281  064F  0087               	movwf	7
  7282  0650  0020               	movlb	0	; select bank0
  7283  0651  0868               	movf	??_efgtoa,w
  7284  0652  0081               	movwf	1
  7285  0653  3001               	movlw	1
  7286  0654  0021               	movlb	1	; select bank1
  7287  0655  07D3               	addwf	efgtoa@n^(0+128),f
  7288  0656  3000               	movlw	0
  7289  0657  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  7290                           
  7291                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  7292  0658  30FF               	movlw	255
  7293  0659  07C0               	addwf	efgtoa@w^(0+128),f
  7294  065A  30FF               	movlw	255
  7295  065B  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  7296  065C                     l3769:	
  7297                           
  7298                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  7299  065C  084A               	movf	(efgtoa@l+3)^(0+128),w
  7300  065D  0020               	movlb	0	; select bank0
  7301  065E  00B4               	movwf	___flmul@a+3
  7302  065F  0021               	movlb	1	; select bank1
  7303  0660  0849               	movf	(efgtoa@l+2)^(0+128),w
  7304  0661  0020               	movlb	0	; select bank0
  7305  0662  00B3               	movwf	___flmul@a+2
  7306  0663  0021               	movlb	1	; select bank1
  7307  0664  0848               	movf	(efgtoa@l+1)^(0+128),w
  7308  0665  0020               	movlb	0	; select bank0
  7309  0666  00B2               	movwf	___flmul@a+1
  7310  0667  0021               	movlb	1	; select bank1
  7311  0668  0847               	movf	efgtoa@l^(0+128),w
  7312  0669  0020               	movlb	0	; select bank0
  7313  066A  00B1               	movwf	___flmul@a
  7314  066B  0021               	movlb	1	; select bank1
  7315  066C  0858               	movf	(efgtoa@u+3)^(0+128),w
  7316  066D  0020               	movlb	0	; select bank0
  7317  066E  00B0               	movwf	___flmul@b+3
  7318  066F  0021               	movlb	1	; select bank1
  7319  0670  0857               	movf	(efgtoa@u+2)^(0+128),w
  7320  0671  0020               	movlb	0	; select bank0
  7321  0672  00AF               	movwf	___flmul@b+2
  7322  0673  0021               	movlb	1	; select bank1
  7323  0674  0856               	movf	(efgtoa@u+1)^(0+128),w
  7324  0675  0020               	movlb	0	; select bank0
  7325  0676  00AE               	movwf	___flmul@b+1
  7326  0677  0021               	movlb	1	; select bank1
  7327  0678  0855               	movf	efgtoa@u^(0+128),w
  7328  0679  0020               	movlb	0	; select bank0
  7329  067A  00AD               	movwf	___flmul@b
  7330  067B  318B  2368  3181   	fcall	___flmul
  7331  067E  0020               	movlb	0	; select bank0
  7332  067F  0830               	movf	?___flmul+3,w
  7333  0680  00DE               	movwf	___flsub@a+3
  7334  0681  082F               	movf	?___flmul+2,w
  7335  0682  00DD               	movwf	___flsub@a+2
  7336  0683  082E               	movf	?___flmul+1,w
  7337  0684  00DC               	movwf	___flsub@a+1
  7338  0685  082D               	movf	?___flmul,w
  7339  0686  00DB               	movwf	___flsub@a
  7340  0687  0021               	movlb	1	; select bank1
  7341  0688  0846               	movf	(efgtoa@h+3)^(0+128),w
  7342  0689  0020               	movlb	0	; select bank0
  7343  068A  00E2               	movwf	___flsub@b+3
  7344  068B  0021               	movlb	1	; select bank1
  7345  068C  0845               	movf	(efgtoa@h+2)^(0+128),w
  7346  068D  0020               	movlb	0	; select bank0
  7347  068E  00E1               	movwf	___flsub@b+2
  7348  068F  0021               	movlb	1	; select bank1
  7349  0690  0844               	movf	(efgtoa@h+1)^(0+128),w
  7350  0691  0020               	movlb	0	; select bank0
  7351  0692  00E0               	movwf	___flsub@b+1
  7352  0693  0021               	movlb	1	; select bank1
  7353  0694  0843               	movf	efgtoa@h^(0+128),w
  7354  0695  0020               	movlb	0	; select bank0
  7355  0696  00DF               	movwf	___flsub@b
  7356  0697  3191  219A  3181   	fcall	___flsub
  7357  069A  0020               	movlb	0	; select bank0
  7358  069B  085E               	movf	?___flsub+3,w
  7359  069C  0021               	movlb	1	; select bank1
  7360  069D  00C6               	movwf	(efgtoa@h+3)^(0+128)
  7361  069E  0020               	movlb	0	; select bank0
  7362  069F  085D               	movf	?___flsub+2,w
  7363  06A0  0021               	movlb	1	; select bank1
  7364  06A1  00C5               	movwf	(efgtoa@h+2)^(0+128)
  7365  06A2  0020               	movlb	0	; select bank0
  7366  06A3  085C               	movf	?___flsub+1,w
  7367  06A4  0021               	movlb	1	; select bank1
  7368  06A5  00C4               	movwf	(efgtoa@h+1)^(0+128)
  7369  06A6  0020               	movlb	0	; select bank0
  7370  06A7  085B               	movf	?___flsub,w
  7371  06A8  0021               	movlb	1	; select bank1
  7372  06A9  00C3               	movwf	efgtoa@h^(0+128)
  7373                           
  7374                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  7375  06AA  3041               	movlw	65
  7376  06AB  00F3               	movwf	___fldiv@a+3
  7377  06AC  3020               	movlw	32
  7378  06AD  00F2               	movwf	___fldiv@a+2
  7379  06AE  3000               	movlw	0
  7380  06AF  00F1               	movwf	___fldiv@a+1
  7381  06B0  3000               	movlw	0
  7382  06B1  00F0               	movwf	___fldiv@a
  7383  06B2  0858               	movf	(efgtoa@u+3)^(0+128),w
  7384  06B3  00F7               	movwf	___fldiv@b+3
  7385  06B4  0857               	movf	(efgtoa@u+2)^(0+128),w
  7386  06B5  00F6               	movwf	___fldiv@b+2
  7387  06B6  0856               	movf	(efgtoa@u+1)^(0+128),w
  7388  06B7  00F5               	movwf	___fldiv@b+1
  7389  06B8  0855               	movf	efgtoa@u^(0+128),w
  7390  06B9  00F4               	movwf	___fldiv@b
  7391  06BA  3180  2017  3181   	fcall	___fldiv
  7392  06BD  0873               	movf	?___fldiv+3,w
  7393  06BE  0021               	movlb	1	; select bank1
  7394  06BF  00D8               	movwf	(efgtoa@u+3)^(0+128)
  7395  06C0  0872               	movf	?___fldiv+2,w
  7396  06C1  00D7               	movwf	(efgtoa@u+2)^(0+128)
  7397  06C2  0871               	movf	?___fldiv+1,w
  7398  06C3  00D6               	movwf	(efgtoa@u+1)^(0+128)
  7399  06C4  0870               	movf	?___fldiv,w
  7400  06C5  00D5               	movwf	efgtoa@u^(0+128)
  7401                           
  7402                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  7403  06C6  30FF               	movlw	255
  7404  06C7  07B6               	addwf	efgtoa@ne^(0+128),f
  7405  06C8  30FF               	movlw	255
  7406  06C9  3DB7               	addwfc	(efgtoa@ne+1)^(0+128),f
  7407                           
  7408                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  7409  06CA  3001               	movlw	1
  7410  06CB  07CB               	addwf	efgtoa@i^(0+128),f
  7411  06CC  3000               	movlw	0
  7412  06CD  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  7413  06CE                     l3777:	
  7414                           
  7415                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  7416  06CE  084C               	movf	(efgtoa@i+1)^(0+128),w
  7417  06CF  3A80               	xorlw	128
  7418  06D0  0020               	movlb	0	; select bank0
  7419  06D1  00E8               	movwf	??_efgtoa
  7420  06D2  0021               	movlb	1	; select bank1
  7421  06D3  0835               	movf	(efgtoa@m+1)^(0+128),w
  7422  06D4  3A80               	xorlw	128
  7423  06D5  0020               	movlb	0	; select bank0
  7424  06D6  0268               	subwf	??_efgtoa,w
  7425  06D7  1D03               	skipz
  7426  06D8  2EDC               	goto	u5095
  7427  06D9  0021               	movlb	1	; select bank1
  7428  06DA  0834               	movf	efgtoa@m^(0+128),w
  7429  06DB  024B               	subwf	efgtoa@i^(0+128),w
  7430  06DC                     u5095:	
  7431  06DC  1803               	skipnc
  7432  06DD  2EEC               	goto	l3781
  7433  06DE  0021               	movlb	1	; select bank1
  7434  06DF  0854               	movf	(efgtoa@n+1)^(0+128),w
  7435  06E0  3A80               	xorlw	128
  7436  06E1  0020               	movlb	0	; select bank0
  7437  06E2  00E8               	movwf	??_efgtoa
  7438  06E3  3080               	movlw	128
  7439  06E4  0268               	subwf	??_efgtoa,w
  7440  06E5  1D03               	skipz
  7441  06E6  2EEA               	goto	u5105
  7442  06E7  304B               	movlw	75
  7443  06E8  0021               	movlb	1	; select bank1
  7444  06E9  0253               	subwf	efgtoa@n^(0+128),w
  7445  06EA                     u5105:	
  7446  06EA  1C03               	skipc
  7447  06EB  2DB7               	goto	l3729
  7448  06EC                     l3781:	
  7449                           
  7450                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  7451  06EC  0021               	movlb	1	; select bank1
  7452  06ED  0832               	movf	efgtoa@pp^(0+128),w
  7453  06EE  0433               	iorwf	(efgtoa@pp+1)^(0+128),w
  7454  06EF  1D03               	btfss	3,2
  7455  06F0  2F05               	goto	l3789
  7456  06F1  0022               	movlb	2	; select bank2
  7457  06F2  1E59               	btfss	_flags^(0+256),4
  7458  06F3  2F05               	goto	l3789
  7459                           
  7460                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  7461  06F4  302E               	movlw	46
  7462  06F5  0020               	movlb	0	; select bank0
  7463  06F6  00E8               	movwf	??_efgtoa
  7464  06F7  0021               	movlb	1	; select bank1
  7465  06F8  0853               	movf	efgtoa@n^(0+128),w
  7466  06F9  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7467  06FA  0086               	movwf	6
  7468  06FB  3001               	movlw	1	; select bank3/4
  7469  06FC  0087               	movwf	7
  7470  06FD  0020               	movlb	0	; select bank0
  7471  06FE  0868               	movf	??_efgtoa,w
  7472  06FF  0081               	movwf	1
  7473  0700  3001               	movlw	1
  7474  0701  0021               	movlb	1	; select bank1
  7475  0702  07D3               	addwf	efgtoa@n^(0+128),f
  7476  0703  3000               	movlw	0
  7477  0704  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  7478  0705                     l3789:	
  7479                           
  7480                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  7481  0705  0021               	movlb	1	; select bank1
  7482  0706  0853               	movf	efgtoa@n^(0+128),w
  7483  0707  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7484  0708  0086               	movwf	6
  7485  0709  3001               	movlw	1	; select bank3/4
  7486  070A  0087               	movwf	7
  7487  070B  0181               	clrf	1
  7488                           
  7489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  7490  070C  3065               	movlw	101
  7491  070D  063F               	xorwf	efgtoa@nmode^(0+128),w
  7492  070E  1D03               	btfss	3,2
  7493  070F  2FD7               	goto	l3851
  7494                           
  7495                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  7496  0710  304F               	movlw	79
  7497  0711  00CB               	movwf	efgtoa@i^(0+128)
  7498  0712  3000               	movlw	0
  7499  0713  00CC               	movwf	(efgtoa@i^(0+128)+1)
  7500                           
  7501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  7502  0714  084B               	movf	efgtoa@i^(0+128),w
  7503  0715  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7504  0716  0086               	movwf	6
  7505  0717  3001               	movlw	1	; select bank3/4
  7506  0718  0087               	movwf	7
  7507  0719  0181               	clrf	1
  7508                           
  7509                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  7510  071A  01BA               	clrf	efgtoa@sign^(0+128)
  7511  071B  01BB               	clrf	(efgtoa@sign+1)^(0+128)
  7512                           
  7513                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  7514  071C  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  7515  071D  2F27               	goto	l3805
  7516                           
  7517                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  7518  071E  3001               	movlw	1
  7519  071F  00BA               	movwf	efgtoa@sign^(0+128)
  7520  0720  3000               	movlw	0
  7521  0721  00BB               	movwf	(efgtoa@sign^(0+128)+1)
  7522                           
  7523                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  7524  0722  09D1               	comf	efgtoa@e^(0+128),f
  7525  0723  09D2               	comf	(efgtoa@e+1)^(0+128),f
  7526  0724  0AD1               	incf	efgtoa@e^(0+128),f
  7527  0725  1903               	skipnz
  7528  0726  0AD2               	incf	(efgtoa@e+1)^(0+128),f
  7529  0727                     l3805:	
  7530                           
  7531                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  7532  0727  3002               	movlw	2
  7533  0728  00BC               	movwf	efgtoa@p^(0+128)
  7534  0729  3000               	movlw	0
  7535  072A  00BD               	movwf	(efgtoa@p^(0+128)+1)
  7536  072B                     l3817:	
  7537                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  7538                           
  7539                           
  7540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  7541  072B  0851               	movf	efgtoa@e^(0+128),w
  7542  072C  0452               	iorwf	(efgtoa@e+1)^(0+128),w
  7543  072D  1903               	btfsc	3,2
  7544  072E  2F66               	goto	l3819
  7545  072F                     l3807:	
  7546                           
  7547                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  7548  072F  30FF               	movlw	255
  7549  0730  0021               	movlb	1	; select bank1
  7550  0731  07CB               	addwf	efgtoa@i^(0+128),f
  7551  0732  30FF               	movlw	255
  7552  0733  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  7553                           
  7554                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  7555  0734  300A               	movlw	10
  7556  0735  00F0               	movwf	___awmod@divisor
  7557  0736  3000               	movlw	0
  7558  0737  00F1               	movwf	___awmod@divisor+1
  7559  0738  0852               	movf	(efgtoa@e+1)^(0+128),w
  7560  0739  00F3               	movwf	___awmod@dividend+1
  7561  073A  0851               	movf	efgtoa@e^(0+128),w
  7562  073B  00F2               	movwf	___awmod@dividend
  7563  073C  3192  22DC  3181   	fcall	___awmod
  7564  073F  0870               	movf	?___awmod,w
  7565  0740  3E30               	addlw	48
  7566  0741  0020               	movlb	0	; select bank0
  7567  0742  00E8               	movwf	??_efgtoa
  7568  0743  0021               	movlb	1	; select bank1
  7569  0744  084B               	movf	efgtoa@i^(0+128),w
  7570  0745  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7571  0746  0086               	movwf	6
  7572  0747  3001               	movlw	1	; select bank3/4
  7573  0748  0087               	movwf	7
  7574  0749  0020               	movlb	0	; select bank0
  7575  074A  0868               	movf	??_efgtoa,w
  7576  074B  0081               	movwf	1
  7577                           
  7578                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  7579  074C  300A               	movlw	10
  7580  074D  00F0               	movwf	___awdiv@divisor
  7581  074E  3000               	movlw	0
  7582  074F  00F1               	movwf	___awdiv@divisor+1
  7583  0750  0021               	movlb	1	; select bank1
  7584  0751  0852               	movf	(efgtoa@e+1)^(0+128),w
  7585  0752  00F3               	movwf	___awdiv@dividend+1
  7586  0753  0851               	movf	efgtoa@e^(0+128),w
  7587  0754  00F2               	movwf	___awdiv@dividend
  7588  0755  3194  2407  3181   	fcall	___awdiv
  7589  0758  0871               	movf	?___awdiv+1,w
  7590  0759  0021               	movlb	1	; select bank1
  7591  075A  00D2               	movwf	(efgtoa@e+1)^(0+128)
  7592  075B  0870               	movf	?___awdiv,w
  7593  075C  00D1               	movwf	efgtoa@e^(0+128)
  7594                           
  7595                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  7596  075D  30FF               	movlw	255
  7597  075E  07BC               	addwf	efgtoa@p^(0+128),f
  7598  075F  30FF               	movlw	255
  7599  0760  3DBD               	addwfc	(efgtoa@p+1)^(0+128),f
  7600                           
  7601                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  7602  0761  30FF               	movlw	255
  7603  0762  07C0               	addwf	efgtoa@w^(0+128),f
  7604  0763  30FF               	movlw	255
  7605  0764  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  7606  0765  2F2B               	goto	l3817
  7607  0766                     l3819:	
  7608  0766  083D               	movf	(efgtoa@p+1)^(0+128),w
  7609  0767  3A80               	xorlw	128
  7610  0768  0020               	movlb	0	; select bank0
  7611  0769  00E8               	movwf	??_efgtoa
  7612  076A  3080               	movlw	128
  7613  076B  0268               	subwf	??_efgtoa,w
  7614  076C  1D03               	skipz
  7615  076D  2F71               	goto	u5165
  7616  076E  3001               	movlw	1
  7617  076F  0021               	movlb	1	; select bank1
  7618  0770  023C               	subwf	efgtoa@p^(0+128),w
  7619  0771                     u5165:	
  7620  0771  1803               	skipnc
  7621  0772  2F2F               	goto	l3807
  7622                           
  7623                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  7624  0773  30FF               	movlw	255
  7625  0774  0021               	movlb	1	; select bank1
  7626  0775  07CB               	addwf	efgtoa@i^(0+128),f
  7627  0776  30FF               	movlw	255
  7628  0777  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  7629                           
  7630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  7631  0778  083A               	movf	efgtoa@sign^(0+128),w
  7632  0779  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  7633  077A  1D03               	btfss	3,2
  7634  077B  2F7E               	goto	l3827
  7635  077C  302B               	movlw	43
  7636  077D  2F7F               	goto	L8
  7637  077E                     l3827:	
  7638  077E  302D               	movlw	45
  7639  077F                     L8:	
  7640  077F  00AA               	movwf	_efgtoa$809^(0+128)
  7641  0780  3000               	movlw	0
  7642  0781  00AB               	movwf	(_efgtoa$809^(0+128)+1)
  7643  0782  082A               	movf	_efgtoa$809^(0+128),w
  7644  0783  0020               	movlb	0	; select bank0
  7645  0784  00E8               	movwf	??_efgtoa
  7646  0785  0021               	movlb	1	; select bank1
  7647  0786  084B               	movf	efgtoa@i^(0+128),w
  7648  0787  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7649  0788  0086               	movwf	6
  7650  0789  3001               	movlw	1	; select bank3/4
  7651  078A  0087               	movwf	7
  7652  078B  0020               	movlb	0	; select bank0
  7653  078C  0868               	movf	??_efgtoa,w
  7654  078D  0081               	movwf	1
  7655                           
  7656                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  7657  078E  30FF               	movlw	255
  7658  078F  0021               	movlb	1	; select bank1
  7659  0790  07C0               	addwf	efgtoa@w^(0+128),f
  7660  0791  30FF               	movlw	255
  7661  0792  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  7662                           
  7663                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  7664  0793  30FF               	movlw	255
  7665  0794  07CB               	addwf	efgtoa@i^(0+128),f
  7666  0795  30FF               	movlw	255
  7667  0796  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  7668  0797  0020               	movlb	0	; select bank0
  7669  0798  0867               	movf	efgtoa@c,w
  7670  0799  3EBF               	addlw	191
  7671  079A  00E8               	movwf	??_efgtoa
  7672  079B  30FF               	movlw	255
  7673  079C  1803               	skipnc
  7674  079D  3000               	movlw	0
  7675  079E  00E9               	movwf	??_efgtoa+1
  7676  079F  3000               	movlw	0
  7677  07A0  0269               	subwf	??_efgtoa+1,w
  7678  07A1  301A               	movlw	26
  7679  07A2  1903               	skipnz
  7680  07A3  0268               	subwf	??_efgtoa,w
  7681  07A4  1803               	btfsc	3,0
  7682  07A5  2FA8               	goto	u5180
  7683  07A6  3001               	movlw	1
  7684  07A7  2FA9               	goto	u5190
  7685  07A8                     u5180:	
  7686  07A8  3000               	movlw	0
  7687  07A9                     u5190:	
  7688  07A9  00EA               	movwf	??_efgtoa+2
  7689  07AA  01EB               	clrf	??_efgtoa+3
  7690  07AB  086A               	movf	??_efgtoa+2,w
  7691  07AC  0021               	movlb	1	; select bank1
  7692  07AD  00AE               	movwf	_efgtoa$811^(0+128)
  7693  07AE  0020               	movlb	0	; select bank0
  7694  07AF  086B               	movf	??_efgtoa+3,w
  7695  07B0  0021               	movlb	1	; select bank1
  7696  07B1  00AF               	movwf	(_efgtoa$811+1)^(0+128)
  7697  07B2  082E               	movf	_efgtoa$811^(0+128),w
  7698  07B3  042F               	iorwf	(_efgtoa$811+1)^(0+128),w
  7699  07B4  1D03               	btfss	3,2
  7700  07B5  2FB8               	goto	l3843
  7701  07B6  3065               	movlw	101
  7702  07B7  2FB9               	goto	L9
  7703  07B8                     l3843:	
  7704  07B8  3045               	movlw	69
  7705  07B9                     L9:	
  7706  07B9  00AC               	movwf	_efgtoa$810^(0+128)
  7707  07BA  3000               	movlw	0
  7708  07BB  00AD               	movwf	(_efgtoa$810^(0+128)+1)
  7709  07BC  082C               	movf	_efgtoa$810^(0+128),w
  7710  07BD  0020               	movlb	0	; select bank0
  7711  07BE  00E8               	movwf	??_efgtoa
  7712  07BF  0021               	movlb	1	; select bank1
  7713  07C0  084B               	movf	efgtoa@i^(0+128),w
  7714  07C1  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7715  07C2  0086               	movwf	6
  7716  07C3  3001               	movlw	1	; select bank3/4
  7717  07C4  0087               	movwf	7
  7718  07C5  0020               	movlb	0	; select bank0
  7719  07C6  0868               	movf	??_efgtoa,w
  7720  07C7  0081               	movwf	1
  7721                           
  7722                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  7723  07C8  30FF               	movlw	255
  7724  07C9  0021               	movlb	1	; select bank1
  7725  07CA  07C0               	addwf	efgtoa@w^(0+128),f
  7726  07CB  30FF               	movlw	255
  7727  07CC  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  7728                           
  7729                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  7730  07CD  084B               	movf	efgtoa@i^(0+128),w
  7731  07CE  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7732  07CF  00F0               	movwf	strcpy@src
  7733  07D0  3001               	movlw	1
  7734  07D1  00F1               	movwf	strcpy@src+1
  7735  07D2  0853               	movf	efgtoa@n^(0+128),w
  7736  07D3  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7737  07D4  3191  21B9  3181   	fcall	_strcpy
  7738  07D7                     l3851:	
  7739                           
  7740                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 502:     re
      +                          turn pad(fp, &dbuf[0], w);
  7741  07D7  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  7742  07D8  0020               	movlb	0	; select bank0
  7743  07D9  00E8               	movwf	??_efgtoa
  7744  07DA  0868               	movf	??_efgtoa,w
  7745  07DB  00A4               	movwf	pad@buf
  7746  07DC  0021               	movlb	1	; select bank1
  7747  07DD  0841               	movf	(efgtoa@w+1)^(0+128),w
  7748  07DE  0020               	movlb	0	; select bank0
  7749  07DF  00A6               	movwf	pad@p+1
  7750  07E0  0021               	movlb	1	; select bank1
  7751  07E1  0840               	movf	efgtoa@w^(0+128),w
  7752  07E2  0020               	movlb	0	; select bank0
  7753  07E3  00A5               	movwf	pad@p
  7754  07E4  0021               	movlb	1	; select bank1
  7755  07E5  083E               	movf	efgtoa@fp^(0+128),w
  7756  07E6  3193  23B7         	fcall	_pad
  7757  07E8  0020               	movlb	0	; select bank0
  7758  07E9  0825               	movf	?_pad+1,w
  7759  07EA  00E4               	movwf	?_efgtoa+1
  7760  07EB  0824               	movf	?_pad,w
  7761  07EC  00E3               	movwf	?_efgtoa
  7762  07ED  0008               	return
  7763  07EE                     __end_of_efgtoa:	
  7764                           
  7765                           	psect	text6
  7766  11F9                     __ptext6:	
  7767 ;; *************** function _tolower *****************
  7768 ;; Defined at:
  7769 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
  7770 ;; Parameters:    Size  Location     Type
  7771 ;;  c               2    6[COMMON] int 
  7772 ;; Auto vars:     Size  Location     Type
  7773 ;;		None
  7774 ;; Return value:  Size  Location     Type
  7775 ;;                  2    6[COMMON] int 
  7776 ;; Registers used:
  7777 ;;		wreg, status,2, status,0
  7778 ;; Tracked objects:
  7779 ;;		On entry : 0/0
  7780 ;;		On exit  : 0/0
  7781 ;;		Unchanged: 0/0
  7782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7783 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7784 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7785 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7786 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7787 ;;Total ram usage:        8 bytes
  7788 ;; Hardware stack levels used:    1
  7789 ;; Hardware stack levels required when called:    1
  7790 ;; This function calls:
  7791 ;;		_isupper
  7792 ;; This function is called by:
  7793 ;;		_efgtoa
  7794 ;;		_vfpfcnvrt
  7795 ;; This function uses a non-reentrant model
  7796 ;;
  7797                           
  7798                           
  7799                           ;psect for function _tolower
  7800  11F9                     _tolower:	
  7801                           
  7802                           ;incstack = 0
  7803                           ; Regs used in _tolower: [wreg+status,2+status,0]
  7804  11F9  0876               	movf	tolower@c,w
  7805  11FA  3EBF               	addlw	191
  7806  11FB  00F8               	movwf	??_tolower
  7807  11FC  30FF               	movlw	255
  7808  11FD  3D77               	addwfc	tolower@c+1,w
  7809  11FE  00F9               	movwf	??_tolower+1
  7810  11FF  3000               	movlw	0
  7811  1200  0279               	subwf	??_tolower+1,w
  7812  1201  301A               	movlw	26
  7813  1202  1903               	skipnz
  7814  1203  0278               	subwf	??_tolower,w
  7815  1204  1803               	btfsc	3,0
  7816  1205  2A08               	goto	u3540
  7817  1206  3001               	movlw	1
  7818  1207  2A09               	goto	u3550
  7819  1208                     u3540:	
  7820  1208  3000               	movlw	0
  7821  1209                     u3550:	
  7822  1209  00FA               	movwf	??_tolower+2
  7823  120A  01FB               	clrf	??_tolower+3
  7824  120B  087A               	movf	??_tolower+2,w
  7825  120C  00FC               	movwf	_tolower$1243
  7826  120D  087B               	movf	??_tolower+3,w
  7827  120E  00FD               	movwf	_tolower$1243+1
  7828  120F  087C               	movf	_tolower$1243,w
  7829  1210  047D               	iorwf	_tolower$1243+1,w
  7830  1211  1903               	btfsc	3,2
  7831  1212  0008               	return
  7832  1213  3020               	movlw	32
  7833  1214  0476               	iorwf	tolower@c,w
  7834  1215  00F6               	movwf	?_tolower
  7835  1216  3000               	movlw	0
  7836  1217  0477               	iorwf	tolower@c+1,w
  7837  1218  00F7               	movwf	?_tolower+1
  7838  1219  0008               	return
  7839  121A                     __end_of_tolower:	
  7840                           
  7841                           	psect	text7
  7842  10FC                     __ptext7:	
  7843 ;; *************** function _isupper *****************
  7844 ;; Defined at:
  7845 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  7846 ;; Parameters:    Size  Location     Type
  7847 ;;  c               2    0[COMMON] int 
  7848 ;; Auto vars:     Size  Location     Type
  7849 ;;		None
  7850 ;; Return value:  Size  Location     Type
  7851 ;;                  2    0[COMMON] int 
  7852 ;; Registers used:
  7853 ;;		wreg, status,2, status,0
  7854 ;; Tracked objects:
  7855 ;;		On entry : 0/0
  7856 ;;		On exit  : 0/0
  7857 ;;		Unchanged: 0/0
  7858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7859 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7861 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7862 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7863 ;;Total ram usage:        6 bytes
  7864 ;; Hardware stack levels used:    1
  7865 ;; This function calls:
  7866 ;;		Nothing
  7867 ;; This function is called by:
  7868 ;;		_efgtoa
  7869 ;;		_vfpfcnvrt
  7870 ;;		_tolower
  7871 ;; This function uses a non-reentrant model
  7872 ;;
  7873                           
  7874                           
  7875                           ;psect for function _isupper
  7876  10FC                     _isupper:	
  7877                           
  7878                           ;incstack = 0
  7879                           ; Regs used in _isupper: [wreg+status,2+status,0]
  7880  10FC  0870               	movf	isupper@c,w
  7881  10FD  3EBF               	addlw	191
  7882  10FE  00F2               	movwf	??_isupper
  7883  10FF  30FF               	movlw	255
  7884  1100  3D71               	addwfc	isupper@c+1,w
  7885  1101  00F3               	movwf	??_isupper+1
  7886  1102  3000               	movlw	0
  7887  1103  0273               	subwf	??_isupper+1,w
  7888  1104  301A               	movlw	26
  7889  1105  1903               	skipnz
  7890  1106  0272               	subwf	??_isupper,w
  7891  1107  1803               	btfsc	3,0
  7892  1108  290B               	goto	u2930
  7893  1109  3001               	movlw	1
  7894  110A  290C               	goto	u2940
  7895  110B                     u2930:	
  7896  110B  3000               	movlw	0
  7897  110C                     u2940:	
  7898  110C  00F4               	movwf	??_isupper+2
  7899  110D  01F5               	clrf	??_isupper+3
  7900  110E  0874               	movf	??_isupper+2,w
  7901  110F  00F0               	movwf	?_isupper
  7902  1110  0875               	movf	??_isupper+3,w
  7903  1111  00F1               	movwf	?_isupper+1
  7904  1112  0008               	return
  7905  1113                     __end_of_isupper:	
  7906                           
  7907                           	psect	text8
  7908  11B9                     __ptext8:	
  7909 ;; *************** function _strcpy *****************
  7910 ;; Defined at:
  7911 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
  7912 ;; Parameters:    Size  Location     Type
  7913 ;;  dest            1    wreg     PTR unsigned char 
  7914 ;;		 -> dbuf(80), 
  7915 ;;  src             2    0[COMMON] PTR const unsigned char 
  7916 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  7917 ;;		 -> dbuf(80), 
  7918 ;; Auto vars:     Size  Location     Type
  7919 ;;  dest            1    7[COMMON] PTR unsigned char 
  7920 ;;		 -> dbuf(80), 
  7921 ;;  s               2    4[COMMON] PTR const unsigned char 
  7922 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  7923 ;;		 -> dbuf(80), 
  7924 ;;  d               1    6[COMMON] PTR unsigned char 
  7925 ;;		 -> dbuf(80), 
  7926 ;; Return value:  Size  Location     Type
  7927 ;;                  1    wreg      PTR unsigned char 
  7928 ;; Registers used:
  7929 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  7930 ;; Tracked objects:
  7931 ;;		On entry : 0/0
  7932 ;;		On exit  : 0/0
  7933 ;;		Unchanged: 0/0
  7934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7935 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7936 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7937 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7938 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7939 ;;Total ram usage:        8 bytes
  7940 ;; Hardware stack levels used:    1
  7941 ;; This function calls:
  7942 ;;		Nothing
  7943 ;; This function is called by:
  7944 ;;		_efgtoa
  7945 ;; This function uses a non-reentrant model
  7946 ;;
  7947                           
  7948                           
  7949                           ;psect for function _strcpy
  7950  11B9                     _strcpy:	
  7951                           
  7952                           ;incstack = 0
  7953                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  7954                           ;strcpy@dest stored from wreg
  7955  11B9  00F7               	movwf	strcpy@dest
  7956  11BA  0871               	movf	strcpy@src+1,w
  7957  11BB  00F5               	movwf	strcpy@s+1
  7958  11BC  0870               	movf	strcpy@src,w
  7959  11BD  00F4               	movwf	strcpy@s
  7960  11BE  0877               	movf	strcpy@dest,w
  7961  11BF  00F2               	movwf	??_strcpy
  7962  11C0  0872               	movf	??_strcpy,w
  7963  11C1  00F6               	movwf	strcpy@d
  7964  11C2                     l3047:	
  7965  11C2  0876               	movf	strcpy@d,w
  7966  11C3  0086               	movwf	6
  7967  11C4  3001               	movlw	1	; select bank2/3
  7968  11C5  0087               	movwf	7
  7969  11C6  0AF6               	incf	strcpy@d,f
  7970  11C7  0875               	movf	strcpy@s+1,w
  7971  11C8  00F3               	movwf	??_strcpy+1
  7972  11C9  0874               	movf	strcpy@s,w
  7973  11CA  00F2               	movwf	??_strcpy
  7974  11CB  0AF4               	incf	strcpy@s,f
  7975  11CC  1903               	skipnz
  7976  11CD  0AF5               	incf	strcpy@s+1,f
  7977  11CE  0872               	movf	??_strcpy,w
  7978  11CF  0084               	movwf	4
  7979  11D0  0873               	movf	??_strcpy+1,w
  7980  11D1  0085               	movwf	5
  7981  11D2  0800               	movf	0,w	;code access
  7982  11D3  3FC0               	movwi [0]fsr1
  7983  11D4  0889               	movf	9,f
  7984  11D5  1903               	btfsc	3,2
  7985  11D6  0008               	return
  7986  11D7  29C2               	goto	l3047
  7987  11D8                     __end_of_strcpy:	
  7988                           
  7989                           	psect	text9
  7990  13B7                     __ptext9:	
  7991 ;; *************** function _pad *****************
  7992 ;; Defined at:
  7993 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7994 ;; Parameters:    Size  Location     Type
  7995 ;;  fp              1    wreg     PTR struct _IO_FILE
  7996 ;;		 -> NULL(0), 
  7997 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  7998 ;;		 -> dbuf(80), 
  7999 ;;  p               2    5[BANK0 ] int 
  8000 ;; Auto vars:     Size  Location     Type
  8001 ;;  fp              1   12[BANK0 ] PTR struct _IO_FILE
  8002 ;;		 -> NULL(0), 
  8003 ;;  w               2   10[BANK0 ] int 
  8004 ;;  i               2    8[BANK0 ] int 
  8005 ;; Return value:  Size  Location     Type
  8006 ;;                  2    4[BANK0 ] int 
  8007 ;; Registers used:
  8008 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8009 ;; Tracked objects:
  8010 ;;		On entry : 0/0
  8011 ;;		On exit  : 0/0
  8012 ;;		Unchanged: 0/0
  8013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8014 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8015 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8016 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8017 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8018 ;;Total ram usage:        9 bytes
  8019 ;; Hardware stack levels used:    1
  8020 ;; Hardware stack levels required when called:    4
  8021 ;; This function calls:
  8022 ;;		_fputc
  8023 ;;		_fputs
  8024 ;;		_strlen
  8025 ;; This function is called by:
  8026 ;;		_efgtoa
  8027 ;; This function uses a non-reentrant model
  8028 ;;
  8029                           
  8030                           
  8031                           ;psect for function _pad
  8032  13B7                     _pad:	
  8033                           
  8034                           ;incstack = 0
  8035                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8036                           ;pad@fp stored from wreg
  8037  13B7  0020               	movlb	0	; select bank0
  8038  13B8  00AC               	movwf	pad@fp
  8039                           
  8040                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  8041  13B9  0022               	movlb	2	; select bank2
  8042  13BA  1C59               	btfss	_flags^(0+256),0
  8043  13BB  2BC5               	goto	l3005
  8044                           
  8045                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  8046  13BC  0020               	movlb	0	; select bank0
  8047  13BD  082C               	movf	pad@fp,w
  8048  13BE  00A7               	movwf	??_pad
  8049  13BF  0827               	movf	??_pad,w
  8050  13C0  00FA               	movwf	fputs@fp
  8051  13C1  0824               	movf	pad@buf,w
  8052  13C2  3192  221A  3193   	fcall	_fputs
  8053  13C5                     l3005:	
  8054                           
  8055                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  8056  13C5  0020               	movlb	0	; select bank0
  8057  13C6  1BA6               	btfsc	pad@p+1,7
  8058  13C7  2BCD               	goto	l3009
  8059  13C8  0826               	movf	pad@p+1,w
  8060  13C9  00AB               	movwf	pad@w+1
  8061  13CA  0825               	movf	pad@p,w
  8062  13CB  00AA               	movwf	pad@w
  8063  13CC  2BCF               	goto	l426
  8064  13CD                     l3009:	
  8065  13CD  01AA               	clrf	pad@w
  8066  13CE  01AB               	clrf	pad@w+1
  8067  13CF                     l426:	
  8068                           
  8069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  8070  13CF  01A8               	clrf	pad@i
  8071  13D0  01A9               	clrf	pad@i+1
  8072  13D1                     l3015:	
  8073                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8074                           
  8075                           
  8076                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8077  13D1  0829               	movf	pad@i+1,w
  8078  13D2  3A80               	xorlw	128
  8079  13D3  00A7               	movwf	??_pad
  8080  13D4  082B               	movf	pad@w+1,w
  8081  13D5  3A80               	xorlw	128
  8082  13D6  0227               	subwf	??_pad,w
  8083  13D7  1D03               	skipz
  8084  13D8  2BDB               	goto	u3435
  8085  13D9  082A               	movf	pad@w,w
  8086  13DA  0228               	subwf	pad@i,w
  8087  13DB                     u3435:	
  8088  13DB  1803               	btfsc	3,0
  8089  13DC  2BEF               	goto	l429
  8090                           
  8091                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  8092  13DD  3020               	movlw	32
  8093  13DE  00F2               	movwf	fputc@c
  8094  13DF  3000               	movlw	0
  8095  13E0  00F3               	movwf	fputc@c+1
  8096  13E1  0020               	movlb	0	; select bank0
  8097  13E2  082C               	movf	pad@fp,w
  8098  13E3  00A7               	movwf	??_pad
  8099  13E4  0827               	movf	??_pad,w
  8100  13E5  00F4               	movwf	fputc@fp
  8101  13E6  3192  22A7  3193   	fcall	_fputc
  8102                           
  8103                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  8104  13E9  3001               	movlw	1
  8105  13EA  0020               	movlb	0	; select bank0
  8106  13EB  07A8               	addwf	pad@i,f
  8107  13EC  3000               	movlw	0
  8108  13ED  3DA9               	addwfc	pad@i+1,f
  8109  13EE  2BD1               	goto	l3015
  8110  13EF                     l429:	
  8111                           
  8112                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  8113  13EF  0022               	movlb	2	; select bank2
  8114  13F0  1859               	btfsc	_flags^(0+256),0
  8115  13F1  2BFB               	goto	l430
  8116                           
  8117                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  8118  13F2  0020               	movlb	0	; select bank0
  8119  13F3  082C               	movf	pad@fp,w
  8120  13F4  00A7               	movwf	??_pad
  8121  13F5  0827               	movf	??_pad,w
  8122  13F6  00FA               	movwf	fputs@fp
  8123  13F7  0824               	movf	pad@buf,w
  8124  13F8  3192  221A  3193   	fcall	_fputs
  8125  13FB                     l430:	
  8126                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 92:     }
  8127                           
  8128                           
  8129                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  8130  13FB  0020               	movlb	0	; select bank0
  8131  13FC  0824               	movf	pad@buf,w
  8132  13FD  3191  2113         	fcall	_strlen
  8133  13FF  0020               	movlb	0	; select bank0
  8134  1400  082A               	movf	pad@w,w
  8135  1401  0770               	addwf	?_strlen,w
  8136  1402  00A4               	movwf	?_pad
  8137  1403  082B               	movf	pad@w+1,w
  8138  1404  3D71               	addwfc	?_strlen+1,w
  8139  1405  00A5               	movwf	?_pad+1
  8140  1406  0008               	return
  8141  1407                     __end_of_pad:	
  8142                           
  8143                           	psect	text10
  8144  1113                     __ptext10:	
  8145 ;; *************** function _strlen *****************
  8146 ;; Defined at:
  8147 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  8148 ;; Parameters:    Size  Location     Type
  8149 ;;  s               1    wreg     PTR const unsigned char 
  8150 ;;		 -> dbuf(80), 
  8151 ;; Auto vars:     Size  Location     Type
  8152 ;;  s               1    4[COMMON] PTR const unsigned char 
  8153 ;;		 -> dbuf(80), 
  8154 ;;  a               1    3[COMMON] PTR const unsigned char 
  8155 ;;		 -> dbuf(80), 
  8156 ;; Return value:  Size  Location     Type
  8157 ;;                  2    0[COMMON] unsigned int 
  8158 ;; Registers used:
  8159 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8160 ;; Tracked objects:
  8161 ;;		On entry : 0/0
  8162 ;;		On exit  : 0/0
  8163 ;;		Unchanged: 0/0
  8164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8165 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8166 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8167 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8168 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8169 ;;Total ram usage:        5 bytes
  8170 ;; Hardware stack levels used:    1
  8171 ;; This function calls:
  8172 ;;		Nothing
  8173 ;; This function is called by:
  8174 ;;		_pad
  8175 ;; This function uses a non-reentrant model
  8176 ;;
  8177                           
  8178                           
  8179                           ;psect for function _strlen
  8180  1113                     _strlen:	
  8181                           
  8182                           ;incstack = 0
  8183                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  8184                           ;strlen@s stored from wreg
  8185  1113  00F4               	movwf	strlen@s
  8186  1114  0874               	movf	strlen@s,w
  8187  1115  00F2               	movwf	??_strlen
  8188  1116  0872               	movf	??_strlen,w
  8189  1117  00F3               	movwf	strlen@a
  8190  1118                     l2783:	
  8191  1118  0874               	movf	strlen@s,w
  8192  1119  0086               	movwf	6
  8193  111A  3001               	movlw	1	; select bank2/3
  8194  111B  0087               	movwf	7
  8195  111C  0801               	movf	1,w
  8196  111D  1903               	btfsc	3,2
  8197  111E  2924               	goto	l2785
  8198  111F  3001               	movlw	1
  8199  1120  00F2               	movwf	??_strlen
  8200  1121  0872               	movf	??_strlen,w
  8201  1122  07F4               	addwf	strlen@s,f
  8202  1123  2918               	goto	l2783
  8203  1124                     l2785:	
  8204  1124  0873               	movf	strlen@a,w
  8205  1125  0274               	subwf	strlen@s,w
  8206  1126  00F0               	movwf	?_strlen
  8207  1127  01F1               	clrf	?_strlen+1
  8208  1128  1BF0               	btfsc	?_strlen,7
  8209  1129  03F1               	decf	?_strlen+1,f
  8210  112A  0008               	return
  8211  112B                     __end_of_strlen:	
  8212                           
  8213                           	psect	text11
  8214  121A                     __ptext11:	
  8215 ;; *************** function _fputs *****************
  8216 ;; Defined at:
  8217 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  8218 ;; Parameters:    Size  Location     Type
  8219 ;;  s               1    wreg     PTR const unsigned char 
  8220 ;;		 -> dbuf(80), 
  8221 ;;  fp              1   10[COMMON] PTR struct _IO_FILE
  8222 ;;		 -> NULL(0), 
  8223 ;; Auto vars:     Size  Location     Type
  8224 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  8225 ;;		 -> dbuf(80), 
  8226 ;;  i               2    1[BANK0 ] int 
  8227 ;;  c               1    0[BANK0 ] unsigned char 
  8228 ;; Return value:  Size  Location     Type
  8229 ;;                  2   10[COMMON] int 
  8230 ;; Registers used:
  8231 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8232 ;; Tracked objects:
  8233 ;;		On entry : 0/0
  8234 ;;		On exit  : 0/0
  8235 ;;		Unchanged: 0/0
  8236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8237 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8238 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8239 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8240 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8241 ;;Total ram usage:        8 bytes
  8242 ;; Hardware stack levels used:    1
  8243 ;; Hardware stack levels required when called:    3
  8244 ;; This function calls:
  8245 ;;		_fputc
  8246 ;; This function is called by:
  8247 ;;		_pad
  8248 ;; This function uses a non-reentrant model
  8249 ;;
  8250                           
  8251                           
  8252                           ;psect for function _fputs
  8253  121A                     _fputs:	
  8254                           
  8255                           ;incstack = 0
  8256                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8257                           ;fputs@s stored from wreg
  8258  121A  0020               	movlb	0	; select bank0
  8259  121B  00A3               	movwf	fputs@s
  8260  121C  01A1               	clrf	fputs@i
  8261  121D  01A2               	clrf	fputs@i+1
  8262  121E                     l2777:	
  8263  121E  0821               	movf	fputs@i,w
  8264  121F  0723               	addwf	fputs@s,w
  8265  1220  00FB               	movwf	??_fputs
  8266  1221  087B               	movf	??_fputs,w
  8267  1222  0086               	movwf	6
  8268  1223  3001               	movlw	1	; select bank2/3
  8269  1224  0087               	movwf	7
  8270  1225  0801               	movf	1,w
  8271  1226  00FC               	movwf	??_fputs+1
  8272  1227  087C               	movf	??_fputs+1,w
  8273  1228  00A0               	movwf	fputs@c
  8274  1229  0820               	movf	fputs@c,w
  8275  122A  1903               	btfsc	3,2
  8276  122B  0008               	return
  8277  122C  0820               	movf	fputs@c,w
  8278  122D  00FB               	movwf	??_fputs
  8279  122E  01FC               	clrf	??_fputs+1
  8280  122F  087B               	movf	??_fputs,w
  8281  1230  00F2               	movwf	fputc@c
  8282  1231  087C               	movf	??_fputs+1,w
  8283  1232  00F3               	movwf	fputc@c+1
  8284  1233  087A               	movf	fputs@fp,w
  8285  1234  00FD               	movwf	??_fputs+2
  8286  1235  087D               	movf	??_fputs+2,w
  8287  1236  00F4               	movwf	fputc@fp
  8288  1237  3192  22A7  3192   	fcall	_fputc
  8289  123A  3001               	movlw	1
  8290  123B  0020               	movlb	0	; select bank0
  8291  123C  07A1               	addwf	fputs@i,f
  8292  123D  3000               	movlw	0
  8293  123E  3DA2               	addwfc	fputs@i+1,f
  8294  123F  2A1E               	goto	l2777
  8295  1240                     __end_of_fputs:	
  8296                           
  8297                           	psect	text12
  8298  12A7                     __ptext12:	
  8299 ;; *************** function _fputc *****************
  8300 ;; Defined at:
  8301 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  8302 ;; Parameters:    Size  Location     Type
  8303 ;;  c               2    2[COMMON] int 
  8304 ;;  fp              1    4[COMMON] PTR struct _IO_FILE
  8305 ;;		 -> NULL(0), 
  8306 ;; Auto vars:     Size  Location     Type
  8307 ;;		None
  8308 ;; Return value:  Size  Location     Type
  8309 ;;                  2    2[COMMON] int 
  8310 ;; Registers used:
  8311 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8312 ;; Tracked objects:
  8313 ;;		On entry : 0/0
  8314 ;;		On exit  : 0/0
  8315 ;;		Unchanged: 0/0
  8316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8317 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8319 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8320 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8321 ;;Total ram usage:        8 bytes
  8322 ;; Hardware stack levels used:    1
  8323 ;; Hardware stack levels required when called:    2
  8324 ;; This function calls:
  8325 ;;		_putch
  8326 ;; This function is called by:
  8327 ;;		_pad
  8328 ;;		_vfpfcnvrt
  8329 ;;		_fputs
  8330 ;; This function uses a non-reentrant model
  8331 ;;
  8332                           
  8333                           
  8334                           ;psect for function _fputc
  8335  12A7                     _fputc:	
  8336                           
  8337                           ;incstack = 0
  8338                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8339  12A7  0874               	movf	fputc@fp,w
  8340  12A8  1D03               	btfss	3,2
  8341  12A9  0874               	movf	fputc@fp,w
  8342  12AA  1D03               	btfss	3,2
  8343  12AB  2AB0               	goto	l2763
  8344  12AC  0872               	movf	fputc@c,w
  8345  12AD  3190  2076         	fcall	_putch
  8346  12AF  0008               	return
  8347  12B0                     l2763:	
  8348  12B0  0874               	movf	fputc@fp,w
  8349  12B1  3E03               	addlw	3
  8350  12B2  0086               	movwf	6
  8351  12B3  0187               	clrf	7
  8352  12B4  0016               	moviw fsr1++
  8353  12B5  0401               	iorwf	1,w
  8354  12B6  1903               	btfsc	3,2
  8355  12B7  2AD3               	goto	l2767
  8356  12B8  0874               	movf	fputc@fp,w
  8357  12B9  3E03               	addlw	3
  8358  12BA  0086               	movwf	6
  8359  12BB  0187               	clrf	7
  8360  12BC  3F40               	moviw [0]fsr1
  8361  12BD  00F5               	movwf	??_fputc
  8362  12BE  3F41               	moviw [1]fsr1
  8363  12BF  00F6               	movwf	??_fputc+1
  8364  12C0  0A74               	incf	fputc@fp,w
  8365  12C1  0086               	movwf	6
  8366  12C2  0187               	clrf	7
  8367  12C3  3F40               	moviw [0]fsr1
  8368  12C4  00F7               	movwf	??_fputc+2
  8369  12C5  3F41               	moviw [1]fsr1
  8370  12C6  00F8               	movwf	??_fputc+3
  8371  12C7  0878               	movf	??_fputc+3,w
  8372  12C8  3A80               	xorlw	128
  8373  12C9  00F9               	movwf	??_fputc+4
  8374  12CA  0876               	movf	??_fputc+1,w
  8375  12CB  3A80               	xorlw	128
  8376  12CC  0279               	subwf	??_fputc+4,w
  8377  12CD  1D03               	skipz
  8378  12CE  2AD1               	goto	u2905
  8379  12CF  0875               	movf	??_fputc,w
  8380  12D0  0277               	subwf	??_fputc+2,w
  8381  12D1                     u2905:	
  8382  12D1  1803               	skipnc
  8383  12D2  0008               	return
  8384  12D3                     l2767:	
  8385  12D3  0A74               	incf	fputc@fp,w
  8386  12D4  0086               	movwf	6
  8387  12D5  0187               	clrf	7
  8388  12D6  3001               	movlw	1
  8389  12D7  0781               	addwf	1,f
  8390  12D8  3141               	addfsr 1,1
  8391  12D9  1803               	skipnc
  8392  12DA  0A81               	incf	1,f
  8393  12DB  0008               	return
  8394  12DC                     __end_of_fputc:	
  8395                           
  8396                           	psect	text13
  8397  1076                     __ptext13:	
  8398 ;; *************** function _putch *****************
  8399 ;; Defined at:
  8400 ;;		line 146 in file "mcc_generated_files/eusart.c"
  8401 ;; Parameters:    Size  Location     Type
  8402 ;;  txData          1    wreg     unsigned char 
  8403 ;; Auto vars:     Size  Location     Type
  8404 ;;  txData          1    1[COMMON] unsigned char 
  8405 ;; Return value:  Size  Location     Type
  8406 ;;                  1    wreg      void 
  8407 ;; Registers used:
  8408 ;;		wreg, status,2, status,0, pclath, cstack
  8409 ;; Tracked objects:
  8410 ;;		On entry : 0/0
  8411 ;;		On exit  : 0/0
  8412 ;;		Unchanged: 0/0
  8413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8415 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8417 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8418 ;;Total ram usage:        1 bytes
  8419 ;; Hardware stack levels used:    1
  8420 ;; Hardware stack levels required when called:    1
  8421 ;; This function calls:
  8422 ;;		_EUSART_Write
  8423 ;; This function is called by:
  8424 ;;		_fputc
  8425 ;; This function uses a non-reentrant model
  8426 ;;
  8427                           
  8428                           
  8429                           ;psect for function _putch
  8430  1076                     _putch:	
  8431                           
  8432                           ;incstack = 0
  8433                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  8434                           ;putch@txData stored from wreg
  8435  1076  00F1               	movwf	putch@txData
  8436                           
  8437                           ;mcc_generated_files/eusart.c: 146: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 147: {;mcc_generated_files/eusart.c: 148:     EUSART_Write(txData);
  8438  1077  0871               	movf	putch@txData,w
  8439  1078  3190  20A0         	fcall	_EUSART_Write
  8440  107A  0008               	return
  8441  107B                     __end_of_putch:	
  8442                           
  8443                           	psect	text14
  8444  10A0                     __ptext14:	
  8445 ;; *************** function _EUSART_Write *****************
  8446 ;; Defined at:
  8447 ;;		line 132 in file "mcc_generated_files/eusart.c"
  8448 ;; Parameters:    Size  Location     Type
  8449 ;;  txData          1    wreg     unsigned char 
  8450 ;; Auto vars:     Size  Location     Type
  8451 ;;  txData          1    0[COMMON] unsigned char 
  8452 ;; Return value:  Size  Location     Type
  8453 ;;                  1    wreg      void 
  8454 ;; Registers used:
  8455 ;;		wreg
  8456 ;; Tracked objects:
  8457 ;;		On entry : 0/0
  8458 ;;		On exit  : 0/0
  8459 ;;		Unchanged: 0/0
  8460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8462 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8464 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8465 ;;Total ram usage:        1 bytes
  8466 ;; Hardware stack levels used:    1
  8467 ;; This function calls:
  8468 ;;		Nothing
  8469 ;; This function is called by:
  8470 ;;		_putch
  8471 ;; This function uses a non-reentrant model
  8472 ;;
  8473                           
  8474                           
  8475                           ;psect for function _EUSART_Write
  8476  10A0                     _EUSART_Write:	
  8477                           
  8478                           ;incstack = 0
  8479                           ; Regs used in _EUSART_Write: [wreg]
  8480                           ;EUSART_Write@txData stored from wreg
  8481  10A0  00F0               	movwf	EUSART_Write@txData
  8482  10A1                     l254:	
  8483                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  8484                           
  8485                           
  8486                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  8487  10A1  0020               	movlb	0	; select bank0
  8488  10A2  1E10               	btfss	16,4	;volatile
  8489  10A3  28A1               	goto	l254
  8490                           
  8491                           ;mcc_generated_files/eusart.c: 138:     TX1REG = txData;
  8492  10A4  0870               	movf	EUSART_Write@txData,w
  8493  10A5  0023               	movlb	3	; select bank3
  8494  10A6  009A               	movwf	26	;volatile
  8495  10A7  0008               	return
  8496  10A8                     __end_of_EUSART_Write:	
  8497                           
  8498                           	psect	text15
  8499  08AE                     __ptext15:	
  8500 ;; *************** function _floorf *****************
  8501 ;; Defined at:
  8502 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
  8503 ;; Parameters:    Size  Location     Type
  8504 ;;  x               4   13[BANK0 ] float 
  8505 ;; Auto vars:     Size  Location     Type
  8506 ;;  u               4   29[BANK0 ] struct .
  8507 ;;  m               4   23[BANK0 ] unsigned long 
  8508 ;;  e               2   27[BANK0 ] int 
  8509 ;; Return value:  Size  Location     Type
  8510 ;;                  4   13[BANK0 ] float 
  8511 ;; Registers used:
  8512 ;;		wreg, status,2, status,0
  8513 ;; Tracked objects:
  8514 ;;		On entry : 0/0
  8515 ;;		On exit  : 0/0
  8516 ;;		Unchanged: 0/0
  8517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8518 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8519 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8520 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8521 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8522 ;;Total ram usage:       20 bytes
  8523 ;; Hardware stack levels used:    1
  8524 ;; This function calls:
  8525 ;;		Nothing
  8526 ;; This function is called by:
  8527 ;;		_efgtoa
  8528 ;; This function uses a non-reentrant model
  8529 ;;
  8530                           
  8531                           
  8532                           ;psect for function _floorf
  8533  08AE                     _floorf:	
  8534                           
  8535                           ;incstack = 0
  8536                           ; Regs used in _floorf: [wreg+status,2+status,0]
  8537  08AE  0022               	movlb	2	; select bank2
  8538  08AF  084E               	movf	(floorf@F524+3)^(0+256),w
  8539  08B0  0020               	movlb	0	; select bank0
  8540  08B1  00C0               	movwf	floorf@u+3
  8541  08B2  0022               	movlb	2	; select bank2
  8542  08B3  084D               	movf	(floorf@F524+2)^(0+256),w
  8543  08B4  0020               	movlb	0	; select bank0
  8544  08B5  00BF               	movwf	floorf@u+2
  8545  08B6  0022               	movlb	2	; select bank2
  8546  08B7  084C               	movf	(floorf@F524+1)^(0+256),w
  8547  08B8  0020               	movlb	0	; select bank0
  8548  08B9  00BE               	movwf	floorf@u+1
  8549  08BA  0022               	movlb	2	; select bank2
  8550  08BB  084B               	movf	floorf@F524^(0+256),w
  8551  08BC  0020               	movlb	0	; select bank0
  8552  08BD  00BD               	movwf	floorf@u
  8553  08BE  0830               	movf	floorf@x+3,w
  8554  08BF  00C0               	movwf	floorf@u+3
  8555  08C0  082F               	movf	floorf@x+2,w
  8556  08C1  00BF               	movwf	floorf@u+2
  8557  08C2  082E               	movf	floorf@x+1,w
  8558  08C3  00BE               	movwf	floorf@u+1
  8559  08C4  082D               	movf	floorf@x,w
  8560  08C5  00BD               	movwf	floorf@u
  8561  08C6  083D               	movf	floorf@u,w
  8562  08C7  00B1               	movwf	??_floorf
  8563  08C8  083E               	movf	floorf@u+1,w
  8564  08C9  00B2               	movwf	??_floorf+1
  8565  08CA  083F               	movf	floorf@u+2,w
  8566  08CB  00B3               	movwf	??_floorf+2
  8567  08CC  0840               	movf	floorf@u+3,w
  8568  08CD  00B4               	movwf	??_floorf+3
  8569  08CE  3017               	movlw	23
  8570  08CF                     u3575:	
  8571  08CF  36B4               	lsrf	??_floorf+3,f
  8572  08D0  0CB3               	rrf	??_floorf+2,f
  8573  08D1  0CB2               	rrf	??_floorf+1,f
  8574  08D2  0CB1               	rrf	??_floorf,f
  8575  08D3  0B89               	decfsz	9,f
  8576  08D4  28CF               	goto	u3575
  8577  08D5  30FF               	movlw	255
  8578  08D6  0531               	andwf	??_floorf,w
  8579  08D7  00B5               	movwf	??_floorf+4
  8580  08D8  3000               	movlw	0
  8581  08D9  0532               	andwf	??_floorf+1,w
  8582  08DA  00B6               	movwf	??_floorf+5
  8583  08DB  0835               	movf	??_floorf+4,w
  8584  08DC  3E81               	addlw	129
  8585  08DD  00BB               	movwf	floorf@e
  8586  08DE  30FF               	movlw	255
  8587  08DF  3D36               	addwfc	??_floorf+5,w
  8588  08E0  00BC               	movwf	floorf@e+1
  8589  08E1  083C               	movf	floorf@e+1,w
  8590  08E2  3A80               	xorlw	128
  8591  08E3  00B1               	movwf	??_floorf
  8592  08E4  3080               	movlw	128
  8593  08E5  0231               	subwf	??_floorf,w
  8594  08E6  1D03               	skipz
  8595  08E7  28EA               	goto	u3585
  8596  08E8  3017               	movlw	23
  8597  08E9  023B               	subwf	floorf@e,w
  8598  08EA                     u3585:	
  8599  08EA  1803               	btfsc	3,0
  8600  08EB  0008               	return
  8601  08EC  0020               	movlb	0	; select bank0
  8602  08ED  1BBC               	btfsc	floorf@e+1,7
  8603  08EE  2947               	goto	l3079
  8604  08EF  30FF               	movlw	255
  8605  08F0  00B1               	movwf	??_floorf
  8606  08F1  30FF               	movlw	255
  8607  08F2  00B2               	movwf	??_floorf+1
  8608  08F3  307F               	movlw	127
  8609  08F4  00B3               	movwf	??_floorf+2
  8610  08F5  3000               	movlw	0
  8611  08F6  00B4               	movwf	??_floorf+3
  8612  08F7  0A3B               	incf	floorf@e,w
  8613  08F8  28FD               	goto	u3600
  8614  08F9                     u3605:	
  8615  08F9  37B4               	asrf	??_floorf+3,f
  8616  08FA  0CB3               	rrf	??_floorf+2,f
  8617  08FB  0CB2               	rrf	??_floorf+1,f
  8618  08FC  0CB1               	rrf	??_floorf,f
  8619  08FD                     u3600:	
  8620  08FD  0B89               	decfsz	9,f
  8621  08FE  28F9               	goto	u3605
  8622  08FF  0834               	movf	??_floorf+3,w
  8623  0900  00BA               	movwf	floorf@m+3
  8624  0901  0833               	movf	??_floorf+2,w
  8625  0902  00B9               	movwf	floorf@m+2
  8626  0903  0832               	movf	??_floorf+1,w
  8627  0904  00B8               	movwf	floorf@m+1
  8628  0905  0831               	movf	??_floorf,w
  8629  0906  00B7               	movwf	floorf@m
  8630  0907  083D               	movf	floorf@u,w
  8631  0908  0537               	andwf	floorf@m,w
  8632  0909  00B1               	movwf	??_floorf
  8633  090A  083E               	movf	floorf@u+1,w
  8634  090B  0538               	andwf	floorf@m+1,w
  8635  090C  00B2               	movwf	??_floorf+1
  8636  090D  083F               	movf	floorf@u+2,w
  8637  090E  0539               	andwf	floorf@m+2,w
  8638  090F  00B3               	movwf	??_floorf+2
  8639  0910  0840               	movf	floorf@u+3,w
  8640  0911  053A               	andwf	floorf@m+3,w
  8641  0912  00B4               	movwf	??_floorf+3
  8642  0913  0834               	movf	??_floorf+3,w
  8643  0914  0433               	iorwf	??_floorf+2,w
  8644  0915  0432               	iorwf	??_floorf+1,w
  8645  0916  0431               	iorwf	??_floorf,w
  8646  0917  1903               	btfsc	3,2
  8647  0918  0008               	return
  8648  0919  083D               	movf	floorf@u,w
  8649  091A  00B1               	movwf	??_floorf
  8650  091B  083E               	movf	floorf@u+1,w
  8651  091C  00B2               	movwf	??_floorf+1
  8652  091D  083F               	movf	floorf@u+2,w
  8653  091E  00B3               	movwf	??_floorf+2
  8654  091F  0840               	movf	floorf@u+3,w
  8655  0920  00B4               	movwf	??_floorf+3
  8656  0921  301F               	movlw	31
  8657  0922                     u3625:	
  8658  0922  36B4               	lsrf	??_floorf+3,f
  8659  0923  0CB3               	rrf	??_floorf+2,f
  8660  0924  0CB2               	rrf	??_floorf+1,f
  8661  0925  0CB1               	rrf	??_floorf,f
  8662  0926  0B89               	decfsz	9,f
  8663  0927  2922               	goto	u3625
  8664  0928  0834               	movf	??_floorf+3,w
  8665  0929  0433               	iorwf	??_floorf+2,w
  8666  092A  0432               	iorwf	??_floorf+1,w
  8667  092B  0431               	iorwf	??_floorf,w
  8668  092C  1903               	skipnz
  8669  092D  2936               	goto	l3077
  8670  092E  0837               	movf	floorf@m,w
  8671  092F  07BD               	addwf	floorf@u,f
  8672  0930  0838               	movf	floorf@m+1,w
  8673  0931  3DBE               	addwfc	floorf@u+1,f
  8674  0932  0839               	movf	floorf@m+2,w
  8675  0933  3DBF               	addwfc	floorf@u+2,f
  8676  0934  083A               	movf	floorf@m+3,w
  8677  0935  3DC0               	addwfc	floorf@u+3,f
  8678  0936                     l3077:	
  8679  0936  0937               	comf	floorf@m,w
  8680  0937  00B1               	movwf	??_floorf
  8681  0938  0938               	comf	floorf@m+1,w
  8682  0939  00B2               	movwf	??_floorf+1
  8683  093A  0939               	comf	floorf@m+2,w
  8684  093B  00B3               	movwf	??_floorf+2
  8685  093C  093A               	comf	floorf@m+3,w
  8686  093D  00B4               	movwf	??_floorf+3
  8687  093E  0831               	movf	??_floorf,w
  8688  093F  05BD               	andwf	floorf@u,f
  8689  0940  0832               	movf	??_floorf+1,w
  8690  0941  05BE               	andwf	floorf@u+1,f
  8691  0942  0833               	movf	??_floorf+2,w
  8692  0943  05BF               	andwf	floorf@u+2,f
  8693  0944  0834               	movf	??_floorf+3,w
  8694  0945  05C0               	andwf	floorf@u+3,f
  8695  0946  297D               	goto	l1059
  8696  0947                     l3079:	
  8697  0947  083D               	movf	floorf@u,w
  8698  0948  00B1               	movwf	??_floorf
  8699  0949  083E               	movf	floorf@u+1,w
  8700  094A  00B2               	movwf	??_floorf+1
  8701  094B  083F               	movf	floorf@u+2,w
  8702  094C  00B3               	movwf	??_floorf+2
  8703  094D  0840               	movf	floorf@u+3,w
  8704  094E  00B4               	movwf	??_floorf+3
  8705  094F  301F               	movlw	31
  8706  0950                     u3645:	
  8707  0950  36B4               	lsrf	??_floorf+3,f
  8708  0951  0CB3               	rrf	??_floorf+2,f
  8709  0952  0CB2               	rrf	??_floorf+1,f
  8710  0953  0CB1               	rrf	??_floorf,f
  8711  0954  0B89               	decfsz	9,f
  8712  0955  2950               	goto	u3645
  8713  0956  0834               	movf	??_floorf+3,w
  8714  0957  0433               	iorwf	??_floorf+2,w
  8715  0958  0432               	iorwf	??_floorf+1,w
  8716  0959  0431               	iorwf	??_floorf,w
  8717  095A  1D03               	skipz
  8718  095B  2960               	goto	l3083
  8719  095C  3000               	movlw	0
  8720  095D  00C0               	movwf	floorf@u+3
  8721  095E  3000               	movlw	0
  8722  095F  2978               	goto	L10
  8723  0960                     l3083:	
  8724  0960  083D               	movf	floorf@u,w
  8725  0961  00B1               	movwf	??_floorf
  8726  0962  083E               	movf	floorf@u+1,w
  8727  0963  00B2               	movwf	??_floorf+1
  8728  0964  083F               	movf	floorf@u+2,w
  8729  0965  00B3               	movwf	??_floorf+2
  8730  0966  0840               	movf	floorf@u+3,w
  8731  0967  00B4               	movwf	??_floorf+3
  8732  0968  3001               	movlw	1
  8733  0969                     u3665:	
  8734  0969  35B1               	lslf	??_floorf,f
  8735  096A  0DB2               	rlf	??_floorf+1,f
  8736  096B  0DB3               	rlf	??_floorf+2,f
  8737  096C  0DB4               	rlf	??_floorf+3,f
  8738  096D  0B89               	decfsz	9,f
  8739  096E  2969               	goto	u3665
  8740  096F  0834               	movf	??_floorf+3,w
  8741  0970  0433               	iorwf	??_floorf+2,w
  8742  0971  0432               	iorwf	??_floorf+1,w
  8743  0972  0431               	iorwf	??_floorf,w
  8744  0973  1903               	skipnz
  8745  0974  297D               	goto	l1059
  8746  0975  30BF               	movlw	191
  8747  0976  00C0               	movwf	floorf@u+3
  8748  0977  3080               	movlw	128
  8749  0978                     L10:	
  8750  0978  00BF               	movwf	floorf@u+2
  8751  0979  3000               	movlw	0
  8752  097A  00BE               	movwf	floorf@u+1
  8753  097B  3000               	movlw	0
  8754  097C  00BD               	movwf	floorf@u
  8755  097D                     l1059:	
  8756  097D  0840               	movf	floorf@u+3,w
  8757  097E  00B0               	movwf	?_floorf+3
  8758  097F  083F               	movf	floorf@u+2,w
  8759  0980  00AF               	movwf	?_floorf+2
  8760  0981  083E               	movf	floorf@u+1,w
  8761  0982  00AE               	movwf	?_floorf+1
  8762  0983  083D               	movf	floorf@u,w
  8763  0984  00AD               	movwf	?_floorf
  8764  0985  0008               	return
  8765  0986                     __end_of_floorf:	
  8766                           
  8767                           	psect	text16
  8768  14BD                     __ptext16:	
  8769 ;; *************** function ___fpclassifyf *****************
  8770 ;; Defined at:
  8771 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
  8772 ;; Parameters:    Size  Location     Type
  8773 ;;  x               4    0[COMMON] float 
  8774 ;; Auto vars:     Size  Location     Type
  8775 ;;  u               4    2[BANK0 ] struct .
  8776 ;;  e               2    0[BANK0 ] int 
  8777 ;; Return value:  Size  Location     Type
  8778 ;;                  2    0[COMMON] int 
  8779 ;; Registers used:
  8780 ;;		wreg, status,2, status,0
  8781 ;; Tracked objects:
  8782 ;;		On entry : 0/0
  8783 ;;		On exit  : 0/0
  8784 ;;		Unchanged: 0/0
  8785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8786 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8787 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8788 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8789 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8790 ;;Total ram usage:       16 bytes
  8791 ;; Hardware stack levels used:    1
  8792 ;; This function calls:
  8793 ;;		Nothing
  8794 ;; This function is called by:
  8795 ;;		_efgtoa
  8796 ;; This function uses a non-reentrant model
  8797 ;;
  8798                           
  8799                           
  8800                           ;psect for function ___fpclassifyf
  8801  14BD                     ___fpclassifyf:	
  8802                           
  8803                           ;incstack = 0
  8804                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  8805  14BD  0022               	movlb	2	; select bank2
  8806  14BE  0852               	movf	(___fpclassifyf@F463+3)^(0+256),w
  8807  14BF  0020               	movlb	0	; select bank0
  8808  14C0  00A5               	movwf	___fpclassifyf@u+3
  8809  14C1  0022               	movlb	2	; select bank2
  8810  14C2  0851               	movf	(___fpclassifyf@F463+2)^(0+256),w
  8811  14C3  0020               	movlb	0	; select bank0
  8812  14C4  00A4               	movwf	___fpclassifyf@u+2
  8813  14C5  0022               	movlb	2	; select bank2
  8814  14C6  0850               	movf	(___fpclassifyf@F463+1)^(0+256),w
  8815  14C7  0020               	movlb	0	; select bank0
  8816  14C8  00A3               	movwf	___fpclassifyf@u+1
  8817  14C9  0022               	movlb	2	; select bank2
  8818  14CA  084F               	movf	___fpclassifyf@F463^(0+256),w
  8819  14CB  0020               	movlb	0	; select bank0
  8820  14CC  00A2               	movwf	___fpclassifyf@u
  8821  14CD  0873               	movf	___fpclassifyf@x+3,w
  8822  14CE  00A5               	movwf	___fpclassifyf@u+3
  8823  14CF  0872               	movf	___fpclassifyf@x+2,w
  8824  14D0  00A4               	movwf	___fpclassifyf@u+2
  8825  14D1  0871               	movf	___fpclassifyf@x+1,w
  8826  14D2  00A3               	movwf	___fpclassifyf@u+1
  8827  14D3  0870               	movf	___fpclassifyf@x,w
  8828  14D4  00A2               	movwf	___fpclassifyf@u
  8829  14D5  0822               	movf	___fpclassifyf@u,w
  8830  14D6  00F4               	movwf	??___fpclassifyf
  8831  14D7  0823               	movf	___fpclassifyf@u+1,w
  8832  14D8  00F5               	movwf	??___fpclassifyf+1
  8833  14D9  0824               	movf	___fpclassifyf@u+2,w
  8834  14DA  00F6               	movwf	??___fpclassifyf+2
  8835  14DB  0825               	movf	___fpclassifyf@u+3,w
  8836  14DC  00F7               	movwf	??___fpclassifyf+3
  8837  14DD  3017               	movlw	23
  8838  14DE                     u3455:	
  8839  14DE  36F7               	lsrf	??___fpclassifyf+3,f
  8840  14DF  0CF6               	rrf	??___fpclassifyf+2,f
  8841  14E0  0CF5               	rrf	??___fpclassifyf+1,f
  8842  14E1  0CF4               	rrf	??___fpclassifyf,f
  8843  14E2  0B89               	decfsz	9,f
  8844  14E3  2CDE               	goto	u3455
  8845  14E4  30FF               	movlw	255
  8846  14E5  0574               	andwf	??___fpclassifyf,w
  8847  14E6  00A0               	movwf	___fpclassifyf@e
  8848  14E7  3000               	movlw	0
  8849  14E8  0575               	andwf	??___fpclassifyf+1,w
  8850  14E9  00A1               	movwf	___fpclassifyf@e+1
  8851  14EA  0820               	movf	___fpclassifyf@e,w
  8852  14EB  0421               	iorwf	___fpclassifyf@e+1,w
  8853  14EC  1D03               	btfss	3,2
  8854  14ED  2D0D               	goto	l3035
  8855  14EE  0822               	movf	___fpclassifyf@u,w
  8856  14EF  00F4               	movwf	??___fpclassifyf
  8857  14F0  0823               	movf	___fpclassifyf@u+1,w
  8858  14F1  00F5               	movwf	??___fpclassifyf+1
  8859  14F2  0824               	movf	___fpclassifyf@u+2,w
  8860  14F3  00F6               	movwf	??___fpclassifyf+2
  8861  14F4  0825               	movf	___fpclassifyf@u+3,w
  8862  14F5  00F7               	movwf	??___fpclassifyf+3
  8863  14F6  3001               	movlw	1
  8864  14F7                     u3475:	
  8865  14F7  35F4               	lslf	??___fpclassifyf,f
  8866  14F8  0DF5               	rlf	??___fpclassifyf+1,f
  8867  14F9  0DF6               	rlf	??___fpclassifyf+2,f
  8868  14FA  0DF7               	rlf	??___fpclassifyf+3,f
  8869  14FB  0B89               	decfsz	9,f
  8870  14FC  2CF7               	goto	u3475
  8871  14FD  0877               	movf	??___fpclassifyf+3,w
  8872  14FE  0476               	iorwf	??___fpclassifyf+2,w
  8873  14FF  0475               	iorwf	??___fpclassifyf+1,w
  8874  1500  0474               	iorwf	??___fpclassifyf,w
  8875  1501  1D03               	skipz
  8876  1502  2D08               	goto	l3031
  8877  1503  3002               	movlw	2
  8878  1504  00F0               	movwf	?___fpclassifyf
  8879  1505  3000               	movlw	0
  8880  1506  00F1               	movwf	?___fpclassifyf+1
  8881  1507  0008               	return
  8882  1508                     l3031:	
  8883  1508  3003               	movlw	3
  8884  1509  00F0               	movwf	?___fpclassifyf
  8885  150A  3000               	movlw	0
  8886  150B  00F1               	movwf	?___fpclassifyf+1
  8887  150C  0008               	return
  8888  150D                     l3035:	
  8889  150D  0A20               	incf	___fpclassifyf@e,w
  8890  150E  0421               	iorwf	___fpclassifyf@e+1,w
  8891  150F  1D03               	btfss	3,2
  8892  1510  2D30               	goto	l3041
  8893  1511  0822               	movf	___fpclassifyf@u,w
  8894  1512  00F4               	movwf	??___fpclassifyf
  8895  1513  0823               	movf	___fpclassifyf@u+1,w
  8896  1514  00F5               	movwf	??___fpclassifyf+1
  8897  1515  0824               	movf	___fpclassifyf@u+2,w
  8898  1516  00F6               	movwf	??___fpclassifyf+2
  8899  1517  0825               	movf	___fpclassifyf@u+3,w
  8900  1518  00F7               	movwf	??___fpclassifyf+3
  8901  1519  3009               	movlw	9
  8902  151A                     u3505:	
  8903  151A  35F4               	lslf	??___fpclassifyf,f
  8904  151B  0DF5               	rlf	??___fpclassifyf+1,f
  8905  151C  0DF6               	rlf	??___fpclassifyf+2,f
  8906  151D  0DF7               	rlf	??___fpclassifyf+3,f
  8907  151E  0B89               	decfsz	9,f
  8908  151F  2D1A               	goto	u3505
  8909  1520  0877               	movf	??___fpclassifyf+3,w
  8910  1521  0476               	iorwf	??___fpclassifyf+2,w
  8911  1522  0475               	iorwf	??___fpclassifyf+1,w
  8912  1523  0474               	iorwf	??___fpclassifyf,w
  8913  1524  1D03               	btfss	3,2
  8914  1525  2D28               	goto	u3510
  8915  1526  3001               	movlw	1
  8916  1527  2D29               	goto	u3520
  8917  1528                     u3510:	
  8918  1528  3000               	movlw	0
  8919  1529                     u3520:	
  8920  1529  00F8               	movwf	??___fpclassifyf+4
  8921  152A  01F9               	clrf	??___fpclassifyf+5
  8922  152B  0878               	movf	??___fpclassifyf+4,w
  8923  152C  00F0               	movwf	?___fpclassifyf
  8924  152D  0879               	movf	??___fpclassifyf+5,w
  8925  152E  00F1               	movwf	?___fpclassifyf+1
  8926  152F  0008               	return
  8927  1530                     l3041:	
  8928  1530  3004               	movlw	4
  8929  1531  00F0               	movwf	?___fpclassifyf
  8930  1532  3000               	movlw	0
  8931  1533  00F1               	movwf	?___fpclassifyf+1
  8932  1534  0008               	return
  8933  1535                     __end_of___fpclassifyf:	
  8934                           
  8935                           	psect	text17
  8936  1458                     __ptext17:	
  8937 ;; *************** function ___fltol *****************
  8938 ;; Defined at:
  8939 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  8940 ;; Parameters:    Size  Location     Type
  8941 ;;  f1              4    0[COMMON] int 
  8942 ;; Auto vars:     Size  Location     Type
  8943 ;;  exp1            1   10[COMMON] unsigned char 
  8944 ;;  sign1           1    9[COMMON] unsigned char 
  8945 ;; Return value:  Size  Location     Type
  8946 ;;                  4    0[COMMON] long 
  8947 ;; Registers used:
  8948 ;;		wreg, status,2, status,0
  8949 ;; Tracked objects:
  8950 ;;		On entry : 0/0
  8951 ;;		On exit  : 0/0
  8952 ;;		Unchanged: 0/0
  8953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8954 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8955 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8956 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8957 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8958 ;;Total ram usage:       11 bytes
  8959 ;; Hardware stack levels used:    1
  8960 ;; This function calls:
  8961 ;;		Nothing
  8962 ;; This function is called by:
  8963 ;;		_main
  8964 ;;		_efgtoa
  8965 ;; This function uses a non-reentrant model
  8966 ;;
  8967                           
  8968                           
  8969                           ;psect for function ___fltol
  8970  1458                     ___fltol:	
  8971                           
  8972                           ;incstack = 0
  8973                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8974  1458  1003               	clrc
  8975  1459  0D72               	rlf	___fltol@f1+2,w
  8976  145A  0D73               	rlf	___fltol@f1+3,w
  8977  145B  00F4               	movwf	??___fltol
  8978  145C  0874               	movf	??___fltol,w
  8979  145D  00FA               	movwf	___fltol@exp1
  8980  145E  087A               	movf	___fltol@exp1,w
  8981  145F  1D03               	btfss	3,2
  8982  1460  2C6A               	goto	l3235
  8983  1461                     l3231:	
  8984  1461  3000               	movlw	0
  8985  1462  00F3               	movwf	?___fltol+3
  8986  1463  3000               	movlw	0
  8987  1464  00F2               	movwf	?___fltol+2
  8988  1465  3000               	movlw	0
  8989  1466  00F1               	movwf	?___fltol+1
  8990  1467  3000               	movlw	0
  8991  1468  00F0               	movwf	?___fltol
  8992  1469  0008               	return
  8993  146A                     l3235:	
  8994  146A  0870               	movf	___fltol@f1,w
  8995  146B  00F4               	movwf	??___fltol
  8996  146C  0871               	movf	___fltol@f1+1,w
  8997  146D  00F5               	movwf	??___fltol+1
  8998  146E  0872               	movf	___fltol@f1+2,w
  8999  146F  00F6               	movwf	??___fltol+2
  9000  1470  0873               	movf	___fltol@f1+3,w
  9001  1471  00F7               	movwf	??___fltol+3
  9002  1472  301F               	movlw	31
  9003  1473                     u4035:	
  9004  1473  36F7               	lsrf	??___fltol+3,f
  9005  1474  0CF6               	rrf	??___fltol+2,f
  9006  1475  0CF5               	rrf	??___fltol+1,f
  9007  1476  0CF4               	rrf	??___fltol,f
  9008  1477  0B89               	decfsz	9,f
  9009  1478  2C73               	goto	u4035
  9010  1479  0874               	movf	??___fltol,w
  9011  147A  00F8               	movwf	??___fltol+4
  9012  147B  0878               	movf	??___fltol+4,w
  9013  147C  00F9               	movwf	___fltol@sign1
  9014  147D  17F2               	bsf	___fltol@f1+2,7
  9015  147E  30FF               	movlw	255
  9016  147F  05F0               	andwf	___fltol@f1,f
  9017  1480  30FF               	movlw	255
  9018  1481  05F1               	andwf	___fltol@f1+1,f
  9019  1482  30FF               	movlw	255
  9020  1483  05F2               	andwf	___fltol@f1+2,f
  9021  1484  3000               	movlw	0
  9022  1485  05F3               	andwf	___fltol@f1+3,f
  9023  1486  3096               	movlw	150
  9024  1487  02FA               	subwf	___fltol@exp1,f
  9025  1488  1FFA               	btfss	___fltol@exp1,7
  9026  1489  2C9D               	goto	l3253
  9027  148A  087A               	movf	___fltol@exp1,w
  9028  148B  3A80               	xorlw	128
  9029  148C  3E97               	addlw	151
  9030  148D  1C03               	btfss	3,0
  9031  148E  2C61               	goto	l3231
  9032  148F                     l3251:	
  9033  148F  3001               	movlw	1
  9034  1490                     u4065:	
  9035  1490  36F3               	lsrf	___fltol@f1+3,f
  9036  1491  0CF2               	rrf	___fltol@f1+2,f
  9037  1492  0CF1               	rrf	___fltol@f1+1,f
  9038  1493  0CF0               	rrf	___fltol@f1,f
  9039  1494  0B89               	decfsz	9,f
  9040  1495  2C90               	goto	u4065
  9041  1496  3001               	movlw	1
  9042  1497  00F4               	movwf	??___fltol
  9043  1498  0874               	movf	??___fltol,w
  9044  1499  07FA               	addwf	___fltol@exp1,f
  9045  149A  1903               	btfsc	3,2
  9046  149B  2CAE               	goto	l3261
  9047  149C  2C8F               	goto	l3251
  9048  149D                     l3253:	
  9049  149D  3020               	movlw	32
  9050  149E  027A               	subwf	___fltol@exp1,w
  9051  149F  1803               	btfsc	3,0
  9052  14A0  2C61               	goto	l3231
  9053  14A1                     l758:	
  9054  14A1  087A               	movf	___fltol@exp1,w
  9055  14A2  1903               	btfsc	3,2
  9056  14A3  2CAE               	goto	l3261
  9057  14A4  3001               	movlw	1
  9058  14A5                     u4095:	
  9059  14A5  35F0               	lslf	___fltol@f1,f
  9060  14A6  0DF1               	rlf	___fltol@f1+1,f
  9061  14A7  0DF2               	rlf	___fltol@f1+2,f
  9062  14A8  0DF3               	rlf	___fltol@f1+3,f
  9063  14A9  0B89               	decfsz	9,f
  9064  14AA  2CA5               	goto	u4095
  9065  14AB  3001               	movlw	1
  9066  14AC  02FA               	subwf	___fltol@exp1,f
  9067  14AD  2CA1               	goto	l758
  9068  14AE                     l3261:	
  9069  14AE  0879               	movf	___fltol@sign1,w
  9070  14AF  1903               	btfsc	3,2
  9071  14B0  0008               	return
  9072  14B1  09F0               	comf	___fltol@f1,f
  9073  14B2  09F1               	comf	___fltol@f1+1,f
  9074  14B3  09F2               	comf	___fltol@f1+2,f
  9075  14B4  09F3               	comf	___fltol@f1+3,f
  9076  14B5  0AF0               	incf	___fltol@f1,f
  9077  14B6  1903               	skipnz
  9078  14B7  0AF1               	incf	___fltol@f1+1,f
  9079  14B8  1903               	skipnz
  9080  14B9  0AF2               	incf	___fltol@f1+2,f
  9081  14BA  1903               	skipnz
  9082  14BB  0AF3               	incf	___fltol@f1+3,f
  9083  14BC  0008               	return
  9084  14BD                     __end_of___fltol:	
  9085                           
  9086                           	psect	text18
  9087  119A                     __ptext18:	
  9088 ;; *************** function ___flsub *****************
  9089 ;; Defined at:
  9090 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  9091 ;; Parameters:    Size  Location     Type
  9092 ;;  a               4   59[BANK0 ] long 
  9093 ;;  b               4   63[BANK0 ] long 
  9094 ;; Auto vars:     Size  Location     Type
  9095 ;;		None
  9096 ;; Return value:  Size  Location     Type
  9097 ;;                  4   59[BANK0 ] long 
  9098 ;; Registers used:
  9099 ;;		wreg, status,2, status,0, pclath, cstack
  9100 ;; Tracked objects:
  9101 ;;		On entry : 0/0
  9102 ;;		On exit  : 0/0
  9103 ;;		Unchanged: 0/0
  9104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9105 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9108 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9109 ;;Total ram usage:        8 bytes
  9110 ;; Hardware stack levels used:    1
  9111 ;; Hardware stack levels required when called:    1
  9112 ;; This function calls:
  9113 ;;		___fladd
  9114 ;; This function is called by:
  9115 ;;		_efgtoa
  9116 ;; This function uses a non-reentrant model
  9117 ;;
  9118                           
  9119                           
  9120                           ;psect for function ___flsub
  9121  119A                     ___flsub:	
  9122                           
  9123                           ;incstack = 0
  9124                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  9125  119A  3080               	movlw	128
  9126  119B  0020               	movlb	0	; select bank0
  9127  119C  06DE               	xorwf	___flsub@a+3,f
  9128  119D  0862               	movf	___flsub@b+3,w
  9129  119E  00CA               	movwf	___fladd@b+3
  9130  119F  0861               	movf	___flsub@b+2,w
  9131  11A0  00C9               	movwf	___fladd@b+2
  9132  11A1  0860               	movf	___flsub@b+1,w
  9133  11A2  00C8               	movwf	___fladd@b+1
  9134  11A3  085F               	movf	___flsub@b,w
  9135  11A4  00C7               	movwf	___fladd@b
  9136  11A5  085E               	movf	___flsub@a+3,w
  9137  11A6  00CE               	movwf	___fladd@a+3
  9138  11A7  085D               	movf	___flsub@a+2,w
  9139  11A8  00CD               	movwf	___fladd@a+2
  9140  11A9  085C               	movf	___flsub@a+1,w
  9141  11AA  00CC               	movwf	___fladd@a+1
  9142  11AB  085B               	movf	___flsub@a,w
  9143  11AC  00CB               	movwf	___fladd@a
  9144  11AD  3189  2186         	fcall	___fladd
  9145  11AF  0020               	movlb	0	; select bank0
  9146  11B0  084A               	movf	?___fladd+3,w
  9147  11B1  00DE               	movwf	?___flsub+3
  9148  11B2  0849               	movf	?___fladd+2,w
  9149  11B3  00DD               	movwf	?___flsub+2
  9150  11B4  0848               	movf	?___fladd+1,w
  9151  11B5  00DC               	movwf	?___flsub+1
  9152  11B6  0847               	movf	?___fladd,w
  9153  11B7  00DB               	movwf	?___flsub
  9154  11B8  0008               	return
  9155  11B9                     __end_of___flsub:	
  9156                           
  9157                           	psect	text19
  9158  0986                     __ptext19:	
  9159 ;; *************** function ___fladd *****************
  9160 ;; Defined at:
  9161 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  9162 ;; Parameters:    Size  Location     Type
  9163 ;;  b               4   39[BANK0 ] long 
  9164 ;;  a               4   43[BANK0 ] long 
  9165 ;; Auto vars:     Size  Location     Type
  9166 ;;  grs             1   58[BANK0 ] unsigned char 
  9167 ;;  bexp            1   57[BANK0 ] unsigned char 
  9168 ;;  aexp            1   56[BANK0 ] unsigned char 
  9169 ;;  signs           1   55[BANK0 ] unsigned char 
  9170 ;; Return value:  Size  Location     Type
  9171 ;;                  4   39[BANK0 ] unsigned char 
  9172 ;; Registers used:
  9173 ;;		wreg, status,2, status,0
  9174 ;; Tracked objects:
  9175 ;;		On entry : 0/0
  9176 ;;		On exit  : 0/0
  9177 ;;		Unchanged: 0/0
  9178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9179 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9180 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9181 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9182 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9183 ;;Total ram usage:       20 bytes
  9184 ;; Hardware stack levels used:    1
  9185 ;; This function calls:
  9186 ;;		Nothing
  9187 ;; This function is called by:
  9188 ;;		_main
  9189 ;;		_efgtoa
  9190 ;;		___flsub
  9191 ;; This function uses a non-reentrant model
  9192 ;;
  9193                           
  9194                           
  9195                           ;psect for function ___fladd
  9196  0986                     ___fladd:	
  9197                           
  9198                           ;incstack = 0
  9199                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  9200  0986  0020               	movlb	0	; select bank0
  9201  0987  084A               	movf	___fladd@b+3,w
  9202  0988  3980               	andlw	128
  9203  0989  00CF               	movwf	??___fladd
  9204  098A  084F               	movf	??___fladd,w
  9205  098B  00D7               	movwf	___fladd@signs
  9206  098C  354A               	lslf	___fladd@b+3,w
  9207  098D  00CF               	movwf	??___fladd
  9208  098E  084F               	movf	??___fladd,w
  9209  098F  00D9               	movwf	___fladd@bexp
  9210  0990  1BC9               	btfsc	___fladd@b+2,7
  9211  0991  1459               	bsf	___fladd@bexp,0
  9212  0992  0859               	movf	___fladd@bexp,w
  9213  0993  1903               	btfsc	3,2
  9214  0994  29A3               	goto	l2811
  9215  0995  0A59               	incf	___fladd@bexp,w
  9216  0996  1D03               	btfss	3,2
  9217  0997  29A0               	goto	l2807
  9218  0998  3000               	movlw	0
  9219  0999  00CA               	movwf	___fladd@b+3
  9220  099A  3000               	movlw	0
  9221  099B  00C9               	movwf	___fladd@b+2
  9222  099C  3000               	movlw	0
  9223  099D  00C8               	movwf	___fladd@b+1
  9224  099E  3000               	movlw	0
  9225  099F  00C7               	movwf	___fladd@b
  9226  09A0                     l2807:	
  9227  09A0  17C9               	bsf	___fladd@b+2,7
  9228  09A1  01CA               	clrf	___fladd@b+3
  9229  09A2  29AB               	goto	l2813
  9230  09A3                     l2811:	
  9231  09A3  3000               	movlw	0
  9232  09A4  00CA               	movwf	___fladd@b+3
  9233  09A5  3000               	movlw	0
  9234  09A6  00C9               	movwf	___fladd@b+2
  9235  09A7  3000               	movlw	0
  9236  09A8  00C8               	movwf	___fladd@b+1
  9237  09A9  3000               	movlw	0
  9238  09AA  00C7               	movwf	___fladd@b
  9239  09AB                     l2813:	
  9240  09AB  084E               	movf	___fladd@a+3,w
  9241  09AC  3980               	andlw	128
  9242  09AD  00CF               	movwf	??___fladd
  9243  09AE  084F               	movf	??___fladd,w
  9244  09AF  00D8               	movwf	___fladd@aexp
  9245  09B0  0858               	movf	___fladd@aexp,w
  9246  09B1  0657               	xorwf	___fladd@signs,w
  9247  09B2  1D03               	btfss	3,2
  9248  09B3  1757               	bsf	___fladd@signs,6
  9249  09B4  354E               	lslf	___fladd@a+3,w
  9250  09B5  00CF               	movwf	??___fladd
  9251  09B6  084F               	movf	??___fladd,w
  9252  09B7  00D8               	movwf	___fladd@aexp
  9253  09B8  1BCD               	btfsc	___fladd@a+2,7
  9254  09B9  1458               	bsf	___fladd@aexp,0
  9255  09BA  0858               	movf	___fladd@aexp,w
  9256  09BB  1903               	btfsc	3,2
  9257  09BC  29CB               	goto	l2835
  9258  09BD  0A58               	incf	___fladd@aexp,w
  9259  09BE  1D03               	btfss	3,2
  9260  09BF  29C8               	goto	l2831
  9261  09C0  3000               	movlw	0
  9262  09C1  00CE               	movwf	___fladd@a+3
  9263  09C2  3000               	movlw	0
  9264  09C3  00CD               	movwf	___fladd@a+2
  9265  09C4  3000               	movlw	0
  9266  09C5  00CC               	movwf	___fladd@a+1
  9267  09C6  3000               	movlw	0
  9268  09C7  00CB               	movwf	___fladd@a
  9269  09C8                     l2831:	
  9270  09C8  17CD               	bsf	___fladd@a+2,7
  9271  09C9  01CE               	clrf	___fladd@a+3
  9272  09CA  29D3               	goto	l858
  9273  09CB                     l2835:	
  9274  09CB  3000               	movlw	0
  9275  09CC  00CE               	movwf	___fladd@a+3
  9276  09CD  3000               	movlw	0
  9277  09CE  00CD               	movwf	___fladd@a+2
  9278  09CF  3000               	movlw	0
  9279  09D0  00CC               	movwf	___fladd@a+1
  9280  09D1  3000               	movlw	0
  9281  09D2  00CB               	movwf	___fladd@a
  9282  09D3                     l858:	
  9283  09D3  0859               	movf	___fladd@bexp,w
  9284  09D4  0258               	subwf	___fladd@aexp,w
  9285  09D5  1803               	skipnc
  9286  09D6  2A19               	goto	l2871
  9287  09D7  1F57               	btfss	___fladd@signs,6
  9288  09D8  29DD               	goto	l2841
  9289  09D9  3080               	movlw	128
  9290  09DA  00CF               	movwf	??___fladd
  9291  09DB  084F               	movf	??___fladd,w
  9292  09DC  06D7               	xorwf	___fladd@signs,f
  9293  09DD                     l2841:	
  9294  09DD  0859               	movf	___fladd@bexp,w
  9295  09DE  00CF               	movwf	??___fladd
  9296  09DF  084F               	movf	??___fladd,w
  9297  09E0  00DA               	movwf	___fladd@grs
  9298  09E1  0858               	movf	___fladd@aexp,w
  9299  09E2  00CF               	movwf	??___fladd
  9300  09E3  084F               	movf	??___fladd,w
  9301  09E4  00D9               	movwf	___fladd@bexp
  9302  09E5  085A               	movf	___fladd@grs,w
  9303  09E6  00CF               	movwf	??___fladd
  9304  09E7  084F               	movf	??___fladd,w
  9305  09E8  00D8               	movwf	___fladd@aexp
  9306  09E9  0847               	movf	___fladd@b,w
  9307  09EA  00CF               	movwf	??___fladd
  9308  09EB  084F               	movf	??___fladd,w
  9309  09EC  00DA               	movwf	___fladd@grs
  9310  09ED  084B               	movf	___fladd@a,w
  9311  09EE  00CF               	movwf	??___fladd
  9312  09EF  084F               	movf	??___fladd,w
  9313  09F0  00C7               	movwf	___fladd@b
  9314  09F1  085A               	movf	___fladd@grs,w
  9315  09F2  00CF               	movwf	??___fladd
  9316  09F3  084F               	movf	??___fladd,w
  9317  09F4  00CB               	movwf	___fladd@a
  9318  09F5  0848               	movf	___fladd@b+1,w
  9319  09F6  00CF               	movwf	??___fladd
  9320  09F7  084F               	movf	??___fladd,w
  9321  09F8  00DA               	movwf	___fladd@grs
  9322  09F9  084C               	movf	___fladd@a+1,w
  9323  09FA  00CF               	movwf	??___fladd
  9324  09FB  084F               	movf	??___fladd,w
  9325  09FC  00C8               	movwf	___fladd@b+1
  9326  09FD  085A               	movf	___fladd@grs,w
  9327  09FE  00CF               	movwf	??___fladd
  9328  09FF  084F               	movf	??___fladd,w
  9329  0A00  00CC               	movwf	___fladd@a+1
  9330  0A01  0849               	movf	___fladd@b+2,w
  9331  0A02  00CF               	movwf	??___fladd
  9332  0A03  084F               	movf	??___fladd,w
  9333  0A04  00DA               	movwf	___fladd@grs
  9334  0A05  084D               	movf	___fladd@a+2,w
  9335  0A06  00CF               	movwf	??___fladd
  9336  0A07  084F               	movf	??___fladd,w
  9337  0A08  00C9               	movwf	___fladd@b+2
  9338  0A09  085A               	movf	___fladd@grs,w
  9339  0A0A  00CF               	movwf	??___fladd
  9340  0A0B  084F               	movf	??___fladd,w
  9341  0A0C  00CD               	movwf	___fladd@a+2
  9342  0A0D  084A               	movf	___fladd@b+3,w
  9343  0A0E  00CF               	movwf	??___fladd
  9344  0A0F  084F               	movf	??___fladd,w
  9345  0A10  00DA               	movwf	___fladd@grs
  9346  0A11  084E               	movf	___fladd@a+3,w
  9347  0A12  00CF               	movwf	??___fladd
  9348  0A13  084F               	movf	??___fladd,w
  9349  0A14  00CA               	movwf	___fladd@b+3
  9350  0A15  085A               	movf	___fladd@grs,w
  9351  0A16  00CF               	movwf	??___fladd
  9352  0A17  084F               	movf	??___fladd,w
  9353  0A18  00CE               	movwf	___fladd@a+3
  9354  0A19                     l2871:	
  9355  0A19  01DA               	clrf	___fladd@grs
  9356  0A1A  0858               	movf	___fladd@aexp,w
  9357  0A1B  00CF               	movwf	??___fladd
  9358  0A1C  01D0               	clrf	??___fladd+1
  9359  0A1D  0850               	movf	??___fladd+1,w
  9360  0A1E  00D2               	movwf	??___fladd+3
  9361  0A1F  0859               	movf	___fladd@bexp,w
  9362  0A20  024F               	subwf	??___fladd,w
  9363  0A21  00D1               	movwf	??___fladd+2
  9364  0A22  1C03               	skipc
  9365  0A23  03D2               	decf	??___fladd+3,f
  9366  0A24  0852               	movf	??___fladd+3,w
  9367  0A25  3A80               	xorlw	128
  9368  0A26  00D3               	movwf	??___fladd+4
  9369  0A27  3080               	movlw	128
  9370  0A28  0253               	subwf	??___fladd+4,w
  9371  0A29  1D03               	skipz
  9372  0A2A  2A2D               	goto	u3045
  9373  0A2B  301A               	movlw	26
  9374  0A2C  0251               	subwf	??___fladd+2,w
  9375  0A2D                     u3045:	
  9376  0A2D  1C03               	skipc
  9377  0A2E  2A61               	goto	l2889
  9378  0A2F  0020               	movlb	0	; select bank0
  9379  0A30  084A               	movf	___fladd@b+3,w
  9380  0A31  0449               	iorwf	___fladd@b+2,w
  9381  0A32  0448               	iorwf	___fladd@b+1,w
  9382  0A33  0447               	iorwf	___fladd@b,w
  9383  0A34  1903               	btfsc	3,2
  9384  0A35  2A38               	goto	u3050
  9385  0A36  3001               	movlw	1
  9386  0A37  2A39               	goto	u3060
  9387  0A38                     u3050:	
  9388  0A38  3000               	movlw	0
  9389  0A39                     u3060:	
  9390  0A39  00CF               	movwf	??___fladd
  9391  0A3A  084F               	movf	??___fladd,w
  9392  0A3B  00DA               	movwf	___fladd@grs
  9393  0A3C  3000               	movlw	0
  9394  0A3D  00CA               	movwf	___fladd@b+3
  9395  0A3E  3000               	movlw	0
  9396  0A3F  00C9               	movwf	___fladd@b+2
  9397  0A40  3000               	movlw	0
  9398  0A41  00C8               	movwf	___fladd@b+1
  9399  0A42  3000               	movlw	0
  9400  0A43  00C7               	movwf	___fladd@b
  9401  0A44  0858               	movf	___fladd@aexp,w
  9402  0A45  00CF               	movwf	??___fladd
  9403  0A46  084F               	movf	??___fladd,w
  9404  0A47  00D9               	movwf	___fladd@bexp
  9405  0A48  2A66               	goto	l862
  9406  0A49                     l864:	
  9407  0A49  1C5A               	btfss	___fladd@grs,0
  9408  0A4A  2A51               	goto	l2879
  9409  0A4B  365A               	lsrf	___fladd@grs,w
  9410  0A4C  3801               	iorlw	1
  9411  0A4D  00CF               	movwf	??___fladd
  9412  0A4E  084F               	movf	??___fladd,w
  9413  0A4F  00DA               	movwf	___fladd@grs
  9414  0A50  2A53               	goto	l2881
  9415  0A51                     l2879:	
  9416  0A51  1003               	clrc
  9417  0A52  0CDA               	rrf	___fladd@grs,f
  9418  0A53                     l2881:	
  9419  0A53  1847               	btfsc	___fladd@b,0
  9420  0A54  17DA               	bsf	___fladd@grs,7
  9421  0A55  3001               	movlw	1
  9422  0A56  00CF               	movwf	??___fladd
  9423  0A57                     u3095:	
  9424  0A57  37CA               	asrf	___fladd@b+3,f
  9425  0A58  0CC9               	rrf	___fladd@b+2,f
  9426  0A59  0CC8               	rrf	___fladd@b+1,f
  9427  0A5A  0CC7               	rrf	___fladd@b,f
  9428  0A5B  0BCF               	decfsz	??___fladd& (0+127),f
  9429  0A5C  2A57               	goto	u3095
  9430  0A5D  3001               	movlw	1
  9431  0A5E  00CF               	movwf	??___fladd
  9432  0A5F  084F               	movf	??___fladd,w
  9433  0A60  07D9               	addwf	___fladd@bexp,f
  9434  0A61                     l2889:	
  9435  0A61  0020               	movlb	0	; select bank0
  9436  0A62  0858               	movf	___fladd@aexp,w
  9437  0A63  0259               	subwf	___fladd@bexp,w
  9438  0A64  1C03               	skipc
  9439  0A65  2A49               	goto	l864
  9440  0A66                     l862:	
  9441  0A66  1B57               	btfsc	___fladd@signs,6
  9442  0A67  2A97               	goto	l2915
  9443  0A68  0859               	movf	___fladd@bexp,w
  9444  0A69  1D03               	btfss	3,2
  9445  0A6A  2A74               	goto	l2897
  9446  0A6B  3000               	movlw	0
  9447  0A6C  00CA               	movwf	?___fladd+3
  9448  0A6D  3000               	movlw	0
  9449  0A6E  00C9               	movwf	?___fladd+2
  9450  0A6F  3000               	movlw	0
  9451  0A70  00C8               	movwf	?___fladd+1
  9452  0A71  3000               	movlw	0
  9453  0A72  00C7               	movwf	?___fladd
  9454  0A73  0008               	return
  9455  0A74                     l2897:	
  9456  0A74  084B               	movf	___fladd@a,w
  9457  0A75  07C7               	addwf	___fladd@b,f
  9458  0A76  084C               	movf	___fladd@a+1,w
  9459  0A77  3DC8               	addwfc	___fladd@b+1,f
  9460  0A78  084D               	movf	___fladd@a+2,w
  9461  0A79  3DC9               	addwfc	___fladd@b+2,f
  9462  0A7A  084E               	movf	___fladd@a+3,w
  9463  0A7B  3DCA               	addwfc	___fladd@b+3,f
  9464  0A7C  1C4A               	btfss	___fladd@b+3,0
  9465  0A7D  2B11               	goto	l2949
  9466  0A7E  1C5A               	btfss	___fladd@grs,0
  9467  0A7F  2A86               	goto	l2905
  9468  0A80  365A               	lsrf	___fladd@grs,w
  9469  0A81  3801               	iorlw	1
  9470  0A82  00CF               	movwf	??___fladd
  9471  0A83  084F               	movf	??___fladd,w
  9472  0A84  00DA               	movwf	___fladd@grs
  9473  0A85  2A88               	goto	l2907
  9474  0A86                     l2905:	
  9475  0A86  1003               	clrc
  9476  0A87  0CDA               	rrf	___fladd@grs,f
  9477  0A88                     l2907:	
  9478  0A88  1847               	btfsc	___fladd@b,0
  9479  0A89  17DA               	bsf	___fladd@grs,7
  9480  0A8A  3001               	movlw	1
  9481  0A8B  00CF               	movwf	??___fladd
  9482  0A8C                     u3165:	
  9483  0A8C  37CA               	asrf	___fladd@b+3,f
  9484  0A8D  0CC9               	rrf	___fladd@b+2,f
  9485  0A8E  0CC8               	rrf	___fladd@b+1,f
  9486  0A8F  0CC7               	rrf	___fladd@b,f
  9487  0A90  0BCF               	decfsz	??___fladd& (0+127),f
  9488  0A91  2A8C               	goto	u3165
  9489  0A92  3001               	movlw	1
  9490  0A93  00CF               	movwf	??___fladd
  9491  0A94  084F               	movf	??___fladd,w
  9492  0A95  07D9               	addwf	___fladd@bexp,f
  9493  0A96  2B11               	goto	l2949
  9494  0A97                     l2915:	
  9495  0A97  084A               	movf	___fladd@b+3,w
  9496  0A98  3A80               	xorlw	128
  9497  0A99  00CF               	movwf	??___fladd
  9498  0A9A  084E               	movf	___fladd@a+3,w
  9499  0A9B  3A80               	xorlw	128
  9500  0A9C  024F               	subwf	??___fladd,w
  9501  0A9D  1D03               	skipz
  9502  0A9E  2AA9               	goto	u3173
  9503  0A9F  084D               	movf	___fladd@a+2,w
  9504  0AA0  0249               	subwf	___fladd@b+2,w
  9505  0AA1  1D03               	skipz
  9506  0AA2  2AA9               	goto	u3173
  9507  0AA3  084C               	movf	___fladd@a+1,w
  9508  0AA4  0248               	subwf	___fladd@b+1,w
  9509  0AA5  1D03               	skipz
  9510  0AA6  2AA9               	goto	u3173
  9511  0AA7  084B               	movf	___fladd@a,w
  9512  0AA8  0247               	subwf	___fladd@b,w
  9513  0AA9                     u3173:	
  9514  0AA9  1803               	skipnc
  9515  0AAA  2AE1               	goto	l2925
  9516  0AAB  30FF               	movlw	255
  9517  0AAC  00CF               	movwf	??___fladd
  9518  0AAD  30FF               	movlw	255
  9519  0AAE  00D0               	movwf	??___fladd+1
  9520  0AAF  30FF               	movlw	255
  9521  0AB0  00D1               	movwf	??___fladd+2
  9522  0AB1  30FF               	movlw	255
  9523  0AB2  00D2               	movwf	??___fladd+3
  9524  0AB3  0847               	movf	___fladd@b,w
  9525  0AB4  024B               	subwf	___fladd@a,w
  9526  0AB5  00D3               	movwf	??___fladd+4
  9527  0AB6  0848               	movf	___fladd@b+1,w
  9528  0AB7  3B4C               	subwfb	___fladd@a+1,w
  9529  0AB8  00D4               	movwf	??___fladd+5
  9530  0AB9  0849               	movf	___fladd@b+2,w
  9531  0ABA  3B4D               	subwfb	___fladd@a+2,w
  9532  0ABB  00D5               	movwf	??___fladd+6
  9533  0ABC  084A               	movf	___fladd@b+3,w
  9534  0ABD  3B4E               	subwfb	___fladd@a+3,w
  9535  0ABE  00D6               	movwf	??___fladd+7
  9536  0ABF  0853               	movf	??___fladd+4,w
  9537  0AC0  07CF               	addwf	??___fladd,f
  9538  0AC1  0854               	movf	??___fladd+5,w
  9539  0AC2  3DD0               	addwfc	??___fladd+1,f
  9540  0AC3  0855               	movf	??___fladd+6,w
  9541  0AC4  3DD1               	addwfc	??___fladd+2,f
  9542  0AC5  0856               	movf	??___fladd+7,w
  9543  0AC6  3DD2               	addwfc	??___fladd+3,f
  9544  0AC7  0852               	movf	??___fladd+3,w
  9545  0AC8  00CA               	movwf	___fladd@b+3
  9546  0AC9  0851               	movf	??___fladd+2,w
  9547  0ACA  00C9               	movwf	___fladd@b+2
  9548  0ACB  0850               	movf	??___fladd+1,w
  9549  0ACC  00C8               	movwf	___fladd@b+1
  9550  0ACD  084F               	movf	??___fladd,w
  9551  0ACE  00C7               	movwf	___fladd@b
  9552  0ACF  3080               	movlw	128
  9553  0AD0  00CF               	movwf	??___fladd
  9554  0AD1  084F               	movf	??___fladd,w
  9555  0AD2  06D7               	xorwf	___fladd@signs,f
  9556  0AD3  09DA               	comf	___fladd@grs,f
  9557  0AD4  0ADA               	incf	___fladd@grs,f
  9558  0AD5  085A               	movf	___fladd@grs,w
  9559  0AD6  1D03               	btfss	3,2
  9560  0AD7  2AE9               	goto	l879
  9561  0AD8  3001               	movlw	1
  9562  0AD9  07C7               	addwf	___fladd@b,f
  9563  0ADA  3000               	movlw	0
  9564  0ADB  3DC8               	addwfc	___fladd@b+1,f
  9565  0ADC  3000               	movlw	0
  9566  0ADD  3DC9               	addwfc	___fladd@b+2,f
  9567  0ADE  3000               	movlw	0
  9568  0ADF  3DCA               	addwfc	___fladd@b+3,f
  9569  0AE0  2AE9               	goto	l879
  9570  0AE1                     l2925:	
  9571  0AE1  084B               	movf	___fladd@a,w
  9572  0AE2  02C7               	subwf	___fladd@b,f
  9573  0AE3  084C               	movf	___fladd@a+1,w
  9574  0AE4  3BC8               	subwfb	___fladd@b+1,f
  9575  0AE5  084D               	movf	___fladd@a+2,w
  9576  0AE6  3BC9               	subwfb	___fladd@b+2,f
  9577  0AE7  084E               	movf	___fladd@a+3,w
  9578  0AE8  3BCA               	subwfb	___fladd@b+3,f
  9579  0AE9                     l879:	
  9580  0AE9  084A               	movf	___fladd@b+3,w
  9581  0AEA  0449               	iorwf	___fladd@b+2,w
  9582  0AEB  0448               	iorwf	___fladd@b+1,w
  9583  0AEC  0447               	iorwf	___fladd@b,w
  9584  0AED  1D03               	skipz
  9585  0AEE  2B0F               	goto	l2947
  9586  0AEF  085A               	movf	___fladd@grs,w
  9587  0AF0  1D03               	btfss	3,2
  9588  0AF1  2B0F               	goto	l2947
  9589  0AF2  3000               	movlw	0
  9590  0AF3  00CA               	movwf	?___fladd+3
  9591  0AF4  3000               	movlw	0
  9592  0AF5  00C9               	movwf	?___fladd+2
  9593  0AF6  3000               	movlw	0
  9594  0AF7  00C8               	movwf	?___fladd+1
  9595  0AF8  3000               	movlw	0
  9596  0AF9  00C7               	movwf	?___fladd
  9597  0AFA  0008               	return
  9598  0AFB                     l2933:	
  9599  0AFB  3001               	movlw	1
  9600  0AFC                     u3215:	
  9601  0AFC  35C7               	lslf	___fladd@b,f
  9602  0AFD  0DC8               	rlf	___fladd@b+1,f
  9603  0AFE  0DC9               	rlf	___fladd@b+2,f
  9604  0AFF  0DCA               	rlf	___fladd@b+3,f
  9605  0B00  0B89               	decfsz	9,f
  9606  0B01  2AFC               	goto	u3215
  9607  0B02  1BDA               	btfsc	___fladd@grs,7
  9608  0B03  1447               	bsf	___fladd@b,0
  9609  0B04  1C5A               	btfss	___fladd@grs,0
  9610  0B05  2B08               	goto	l2941
  9611  0B06  1403               	setc
  9612  0B07  2B09               	goto	L11
  9613  0B08                     l2941:	
  9614  0B08  1003               	clrc
  9615  0B09                     L11:	
  9616  0B09  0DDA               	rlf	___fladd@grs,f
  9617  0B0A  0859               	movf	___fladd@bexp,w
  9618  0B0B  1903               	btfsc	3,2
  9619  0B0C  2B0F               	goto	l2947
  9620  0B0D  3001               	movlw	1
  9621  0B0E  02D9               	subwf	___fladd@bexp,f
  9622  0B0F                     l2947:	
  9623  0B0F  1FC9               	btfss	___fladd@b+2,7
  9624  0B10  2AFB               	goto	l2933
  9625  0B11                     l2949:	
  9626  0B11  01D8               	clrf	___fladd@aexp
  9627  0B12  1FDA               	btfss	___fladd@grs,7
  9628  0B13  2B1C               	goto	l2959
  9629  0B14  085A               	movf	___fladd@grs,w
  9630  0B15  397F               	andlw	127
  9631  0B16  1903               	btfsc	3,2
  9632  0B17  1847               	btfsc	___fladd@b,0
  9633  0B18  2B1A               	goto	l2955
  9634  0B19  2B1C               	goto	l2959
  9635  0B1A                     l2955:	
  9636  0B1A  01D8               	clrf	___fladd@aexp
  9637  0B1B  0AD8               	incf	___fladd@aexp,f
  9638  0B1C                     l2959:	
  9639  0B1C  0858               	movf	___fladd@aexp,w
  9640  0B1D  1903               	btfsc	3,2
  9641  0B1E  2B48               	goto	l892
  9642  0B1F  3001               	movlw	1
  9643  0B20  07C7               	addwf	___fladd@b,f
  9644  0B21  3000               	movlw	0
  9645  0B22  3DC8               	addwfc	___fladd@b+1,f
  9646  0B23  3000               	movlw	0
  9647  0B24  3DC9               	addwfc	___fladd@b+2,f
  9648  0B25  3000               	movlw	0
  9649  0B26  3DCA               	addwfc	___fladd@b+3,f
  9650  0B27  1C4A               	btfss	___fladd@b+3,0
  9651  0B28  2B48               	goto	l892
  9652  0B29  0847               	movf	___fladd@b,w
  9653  0B2A  00CF               	movwf	??___fladd
  9654  0B2B  0848               	movf	___fladd@b+1,w
  9655  0B2C  00D0               	movwf	??___fladd+1
  9656  0B2D  0849               	movf	___fladd@b+2,w
  9657  0B2E  00D1               	movwf	??___fladd+2
  9658  0B2F  084A               	movf	___fladd@b+3,w
  9659  0B30  00D2               	movwf	??___fladd+3
  9660  0B31  3001               	movlw	1
  9661  0B32  00D3               	movwf	??___fladd+4
  9662  0B33                     u3315:	
  9663  0B33  37D2               	asrf	??___fladd+3,f
  9664  0B34  0CD1               	rrf	??___fladd+2,f
  9665  0B35  0CD0               	rrf	??___fladd+1,f
  9666  0B36  0CCF               	rrf	??___fladd,f
  9667  0B37  0BD3               	decfsz	??___fladd+4,f
  9668  0B38  2B33               	goto	u3315
  9669  0B39  0852               	movf	??___fladd+3,w
  9670  0B3A  00CA               	movwf	___fladd@b+3
  9671  0B3B  0851               	movf	??___fladd+2,w
  9672  0B3C  00C9               	movwf	___fladd@b+2
  9673  0B3D  0850               	movf	??___fladd+1,w
  9674  0B3E  00C8               	movwf	___fladd@b+1
  9675  0B3F  084F               	movf	??___fladd,w
  9676  0B40  00C7               	movwf	___fladd@b
  9677  0B41  0A59               	incf	___fladd@bexp,w
  9678  0B42  1903               	btfsc	3,2
  9679  0B43  2B48               	goto	l892
  9680  0B44  3001               	movlw	1
  9681  0B45  00CF               	movwf	??___fladd
  9682  0B46  084F               	movf	??___fladd,w
  9683  0B47  07D9               	addwf	___fladd@bexp,f
  9684  0B48                     l892:	
  9685  0B48  0A59               	incf	___fladd@bexp,w
  9686  0B49  1D03               	btfss	3,2
  9687  0B4A  0859               	movf	___fladd@bexp,w
  9688  0B4B  1D03               	btfss	3,2
  9689  0B4C  2B58               	goto	l2977
  9690  0B4D  3000               	movlw	0
  9691  0B4E  00CA               	movwf	___fladd@b+3
  9692  0B4F  3000               	movlw	0
  9693  0B50  00C9               	movwf	___fladd@b+2
  9694  0B51  3000               	movlw	0
  9695  0B52  00C8               	movwf	___fladd@b+1
  9696  0B53  3000               	movlw	0
  9697  0B54  00C7               	movwf	___fladd@b
  9698  0B55  0859               	movf	___fladd@bexp,w
  9699  0B56  1903               	btfsc	3,2
  9700  0B57  01D7               	clrf	___fladd@signs
  9701  0B58                     l2977:	
  9702  0B58  1C59               	btfss	___fladd@bexp,0
  9703  0B59  2B5C               	goto	l2981
  9704  0B5A  17C9               	bsf	___fladd@b+2,7
  9705  0B5B  2B60               	goto	l900
  9706  0B5C                     l2981:	
  9707  0B5C  307F               	movlw	127
  9708  0B5D  00CF               	movwf	??___fladd
  9709  0B5E  084F               	movf	??___fladd,w
  9710  0B5F  05C9               	andwf	___fladd@b+2,f
  9711  0B60                     l900:	
  9712  0B60  3659               	lsrf	___fladd@bexp,w
  9713  0B61  00CF               	movwf	??___fladd
  9714  0B62  084F               	movf	??___fladd,w
  9715  0B63  00CA               	movwf	___fladd@b+3
  9716  0B64  1FD7               	btfss	___fladd@signs,7
  9717  0B65  0008               	return
  9718  0B66  17CA               	bsf	___fladd@b+3,7
  9719  0B67  0008               	return
  9720  0B68                     __end_of___fladd:	
  9721                           
  9722                           	psect	text20
  9723  10B1                     __ptext20:	
  9724 ;; *************** function ___flneg *****************
  9725 ;; Defined at:
  9726 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
  9727 ;; Parameters:    Size  Location     Type
  9728 ;;  f1              4    0[COMMON] unsigned char 
  9729 ;; Auto vars:     Size  Location     Type
  9730 ;;		None
  9731 ;; Return value:  Size  Location     Type
  9732 ;;                  4    0[COMMON] unsigned char 
  9733 ;; Registers used:
  9734 ;;		wreg
  9735 ;; Tracked objects:
  9736 ;;		On entry : 0/0
  9737 ;;		On exit  : 0/0
  9738 ;;		Unchanged: 0/0
  9739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9740 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9743 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9744 ;;Total ram usage:        4 bytes
  9745 ;; Hardware stack levels used:    1
  9746 ;; This function calls:
  9747 ;;		Nothing
  9748 ;; This function is called by:
  9749 ;;		_efgtoa
  9750 ;; This function uses a non-reentrant model
  9751 ;;
  9752                           
  9753                           
  9754                           ;psect for function ___flneg
  9755  10B1                     ___flneg:	
  9756                           
  9757                           ;incstack = 0
  9758                           ; Regs used in ___flneg: [wreg]
  9759  10B1  0873               	movf	___flneg@f1+3,w
  9760  10B2  0472               	iorwf	___flneg@f1+2,w
  9761  10B3  0471               	iorwf	___flneg@f1+1,w
  9762  10B4  0470               	iorwf	___flneg@f1,w
  9763  10B5  1903               	skipnz
  9764  10B6  0008               	return
  9765  10B7  3080               	movlw	128
  9766  10B8  06F3               	xorwf	___flneg@f1+3,f
  9767  10B9  0008               	return
  9768  10BA                     __end_of___flneg:	
  9769                           
  9770                           	psect	text21
  9771  0B68                     __ptext21:	
  9772 ;; *************** function ___flmul *****************
  9773 ;; Defined at:
  9774 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  9775 ;; Parameters:    Size  Location     Type
  9776 ;;  b               4   13[BANK0 ] unsigned char 
  9777 ;;  a               4   17[BANK0 ] unsigned char 
  9778 ;; Auto vars:     Size  Location     Type
  9779 ;;  prod            4   33[BANK0 ] struct .
  9780 ;;  grs             4   27[BANK0 ] unsigned long 
  9781 ;;  temp            2   37[BANK0 ] struct .
  9782 ;;  bexp            1   32[BANK0 ] unsigned char 
  9783 ;;  aexp            1   31[BANK0 ] unsigned char 
  9784 ;;  sign            1   26[BANK0 ] unsigned char 
  9785 ;; Return value:  Size  Location     Type
  9786 ;;                  4   13[BANK0 ] unsigned char 
  9787 ;; Registers used:
  9788 ;;		wreg, status,2, status,0, pclath, cstack
  9789 ;; Tracked objects:
  9790 ;;		On entry : 0/0
  9791 ;;		On exit  : 0/0
  9792 ;;		Unchanged: 0/0
  9793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9794 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9795 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9796 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9797 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9798 ;;Total ram usage:       26 bytes
  9799 ;; Hardware stack levels used:    1
  9800 ;; Hardware stack levels required when called:    1
  9801 ;; This function calls:
  9802 ;;		__Umul8_16
  9803 ;; This function is called by:
  9804 ;;		_main
  9805 ;;		_efgtoa
  9806 ;; This function uses a non-reentrant model
  9807 ;;
  9808                           
  9809                           
  9810                           ;psect for function ___flmul
  9811  0B68                     ___flmul:	
  9812                           
  9813                           ;incstack = 0
  9814                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  9815  0B68  0020               	movlb	0	; select bank0
  9816  0B69  0830               	movf	___flmul@b+3,w
  9817  0B6A  3980               	andlw	128
  9818  0B6B  00B5               	movwf	??___flmul
  9819  0B6C  0835               	movf	??___flmul,w
  9820  0B6D  00BA               	movwf	___flmul@sign
  9821  0B6E  3530               	lslf	___flmul@b+3,w
  9822  0B6F  00B5               	movwf	??___flmul
  9823  0B70  0835               	movf	??___flmul,w
  9824  0B71  00C0               	movwf	___flmul@bexp
  9825  0B72  1BAF               	btfsc	___flmul@b+2,7
  9826  0B73  1440               	bsf	___flmul@bexp,0
  9827  0B74  0840               	movf	___flmul@bexp,w
  9828  0B75  1903               	btfsc	3,2
  9829  0B76  2B84               	goto	l3427
  9830  0B77  0A40               	incf	___flmul@bexp,w
  9831  0B78  1D03               	btfss	3,2
  9832  0B79  2B82               	goto	l3425
  9833  0B7A  3000               	movlw	0
  9834  0B7B  00B0               	movwf	___flmul@b+3
  9835  0B7C  3000               	movlw	0
  9836  0B7D  00AF               	movwf	___flmul@b+2
  9837  0B7E  3000               	movlw	0
  9838  0B7F  00AE               	movwf	___flmul@b+1
  9839  0B80  3000               	movlw	0
  9840  0B81  00AD               	movwf	___flmul@b
  9841  0B82                     l3425:	
  9842  0B82  17AF               	bsf	___flmul@b+2,7
  9843  0B83  2B8C               	goto	l3429
  9844  0B84                     l3427:	
  9845  0B84  3000               	movlw	0
  9846  0B85  00B0               	movwf	___flmul@b+3
  9847  0B86  3000               	movlw	0
  9848  0B87  00AF               	movwf	___flmul@b+2
  9849  0B88  3000               	movlw	0
  9850  0B89  00AE               	movwf	___flmul@b+1
  9851  0B8A  3000               	movlw	0
  9852  0B8B  00AD               	movwf	___flmul@b
  9853  0B8C                     l3429:	
  9854  0B8C  0834               	movf	___flmul@a+3,w
  9855  0B8D  3980               	andlw	128
  9856  0B8E  00B5               	movwf	??___flmul
  9857  0B8F  0835               	movf	??___flmul,w
  9858  0B90  06BA               	xorwf	___flmul@sign,f
  9859  0B91  3534               	lslf	___flmul@a+3,w
  9860  0B92  00B5               	movwf	??___flmul
  9861  0B93  0835               	movf	??___flmul,w
  9862  0B94  00BF               	movwf	___flmul@aexp
  9863  0B95  1BB3               	btfsc	___flmul@a+2,7
  9864  0B96  143F               	bsf	___flmul@aexp,0
  9865  0B97  083F               	movf	___flmul@aexp,w
  9866  0B98  1903               	btfsc	3,2
  9867  0B99  2BA7               	goto	l3445
  9868  0B9A  0A3F               	incf	___flmul@aexp,w
  9869  0B9B  1D03               	btfss	3,2
  9870  0B9C  2BA5               	goto	l3443
  9871  0B9D  3000               	movlw	0
  9872  0B9E  00B4               	movwf	___flmul@a+3
  9873  0B9F  3000               	movlw	0
  9874  0BA0  00B3               	movwf	___flmul@a+2
  9875  0BA1  3000               	movlw	0
  9876  0BA2  00B2               	movwf	___flmul@a+1
  9877  0BA3  3000               	movlw	0
  9878  0BA4  00B1               	movwf	___flmul@a
  9879  0BA5                     l3443:	
  9880  0BA5  17B3               	bsf	___flmul@a+2,7
  9881  0BA6  2BAF               	goto	l3447
  9882  0BA7                     l3445:	
  9883  0BA7  3000               	movlw	0
  9884  0BA8  00B4               	movwf	___flmul@a+3
  9885  0BA9  3000               	movlw	0
  9886  0BAA  00B3               	movwf	___flmul@a+2
  9887  0BAB  3000               	movlw	0
  9888  0BAC  00B2               	movwf	___flmul@a+1
  9889  0BAD  3000               	movlw	0
  9890  0BAE  00B1               	movwf	___flmul@a
  9891  0BAF                     l3447:	
  9892  0BAF  083F               	movf	___flmul@aexp,w
  9893  0BB0  1D03               	btfss	3,2
  9894  0BB1  0840               	movf	___flmul@bexp,w
  9895  0BB2  1D03               	btfss	3,2
  9896  0BB3  2BBD               	goto	l3455
  9897  0BB4  3000               	movlw	0
  9898  0BB5  00B0               	movwf	?___flmul+3
  9899  0BB6  3000               	movlw	0
  9900  0BB7  00AF               	movwf	?___flmul+2
  9901  0BB8  3000               	movlw	0
  9902  0BB9  00AE               	movwf	?___flmul+1
  9903  0BBA  3000               	movlw	0
  9904  0BBB  00AD               	movwf	?___flmul
  9905  0BBC  0008               	return
  9906  0BBD                     l3455:	
  9907  0BBD  082D               	movf	___flmul@b,w
  9908  0BBE  00B5               	movwf	??___flmul
  9909  0BBF  0835               	movf	??___flmul,w
  9910  0BC0  00F0               	movwf	__Umul8_16@multiplicand
  9911  0BC1  0833               	movf	___flmul@a+2,w
  9912  0BC2  3191  217B  318B   	fcall	__Umul8_16
  9913  0BC5  0871               	movf	?__Umul8_16+1,w
  9914  0BC6  0020               	movlb	0	; select bank0
  9915  0BC7  00C6               	movwf	___flmul@temp+1
  9916  0BC8  0870               	movf	?__Umul8_16,w
  9917  0BC9  00C5               	movwf	___flmul@temp
  9918  0BCA  0845               	movf	___flmul@temp,w
  9919  0BCB  00B5               	movwf	??___flmul
  9920  0BCC  01B6               	clrf	??___flmul+1
  9921  0BCD  01B7               	clrf	??___flmul+2
  9922  0BCE  01B8               	clrf	??___flmul+3
  9923  0BCF  0838               	movf	??___flmul+3,w
  9924  0BD0  00BE               	movwf	___flmul@grs+3
  9925  0BD1  0837               	movf	??___flmul+2,w
  9926  0BD2  00BD               	movwf	___flmul@grs+2
  9927  0BD3  0836               	movf	??___flmul+1,w
  9928  0BD4  00BC               	movwf	___flmul@grs+1
  9929  0BD5  0835               	movf	??___flmul,w
  9930  0BD6  00BB               	movwf	___flmul@grs
  9931  0BD7  0846               	movf	___flmul@temp+1,w
  9932  0BD8  00B5               	movwf	??___flmul
  9933  0BD9  01B6               	clrf	??___flmul+1
  9934  0BDA  01B7               	clrf	??___flmul+2
  9935  0BDB  01B8               	clrf	??___flmul+3
  9936  0BDC  0838               	movf	??___flmul+3,w
  9937  0BDD  00C4               	movwf	___flmul@prod+3
  9938  0BDE  0837               	movf	??___flmul+2,w
  9939  0BDF  00C3               	movwf	___flmul@prod+2
  9940  0BE0  0836               	movf	??___flmul+1,w
  9941  0BE1  00C2               	movwf	___flmul@prod+1
  9942  0BE2  0835               	movf	??___flmul,w
  9943  0BE3  00C1               	movwf	___flmul@prod
  9944  0BE4  082E               	movf	___flmul@b+1,w
  9945  0BE5  00B5               	movwf	??___flmul
  9946  0BE6  0835               	movf	??___flmul,w
  9947  0BE7  00F0               	movwf	__Umul8_16@multiplicand
  9948  0BE8  0832               	movf	___flmul@a+1,w
  9949  0BE9  3191  217B  318B   	fcall	__Umul8_16
  9950  0BEC  0871               	movf	?__Umul8_16+1,w
  9951  0BED  0020               	movlb	0	; select bank0
  9952  0BEE  00C6               	movwf	___flmul@temp+1
  9953  0BEF  0870               	movf	?__Umul8_16,w
  9954  0BF0  00C5               	movwf	___flmul@temp
  9955  0BF1  0845               	movf	___flmul@temp,w
  9956  0BF2  00B5               	movwf	??___flmul
  9957  0BF3  01B6               	clrf	??___flmul+1
  9958  0BF4  01B7               	clrf	??___flmul+2
  9959  0BF5  01B8               	clrf	??___flmul+3
  9960  0BF6  0835               	movf	??___flmul,w
  9961  0BF7  07BB               	addwf	___flmul@grs,f
  9962  0BF8  0836               	movf	??___flmul+1,w
  9963  0BF9  3DBC               	addwfc	___flmul@grs+1,f
  9964  0BFA  0837               	movf	??___flmul+2,w
  9965  0BFB  3DBD               	addwfc	___flmul@grs+2,f
  9966  0BFC  0838               	movf	??___flmul+3,w
  9967  0BFD  3DBE               	addwfc	___flmul@grs+3,f
  9968  0BFE  0846               	movf	___flmul@temp+1,w
  9969  0BFF  00B5               	movwf	??___flmul
  9970  0C00  01B6               	clrf	??___flmul+1
  9971  0C01  01B7               	clrf	??___flmul+2
  9972  0C02  01B8               	clrf	??___flmul+3
  9973  0C03  0835               	movf	??___flmul,w
  9974  0C04  07C1               	addwf	___flmul@prod,f
  9975  0C05  0836               	movf	??___flmul+1,w
  9976  0C06  3DC2               	addwfc	___flmul@prod+1,f
  9977  0C07  0837               	movf	??___flmul+2,w
  9978  0C08  3DC3               	addwfc	___flmul@prod+2,f
  9979  0C09  0838               	movf	??___flmul+3,w
  9980  0C0A  3DC4               	addwfc	___flmul@prod+3,f
  9981  0C0B  082F               	movf	___flmul@b+2,w
  9982  0C0C  00B5               	movwf	??___flmul
  9983  0C0D  0835               	movf	??___flmul,w
  9984  0C0E  00F0               	movwf	__Umul8_16@multiplicand
  9985  0C0F  0831               	movf	___flmul@a,w
  9986  0C10  3191  217B  318B   	fcall	__Umul8_16
  9987  0C13  0871               	movf	?__Umul8_16+1,w
  9988  0C14  0020               	movlb	0	; select bank0
  9989  0C15  00C6               	movwf	___flmul@temp+1
  9990  0C16  0870               	movf	?__Umul8_16,w
  9991  0C17  00C5               	movwf	___flmul@temp
  9992  0C18  0845               	movf	___flmul@temp,w
  9993  0C19  00B5               	movwf	??___flmul
  9994  0C1A  01B6               	clrf	??___flmul+1
  9995  0C1B  01B7               	clrf	??___flmul+2
  9996  0C1C  01B8               	clrf	??___flmul+3
  9997  0C1D  0835               	movf	??___flmul,w
  9998  0C1E  07BB               	addwf	___flmul@grs,f
  9999  0C1F  0836               	movf	??___flmul+1,w
 10000  0C20  3DBC               	addwfc	___flmul@grs+1,f
 10001  0C21  0837               	movf	??___flmul+2,w
 10002  0C22  3DBD               	addwfc	___flmul@grs+2,f
 10003  0C23  0838               	movf	??___flmul+3,w
 10004  0C24  3DBE               	addwfc	___flmul@grs+3,f
 10005  0C25  0846               	movf	___flmul@temp+1,w
 10006  0C26  00B5               	movwf	??___flmul
 10007  0C27  01B6               	clrf	??___flmul+1
 10008  0C28  01B7               	clrf	??___flmul+2
 10009  0C29  01B8               	clrf	??___flmul+3
 10010  0C2A  0835               	movf	??___flmul,w
 10011  0C2B  07C1               	addwf	___flmul@prod,f
 10012  0C2C  0836               	movf	??___flmul+1,w
 10013  0C2D  3DC2               	addwfc	___flmul@prod+1,f
 10014  0C2E  0837               	movf	??___flmul+2,w
 10015  0C2F  3DC3               	addwfc	___flmul@prod+2,f
 10016  0C30  0838               	movf	??___flmul+3,w
 10017  0C31  3DC4               	addwfc	___flmul@prod+3,f
 10018  0C32  3008               	movlw	8
 10019  0C33                     u4495:	
 10020  0C33  35BB               	lslf	___flmul@grs,f
 10021  0C34  0DBC               	rlf	___flmul@grs+1,f
 10022  0C35  0DBD               	rlf	___flmul@grs+2,f
 10023  0C36  0DBE               	rlf	___flmul@grs+3,f
 10024  0C37  0B89               	decfsz	9,f
 10025  0C38  2C33               	goto	u4495
 10026  0C39  082E               	movf	___flmul@b+1,w
 10027  0C3A  00B5               	movwf	??___flmul
 10028  0C3B  0835               	movf	??___flmul,w
 10029  0C3C  00F0               	movwf	__Umul8_16@multiplicand
 10030  0C3D  0831               	movf	___flmul@a,w
 10031  0C3E  3191  217B  318B   	fcall	__Umul8_16
 10032  0C41  0871               	movf	?__Umul8_16+1,w
 10033  0C42  0020               	movlb	0	; select bank0
 10034  0C43  00C6               	movwf	___flmul@temp+1
 10035  0C44  0870               	movf	?__Umul8_16,w
 10036  0C45  00C5               	movwf	___flmul@temp
 10037  0C46  0845               	movf	___flmul@temp,w
 10038  0C47  07BB               	addwf	___flmul@grs,f
 10039  0C48  0846               	movf	___flmul@temp+1,w
 10040  0C49  3DBC               	addwfc	___flmul@grs+1,f
 10041  0C4A  3000               	movlw	0
 10042  0C4B  3DBD               	addwfc	___flmul@grs+2,f
 10043  0C4C  3DBE               	addwfc	___flmul@grs+3,f
 10044  0C4D  082D               	movf	___flmul@b,w
 10045  0C4E  00B5               	movwf	??___flmul
 10046  0C4F  0835               	movf	??___flmul,w
 10047  0C50  00F0               	movwf	__Umul8_16@multiplicand
 10048  0C51  0832               	movf	___flmul@a+1,w
 10049  0C52  3191  217B  318B   	fcall	__Umul8_16
 10050  0C55  0871               	movf	?__Umul8_16+1,w
 10051  0C56  0020               	movlb	0	; select bank0
 10052  0C57  00C6               	movwf	___flmul@temp+1
 10053  0C58  0870               	movf	?__Umul8_16,w
 10054  0C59  00C5               	movwf	___flmul@temp
 10055  0C5A  0845               	movf	___flmul@temp,w
 10056  0C5B  07BB               	addwf	___flmul@grs,f
 10057  0C5C  0846               	movf	___flmul@temp+1,w
 10058  0C5D  3DBC               	addwfc	___flmul@grs+1,f
 10059  0C5E  3000               	movlw	0
 10060  0C5F  3DBD               	addwfc	___flmul@grs+2,f
 10061  0C60  3DBE               	addwfc	___flmul@grs+3,f
 10062  0C61  3008               	movlw	8
 10063  0C62                     u4505:	
 10064  0C62  35BB               	lslf	___flmul@grs,f
 10065  0C63  0DBC               	rlf	___flmul@grs+1,f
 10066  0C64  0DBD               	rlf	___flmul@grs+2,f
 10067  0C65  0DBE               	rlf	___flmul@grs+3,f
 10068  0C66  0B89               	decfsz	9,f
 10069  0C67  2C62               	goto	u4505
 10070  0C68  082D               	movf	___flmul@b,w
 10071  0C69  00B5               	movwf	??___flmul
 10072  0C6A  0835               	movf	??___flmul,w
 10073  0C6B  00F0               	movwf	__Umul8_16@multiplicand
 10074  0C6C  0831               	movf	___flmul@a,w
 10075  0C6D  3191  217B  318B   	fcall	__Umul8_16
 10076  0C70  0871               	movf	?__Umul8_16+1,w
 10077  0C71  0020               	movlb	0	; select bank0
 10078  0C72  00C6               	movwf	___flmul@temp+1
 10079  0C73  0870               	movf	?__Umul8_16,w
 10080  0C74  00C5               	movwf	___flmul@temp
 10081  0C75  0845               	movf	___flmul@temp,w
 10082  0C76  07BB               	addwf	___flmul@grs,f
 10083  0C77  0846               	movf	___flmul@temp+1,w
 10084  0C78  3DBC               	addwfc	___flmul@grs+1,f
 10085  0C79  3000               	movlw	0
 10086  0C7A  3DBD               	addwfc	___flmul@grs+2,f
 10087  0C7B  3DBE               	addwfc	___flmul@grs+3,f
 10088  0C7C  082E               	movf	___flmul@b+1,w
 10089  0C7D  00B5               	movwf	??___flmul
 10090  0C7E  0835               	movf	??___flmul,w
 10091  0C7F  00F0               	movwf	__Umul8_16@multiplicand
 10092  0C80  0833               	movf	___flmul@a+2,w
 10093  0C81  3191  217B  318B   	fcall	__Umul8_16
 10094  0C84  0871               	movf	?__Umul8_16+1,w
 10095  0C85  0020               	movlb	0	; select bank0
 10096  0C86  00C6               	movwf	___flmul@temp+1
 10097  0C87  0870               	movf	?__Umul8_16,w
 10098  0C88  00C5               	movwf	___flmul@temp
 10099  0C89  0845               	movf	___flmul@temp,w
 10100  0C8A  07C1               	addwf	___flmul@prod,f
 10101  0C8B  0846               	movf	___flmul@temp+1,w
 10102  0C8C  3DC2               	addwfc	___flmul@prod+1,f
 10103  0C8D  3000               	movlw	0
 10104  0C8E  3DC3               	addwfc	___flmul@prod+2,f
 10105  0C8F  3DC4               	addwfc	___flmul@prod+3,f
 10106  0C90  082F               	movf	___flmul@b+2,w
 10107  0C91  00B5               	movwf	??___flmul
 10108  0C92  0835               	movf	??___flmul,w
 10109  0C93  00F0               	movwf	__Umul8_16@multiplicand
 10110  0C94  0832               	movf	___flmul@a+1,w
 10111  0C95  3191  217B  318B   	fcall	__Umul8_16
 10112  0C98  0871               	movf	?__Umul8_16+1,w
 10113  0C99  0020               	movlb	0	; select bank0
 10114  0C9A  00C6               	movwf	___flmul@temp+1
 10115  0C9B  0870               	movf	?__Umul8_16,w
 10116  0C9C  00C5               	movwf	___flmul@temp
 10117  0C9D  0845               	movf	___flmul@temp,w
 10118  0C9E  07C1               	addwf	___flmul@prod,f
 10119  0C9F  0846               	movf	___flmul@temp+1,w
 10120  0CA0  3DC2               	addwfc	___flmul@prod+1,f
 10121  0CA1  3000               	movlw	0
 10122  0CA2  3DC3               	addwfc	___flmul@prod+2,f
 10123  0CA3  3DC4               	addwfc	___flmul@prod+3,f
 10124  0CA4  082F               	movf	___flmul@b+2,w
 10125  0CA5  00B5               	movwf	??___flmul
 10126  0CA6  0835               	movf	??___flmul,w
 10127  0CA7  00F0               	movwf	__Umul8_16@multiplicand
 10128  0CA8  0833               	movf	___flmul@a+2,w
 10129  0CA9  3191  217B  318B   	fcall	__Umul8_16
 10130  0CAC  0871               	movf	?__Umul8_16+1,w
 10131  0CAD  0020               	movlb	0	; select bank0
 10132  0CAE  00C6               	movwf	___flmul@temp+1
 10133  0CAF  0870               	movf	?__Umul8_16,w
 10134  0CB0  00C5               	movwf	___flmul@temp
 10135  0CB1  0845               	movf	___flmul@temp,w
 10136  0CB2  00B5               	movwf	??___flmul
 10137  0CB3  0846               	movf	___flmul@temp+1,w
 10138  0CB4  00B6               	movwf	??___flmul+1
 10139  0CB5  01B7               	clrf	??___flmul+2
 10140  0CB6  01B8               	clrf	??___flmul+3
 10141  0CB7  3008               	movlw	8
 10142  0CB8                     u4515:	
 10143  0CB8  35B5               	lslf	??___flmul,f
 10144  0CB9  0DB6               	rlf	??___flmul+1,f
 10145  0CBA  0DB7               	rlf	??___flmul+2,f
 10146  0CBB  0DB8               	rlf	??___flmul+3,f
 10147  0CBC  0B89               	decfsz	9,f
 10148  0CBD  2CB8               	goto	u4515
 10149  0CBE  0835               	movf	??___flmul,w
 10150  0CBF  07C1               	addwf	___flmul@prod,f
 10151  0CC0  0836               	movf	??___flmul+1,w
 10152  0CC1  3DC2               	addwfc	___flmul@prod+1,f
 10153  0CC2  0837               	movf	??___flmul+2,w
 10154  0CC3  3DC3               	addwfc	___flmul@prod+2,f
 10155  0CC4  0838               	movf	??___flmul+3,w
 10156  0CC5  3DC4               	addwfc	___flmul@prod+3,f
 10157  0CC6  083B               	movf	___flmul@grs,w
 10158  0CC7  00B5               	movwf	??___flmul
 10159  0CC8  083C               	movf	___flmul@grs+1,w
 10160  0CC9  00B6               	movwf	??___flmul+1
 10161  0CCA  083D               	movf	___flmul@grs+2,w
 10162  0CCB  00B7               	movwf	??___flmul+2
 10163  0CCC  083E               	movf	___flmul@grs+3,w
 10164  0CCD  00B8               	movwf	??___flmul+3
 10165  0CCE  3018               	movlw	24
 10166  0CCF                     u4525:	
 10167  0CCF  36B8               	lsrf	??___flmul+3,f
 10168  0CD0  0CB7               	rrf	??___flmul+2,f
 10169  0CD1  0CB6               	rrf	??___flmul+1,f
 10170  0CD2  0CB5               	rrf	??___flmul,f
 10171  0CD3  0B89               	decfsz	9,f
 10172  0CD4  2CCF               	goto	u4525
 10173  0CD5  0835               	movf	??___flmul,w
 10174  0CD6  07C1               	addwf	___flmul@prod,f
 10175  0CD7  0836               	movf	??___flmul+1,w
 10176  0CD8  3DC2               	addwfc	___flmul@prod+1,f
 10177  0CD9  0837               	movf	??___flmul+2,w
 10178  0CDA  3DC3               	addwfc	___flmul@prod+2,f
 10179  0CDB  0838               	movf	??___flmul+3,w
 10180  0CDC  3DC4               	addwfc	___flmul@prod+3,f
 10181  0CDD  3008               	movlw	8
 10182  0CDE                     u4535:	
 10183  0CDE  35BB               	lslf	___flmul@grs,f
 10184  0CDF  0DBC               	rlf	___flmul@grs+1,f
 10185  0CE0  0DBD               	rlf	___flmul@grs+2,f
 10186  0CE1  0DBE               	rlf	___flmul@grs+3,f
 10187  0CE2  0B89               	decfsz	9,f
 10188  0CE3  2CDE               	goto	u4535
 10189  0CE4  0840               	movf	___flmul@bexp,w
 10190  0CE5  073F               	addwf	___flmul@aexp,w
 10191  0CE6  00B5               	movwf	??___flmul
 10192  0CE7  01B6               	clrf	??___flmul+1
 10193  0CE8  0DB6               	rlf	??___flmul+1,f
 10194  0CE9  0835               	movf	??___flmul,w
 10195  0CEA  3E82               	addlw	130
 10196  0CEB  00C5               	movwf	___flmul@temp
 10197  0CEC  30FF               	movlw	255
 10198  0CED  3D36               	addwfc	??___flmul+1,w
 10199  0CEE  00C6               	movwf	___flmul@temp+1
 10200  0CEF                     l3507:	
 10201  0CEF  1BC3               	btfsc	___flmul@prod+2,7
 10202  0CF0  2D06               	goto	l3509
 10203  0CF1  3001               	movlw	1
 10204  0CF2                     u4545:	
 10205  0CF2  35C1               	lslf	___flmul@prod,f
 10206  0CF3  0DC2               	rlf	___flmul@prod+1,f
 10207  0CF4  0DC3               	rlf	___flmul@prod+2,f
 10208  0CF5  0DC4               	rlf	___flmul@prod+3,f
 10209  0CF6  0B89               	decfsz	9,f
 10210  0CF7  2CF2               	goto	u4545
 10211  0CF8  1BBE               	btfsc	___flmul@grs+3,7
 10212  0CF9  1441               	bsf	___flmul@prod,0
 10213  0CFA  3001               	movlw	1
 10214  0CFB                     u4565:	
 10215  0CFB  35BB               	lslf	___flmul@grs,f
 10216  0CFC  0DBC               	rlf	___flmul@grs+1,f
 10217  0CFD  0DBD               	rlf	___flmul@grs+2,f
 10218  0CFE  0DBE               	rlf	___flmul@grs+3,f
 10219  0CFF  0B89               	decfsz	9,f
 10220  0D00  2CFB               	goto	u4565
 10221  0D01  30FF               	movlw	255
 10222  0D02  07C5               	addwf	___flmul@temp,f
 10223  0D03  30FF               	movlw	255
 10224  0D04  3DC6               	addwfc	___flmul@temp+1,f
 10225  0D05  2CEF               	goto	l3507
 10226  0D06                     l3509:	
 10227  0D06  01BF               	clrf	___flmul@aexp
 10228  0D07  1FBE               	btfss	___flmul@grs+3,7
 10229  0D08  2D1F               	goto	l3519
 10230  0D09  30FF               	movlw	255
 10231  0D0A  053B               	andwf	___flmul@grs,w
 10232  0D0B  00B5               	movwf	??___flmul
 10233  0D0C  30FF               	movlw	255
 10234  0D0D  053C               	andwf	___flmul@grs+1,w
 10235  0D0E  00B6               	movwf	??___flmul+1
 10236  0D0F  30FF               	movlw	255
 10237  0D10  053D               	andwf	___flmul@grs+2,w
 10238  0D11  00B7               	movwf	??___flmul+2
 10239  0D12  307F               	movlw	127
 10240  0D13  053E               	andwf	___flmul@grs+3,w
 10241  0D14  00B8               	movwf	??___flmul+3
 10242  0D15  0838               	movf	??___flmul+3,w
 10243  0D16  0437               	iorwf	??___flmul+2,w
 10244  0D17  0436               	iorwf	??___flmul+1,w
 10245  0D18  0435               	iorwf	??___flmul,w
 10246  0D19  1903               	skipnz
 10247  0D1A  1841               	btfsc	___flmul@prod,0
 10248  0D1B  2D1D               	goto	l3515
 10249  0D1C  2D1F               	goto	l3519
 10250  0D1D                     l3515:	
 10251  0D1D  01BF               	clrf	___flmul@aexp
 10252  0D1E  0ABF               	incf	___flmul@aexp,f
 10253  0D1F                     l3519:	
 10254  0D1F  083F               	movf	___flmul@aexp,w
 10255  0D20  1903               	btfsc	3,2
 10256  0D21  2D48               	goto	l3529
 10257  0D22  3001               	movlw	1
 10258  0D23  07C1               	addwf	___flmul@prod,f
 10259  0D24  3000               	movlw	0
 10260  0D25  3DC2               	addwfc	___flmul@prod+1,f
 10261  0D26  3000               	movlw	0
 10262  0D27  3DC3               	addwfc	___flmul@prod+2,f
 10263  0D28  3000               	movlw	0
 10264  0D29  3DC4               	addwfc	___flmul@prod+3,f
 10265  0D2A  1C44               	btfss	___flmul@prod+3,0
 10266  0D2B  2D48               	goto	l3529
 10267  0D2C  0841               	movf	___flmul@prod,w
 10268  0D2D  00B5               	movwf	??___flmul
 10269  0D2E  0842               	movf	___flmul@prod+1,w
 10270  0D2F  00B6               	movwf	??___flmul+1
 10271  0D30  0843               	movf	___flmul@prod+2,w
 10272  0D31  00B7               	movwf	??___flmul+2
 10273  0D32  0844               	movf	___flmul@prod+3,w
 10274  0D33  00B8               	movwf	??___flmul+3
 10275  0D34  3001               	movlw	1
 10276  0D35  00B9               	movwf	??___flmul+4
 10277  0D36                     u4635:	
 10278  0D36  37B8               	asrf	??___flmul+3,f
 10279  0D37  0CB7               	rrf	??___flmul+2,f
 10280  0D38  0CB6               	rrf	??___flmul+1,f
 10281  0D39  0CB5               	rrf	??___flmul,f
 10282  0D3A  0BB9               	decfsz	??___flmul+4,f
 10283  0D3B  2D36               	goto	u4635
 10284  0D3C  0838               	movf	??___flmul+3,w
 10285  0D3D  00C4               	movwf	___flmul@prod+3
 10286  0D3E  0837               	movf	??___flmul+2,w
 10287  0D3F  00C3               	movwf	___flmul@prod+2
 10288  0D40  0836               	movf	??___flmul+1,w
 10289  0D41  00C2               	movwf	___flmul@prod+1
 10290  0D42  0835               	movf	??___flmul,w
 10291  0D43  00C1               	movwf	___flmul@prod
 10292  0D44  3001               	movlw	1
 10293  0D45  07C5               	addwf	___flmul@temp,f
 10294  0D46  3000               	movlw	0
 10295  0D47  3DC6               	addwfc	___flmul@temp+1,f
 10296  0D48                     l3529:	
 10297  0D48  0846               	movf	___flmul@temp+1,w
 10298  0D49  3A80               	xorlw	128
 10299  0D4A  00B5               	movwf	??___flmul
 10300  0D4B  3080               	movlw	128
 10301  0D4C  0235               	subwf	??___flmul,w
 10302  0D4D  1D03               	skipz
 10303  0D4E  2D51               	goto	u4645
 10304  0D4F  30FF               	movlw	255
 10305  0D50  0245               	subwf	___flmul@temp,w
 10306  0D51                     u4645:	
 10307  0D51  1C03               	skipc
 10308  0D52  2D5D               	goto	l3533
 10309  0D53  307F               	movlw	127
 10310  0D54  0020               	movlb	0	; select bank0
 10311  0D55  00C4               	movwf	___flmul@prod+3
 10312  0D56  3080               	movlw	128
 10313  0D57  00C3               	movwf	___flmul@prod+2
 10314  0D58  3000               	movlw	0
 10315  0D59  00C2               	movwf	___flmul@prod+1
 10316  0D5A  3000               	movlw	0
 10317  0D5B  00C1               	movwf	___flmul@prod
 10318  0D5C  2D87               	goto	l966
 10319  0D5D                     l3533:	
 10320  0D5D  0020               	movlb	0	; select bank0
 10321  0D5E  0846               	movf	___flmul@temp+1,w
 10322  0D5F  3A80               	xorlw	128
 10323  0D60  00B5               	movwf	??___flmul
 10324  0D61  3080               	movlw	128
 10325  0D62  0235               	subwf	??___flmul,w
 10326  0D63  1D03               	skipz
 10327  0D64  2D67               	goto	u4655
 10328  0D65  3001               	movlw	1
 10329  0D66  0245               	subwf	___flmul@temp,w
 10330  0D67                     u4655:	
 10331  0D67  1803               	skipnc
 10332  0D68  2D74               	goto	l3539
 10333  0D69  3000               	movlw	0
 10334  0D6A  0020               	movlb	0	; select bank0
 10335  0D6B  00C4               	movwf	___flmul@prod+3
 10336  0D6C  3000               	movlw	0
 10337  0D6D  00C3               	movwf	___flmul@prod+2
 10338  0D6E  3000               	movlw	0
 10339  0D6F  00C2               	movwf	___flmul@prod+1
 10340  0D70  3000               	movlw	0
 10341  0D71  00C1               	movwf	___flmul@prod
 10342  0D72  01BA               	clrf	___flmul@sign
 10343  0D73  2D87               	goto	l966
 10344  0D74                     l3539:	
 10345  0D74  0020               	movlb	0	; select bank0
 10346  0D75  0845               	movf	___flmul@temp,w
 10347  0D76  00B5               	movwf	??___flmul
 10348  0D77  0835               	movf	??___flmul,w
 10349  0D78  00C0               	movwf	___flmul@bexp
 10350  0D79  30FF               	movlw	255
 10351  0D7A  05C1               	andwf	___flmul@prod,f
 10352  0D7B  30FF               	movlw	255
 10353  0D7C  05C2               	andwf	___flmul@prod+1,f
 10354  0D7D  307F               	movlw	127
 10355  0D7E  05C3               	andwf	___flmul@prod+2,f
 10356  0D7F  3000               	movlw	0
 10357  0D80  05C4               	andwf	___flmul@prod+3,f
 10358  0D81  1840               	btfsc	___flmul@bexp,0
 10359  0D82  17C3               	bsf	___flmul@prod+2,7
 10360  0D83  3640               	lsrf	___flmul@bexp,w
 10361  0D84  00B5               	movwf	??___flmul
 10362  0D85  0835               	movf	??___flmul,w
 10363  0D86  00C4               	movwf	___flmul@prod+3
 10364  0D87                     l966:	
 10365  0D87  083A               	movf	___flmul@sign,w
 10366  0D88  00B5               	movwf	??___flmul
 10367  0D89  0835               	movf	??___flmul,w
 10368  0D8A  04C4               	iorwf	___flmul@prod+3,f
 10369  0D8B  0844               	movf	___flmul@prod+3,w
 10370  0D8C  00B0               	movwf	?___flmul+3
 10371  0D8D  0843               	movf	___flmul@prod+2,w
 10372  0D8E  00AF               	movwf	?___flmul+2
 10373  0D8F  0842               	movf	___flmul@prod+1,w
 10374  0D90  00AE               	movwf	?___flmul+1
 10375  0D91  0841               	movf	___flmul@prod,w
 10376  0D92  00AD               	movwf	?___flmul
 10377  0D93  0008               	return
 10378  0D94                     __end_of___flmul:	
 10379                           
 10380                           	psect	text22
 10381  117B                     __ptext22:	
 10382 ;; *************** function __Umul8_16 *****************
 10383 ;; Defined at:
 10384 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 10385 ;; Parameters:    Size  Location     Type
 10386 ;;  multiplier      1    wreg     unsigned char 
 10387 ;;  multiplicand    1    0[COMMON] unsigned char 
 10388 ;; Auto vars:     Size  Location     Type
 10389 ;;  multiplier      1    8[COMMON] unsigned char 
 10390 ;;  word_mpld       2    6[COMMON] unsigned int 
 10391 ;;  product         2    4[COMMON] unsigned int 
 10392 ;; Return value:  Size  Location     Type
 10393 ;;                  2    0[COMMON] unsigned int 
 10394 ;; Registers used:
 10395 ;;		wreg, status,2, status,0
 10396 ;; Tracked objects:
 10397 ;;		On entry : 0/0
 10398 ;;		On exit  : 0/0
 10399 ;;		Unchanged: 0/0
 10400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10401 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10402 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10403 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10404 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10405 ;;Total ram usage:        9 bytes
 10406 ;; Hardware stack levels used:    1
 10407 ;; This function calls:
 10408 ;;		Nothing
 10409 ;; This function is called by:
 10410 ;;		___flmul
 10411 ;; This function uses a non-reentrant model
 10412 ;;
 10413                           
 10414                           
 10415                           ;psect for function __Umul8_16
 10416  117B                     __Umul8_16:	
 10417                           
 10418                           ;incstack = 0
 10419                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 10420                           ;__Umul8_16@multiplier stored from wreg
 10421  117B  00F8               	movwf	__Umul8_16@multiplier
 10422  117C  01F4               	clrf	__Umul8_16@product
 10423  117D  01F5               	clrf	__Umul8_16@product+1
 10424  117E  0870               	movf	__Umul8_16@multiplicand,w
 10425  117F  00F2               	movwf	??__Umul8_16
 10426  1180  01F3               	clrf	??__Umul8_16+1
 10427  1181  0872               	movf	??__Umul8_16,w
 10428  1182  00F6               	movwf	__Umul8_16@word_mpld
 10429  1183  0873               	movf	??__Umul8_16+1,w
 10430  1184  00F7               	movwf	__Umul8_16@word_mpld+1
 10431  1185                     l2991:	
 10432  1185  1C78               	btfss	__Umul8_16@multiplier,0
 10433  1186  298B               	goto	l1147
 10434  1187  0876               	movf	__Umul8_16@word_mpld,w
 10435  1188  07F4               	addwf	__Umul8_16@product,f
 10436  1189  0877               	movf	__Umul8_16@word_mpld+1,w
 10437  118A  3DF5               	addwfc	__Umul8_16@product+1,f
 10438  118B                     l1147:	
 10439  118B  3001               	movlw	1
 10440  118C                     u3395:	
 10441  118C  35F6               	lslf	__Umul8_16@word_mpld,f
 10442  118D  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 10443  118E  0B89               	decfsz	9,f
 10444  118F  298C               	goto	u3395
 10445  1190  1003               	clrc
 10446  1191  0CF8               	rrf	__Umul8_16@multiplier,f
 10447  1192  0878               	movf	__Umul8_16@multiplier,w
 10448  1193  1D03               	btfss	3,2
 10449  1194  2985               	goto	l2991
 10450  1195  0875               	movf	__Umul8_16@product+1,w
 10451  1196  00F1               	movwf	?__Umul8_16+1
 10452  1197  0874               	movf	__Umul8_16@product,w
 10453  1198  00F0               	movwf	?__Umul8_16
 10454  1199  0008               	return
 10455  119A                     __end_of__Umul8_16:	
 10456                           
 10457                           	psect	text23
 10458  1535                     __ptext23:	
 10459 ;; *************** function ___flge *****************
 10460 ;; Defined at:
 10461 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 10462 ;; Parameters:    Size  Location     Type
 10463 ;;  ff1             4   39[BANK0 ] unsigned int 
 10464 ;;  ff2             4   43[BANK0 ] unsigned int 
 10465 ;; Auto vars:     Size  Location     Type
 10466 ;;		None
 10467 ;; Return value:  Size  Location     Type
 10468 ;;		None               void
 10469 ;; Registers used:
 10470 ;;		wreg, status,2, status,0
 10471 ;; Tracked objects:
 10472 ;;		On entry : 0/0
 10473 ;;		On exit  : 0/0
 10474 ;;		Unchanged: 0/0
 10475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10476 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10478 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10479 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10480 ;;Total ram usage:       12 bytes
 10481 ;; Hardware stack levels used:    1
 10482 ;; This function calls:
 10483 ;;		Nothing
 10484 ;; This function is called by:
 10485 ;;		_efgtoa
 10486 ;; This function uses a non-reentrant model
 10487 ;;
 10488                           
 10489                           
 10490                           ;psect for function ___flge
 10491  1535                     ___flge:	
 10492                           
 10493                           ;incstack = 0
 10494                           ; Regs used in ___flge: [wreg+status,2+status,0]
 10495  1535  3000               	movlw	0
 10496  1536  0020               	movlb	0	; select bank0
 10497  1537  0547               	andwf	___flge@ff1,w
 10498  1538  00CF               	movwf	??___flge
 10499  1539  3000               	movlw	0
 10500  153A  0548               	andwf	___flge@ff1+1,w
 10501  153B  00D0               	movwf	??___flge+1
 10502  153C  3080               	movlw	128
 10503  153D  0549               	andwf	___flge@ff1+2,w
 10504  153E  00D1               	movwf	??___flge+2
 10505  153F  307F               	movlw	127
 10506  1540  054A               	andwf	___flge@ff1+3,w
 10507  1541  00D2               	movwf	??___flge+3
 10508  1542  0852               	movf	??___flge+3,w
 10509  1543  0451               	iorwf	??___flge+2,w
 10510  1544  0450               	iorwf	??___flge+1,w
 10511  1545  044F               	iorwf	??___flge,w
 10512  1546  1D03               	skipz
 10513  1547  2D50               	goto	l735
 10514  1548  3000               	movlw	0
 10515  1549  00CA               	movwf	___flge@ff1+3
 10516  154A  3000               	movlw	0
 10517  154B  00C9               	movwf	___flge@ff1+2
 10518  154C  3000               	movlw	0
 10519  154D  00C8               	movwf	___flge@ff1+1
 10520  154E  3000               	movlw	0
 10521  154F  00C7               	movwf	___flge@ff1
 10522  1550                     l735:	
 10523  1550  3000               	movlw	0
 10524  1551  054B               	andwf	___flge@ff2,w
 10525  1552  00CF               	movwf	??___flge
 10526  1553  3000               	movlw	0
 10527  1554  054C               	andwf	___flge@ff2+1,w
 10528  1555  00D0               	movwf	??___flge+1
 10529  1556  3080               	movlw	128
 10530  1557  054D               	andwf	___flge@ff2+2,w
 10531  1558  00D1               	movwf	??___flge+2
 10532  1559  307F               	movlw	127
 10533  155A  054E               	andwf	___flge@ff2+3,w
 10534  155B  00D2               	movwf	??___flge+3
 10535  155C  0852               	movf	??___flge+3,w
 10536  155D  0451               	iorwf	??___flge+2,w
 10537  155E  0450               	iorwf	??___flge+1,w
 10538  155F  044F               	iorwf	??___flge,w
 10539  1560  1D03               	skipz
 10540  1561  2D6A               	goto	l3207
 10541  1562  3000               	movlw	0
 10542  1563  00CE               	movwf	___flge@ff2+3
 10543  1564  3000               	movlw	0
 10544  1565  00CD               	movwf	___flge@ff2+2
 10545  1566  3000               	movlw	0
 10546  1567  00CC               	movwf	___flge@ff2+1
 10547  1568  3000               	movlw	0
 10548  1569  00CB               	movwf	___flge@ff2
 10549  156A                     l3207:	
 10550  156A  1FCA               	btfss	___flge@ff1+3,7
 10551  156B  2D84               	goto	l3211
 10552  156C  3000               	movlw	0
 10553  156D  00CF               	movwf	??___flge
 10554  156E  3000               	movlw	0
 10555  156F  00D0               	movwf	??___flge+1
 10556  1570  3000               	movlw	0
 10557  1571  00D1               	movwf	??___flge+2
 10558  1572  3080               	movlw	128
 10559  1573  00D2               	movwf	??___flge+3
 10560  1574  0847               	movf	___flge@ff1,w
 10561  1575  02CF               	subwf	??___flge,f
 10562  1576  0848               	movf	___flge@ff1+1,w
 10563  1577  3BD0               	subwfb	??___flge+1,f
 10564  1578  0849               	movf	___flge@ff1+2,w
 10565  1579  3BD1               	subwfb	??___flge+2,f
 10566  157A  084A               	movf	___flge@ff1+3,w
 10567  157B  3BD2               	subwfb	??___flge+3,f
 10568  157C  0852               	movf	??___flge+3,w
 10569  157D  00CA               	movwf	___flge@ff1+3
 10570  157E  0851               	movf	??___flge+2,w
 10571  157F  00C9               	movwf	___flge@ff1+2
 10572  1580  0850               	movf	??___flge+1,w
 10573  1581  00C8               	movwf	___flge@ff1+1
 10574  1582  084F               	movf	??___flge,w
 10575  1583  00C7               	movwf	___flge@ff1
 10576  1584                     l3211:	
 10577  1584  1FCE               	btfss	___flge@ff2+3,7
 10578  1585  2D9E               	goto	l738
 10579  1586  3000               	movlw	0
 10580  1587  00CF               	movwf	??___flge
 10581  1588  3000               	movlw	0
 10582  1589  00D0               	movwf	??___flge+1
 10583  158A  3000               	movlw	0
 10584  158B  00D1               	movwf	??___flge+2
 10585  158C  3080               	movlw	128
 10586  158D  00D2               	movwf	??___flge+3
 10587  158E  084B               	movf	___flge@ff2,w
 10588  158F  02CF               	subwf	??___flge,f
 10589  1590  084C               	movf	___flge@ff2+1,w
 10590  1591  3BD0               	subwfb	??___flge+1,f
 10591  1592  084D               	movf	___flge@ff2+2,w
 10592  1593  3BD1               	subwfb	??___flge+2,f
 10593  1594  084E               	movf	___flge@ff2+3,w
 10594  1595  3BD2               	subwfb	??___flge+3,f
 10595  1596  0852               	movf	??___flge+3,w
 10596  1597  00CE               	movwf	___flge@ff2+3
 10597  1598  0851               	movf	??___flge+2,w
 10598  1599  00CD               	movwf	___flge@ff2+2
 10599  159A  0850               	movf	??___flge+1,w
 10600  159B  00CC               	movwf	___flge@ff2+1
 10601  159C  084F               	movf	??___flge,w
 10602  159D  00CB               	movwf	___flge@ff2
 10603  159E                     l738:	
 10604  159E  3080               	movlw	128
 10605  159F  06CA               	xorwf	___flge@ff1+3,f
 10606  15A0  3080               	movlw	128
 10607  15A1  06CE               	xorwf	___flge@ff2+3,f
 10608  15A2  084E               	movf	___flge@ff2+3,w
 10609  15A3  024A               	subwf	___flge@ff1+3,w
 10610  15A4  1D03               	skipz
 10611  15A5  0008               	return
 10612  15A6  084D               	movf	___flge@ff2+2,w
 10613  15A7  0249               	subwf	___flge@ff1+2,w
 10614  15A8  1D03               	skipz
 10615  15A9  0008               	return
 10616  15AA  084C               	movf	___flge@ff2+1,w
 10617  15AB  0248               	subwf	___flge@ff1+1,w
 10618  15AC  1D03               	skipz
 10619  15AD  0008               	return
 10620  15AE  084B               	movf	___flge@ff2,w
 10621  15AF  0247               	subwf	___flge@ff1,w
 10622  15B0  0008               	return
 10623  15B1                     __end_of___flge:	
 10624                           
 10625                           	psect	text24
 10626  1321                     __ptext24:	
 10627 ;; *************** function ___fleq *****************
 10628 ;; Defined at:
 10629 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
 10630 ;; Parameters:    Size  Location     Type
 10631 ;;  ff1             4    0[COMMON] unsigned int 
 10632 ;;  ff2             4    4[COMMON] unsigned int 
 10633 ;; Auto vars:     Size  Location     Type
 10634 ;;		None
 10635 ;; Return value:  Size  Location     Type
 10636 ;;		None               void
 10637 ;; Registers used:
 10638 ;;		wreg, status,2, status,0
 10639 ;; Tracked objects:
 10640 ;;		On entry : 0/0
 10641 ;;		On exit  : 0/0
 10642 ;;		Unchanged: 0/0
 10643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10644 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10646 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10647 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10648 ;;Total ram usage:       12 bytes
 10649 ;; Hardware stack levels used:    1
 10650 ;; This function calls:
 10651 ;;		Nothing
 10652 ;; This function is called by:
 10653 ;;		_efgtoa
 10654 ;; This function uses a non-reentrant model
 10655 ;;
 10656                           
 10657                           
 10658                           ;psect for function ___fleq
 10659  1321                     ___fleq:	
 10660                           
 10661                           ;incstack = 0
 10662                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 10663  1321  3000               	movlw	0
 10664  1322  0570               	andwf	___fleq@ff1,w
 10665  1323  00F8               	movwf	??___fleq
 10666  1324  3000               	movlw	0
 10667  1325  0571               	andwf	___fleq@ff1+1,w
 10668  1326  00F9               	movwf	??___fleq+1
 10669  1327  3080               	movlw	128
 10670  1328  0572               	andwf	___fleq@ff1+2,w
 10671  1329  00FA               	movwf	??___fleq+2
 10672  132A  307F               	movlw	127
 10673  132B  0573               	andwf	___fleq@ff1+3,w
 10674  132C  00FB               	movwf	??___fleq+3
 10675  132D  087B               	movf	??___fleq+3,w
 10676  132E  047A               	iorwf	??___fleq+2,w
 10677  132F  0479               	iorwf	??___fleq+1,w
 10678  1330  0478               	iorwf	??___fleq,w
 10679  1331  1D03               	skipz
 10680  1332  2B3B               	goto	l726
 10681  1333  3000               	movlw	0
 10682  1334  00F3               	movwf	___fleq@ff1+3
 10683  1335  3000               	movlw	0
 10684  1336  00F2               	movwf	___fleq@ff1+2
 10685  1337  3000               	movlw	0
 10686  1338  00F1               	movwf	___fleq@ff1+1
 10687  1339  3000               	movlw	0
 10688  133A  00F0               	movwf	___fleq@ff1
 10689  133B                     l726:	
 10690  133B  3000               	movlw	0
 10691  133C  0574               	andwf	___fleq@ff2,w
 10692  133D  00F8               	movwf	??___fleq
 10693  133E  3000               	movlw	0
 10694  133F  0575               	andwf	___fleq@ff2+1,w
 10695  1340  00F9               	movwf	??___fleq+1
 10696  1341  3080               	movlw	128
 10697  1342  0576               	andwf	___fleq@ff2+2,w
 10698  1343  00FA               	movwf	??___fleq+2
 10699  1344  307F               	movlw	127
 10700  1345  0577               	andwf	___fleq@ff2+3,w
 10701  1346  00FB               	movwf	??___fleq+3
 10702  1347  087B               	movf	??___fleq+3,w
 10703  1348  047A               	iorwf	??___fleq+2,w
 10704  1349  0479               	iorwf	??___fleq+1,w
 10705  134A  0478               	iorwf	??___fleq,w
 10706  134B  1D03               	skipz
 10707  134C  2B55               	goto	l727
 10708  134D  3000               	movlw	0
 10709  134E  00F7               	movwf	___fleq@ff2+3
 10710  134F  3000               	movlw	0
 10711  1350  00F6               	movwf	___fleq@ff2+2
 10712  1351  3000               	movlw	0
 10713  1352  00F5               	movwf	___fleq@ff2+1
 10714  1353  3000               	movlw	0
 10715  1354  00F4               	movwf	___fleq@ff2
 10716  1355                     l727:	
 10717  1355  0877               	movf	___fleq@ff2+3,w
 10718  1356  0673               	xorwf	___fleq@ff1+3,w
 10719  1357  1D03               	skipz
 10720  1358  2B63               	goto	u3955
 10721  1359  0876               	movf	___fleq@ff2+2,w
 10722  135A  0672               	xorwf	___fleq@ff1+2,w
 10723  135B  1D03               	skipz
 10724  135C  2B63               	goto	u3955
 10725  135D  0875               	movf	___fleq@ff2+1,w
 10726  135E  0671               	xorwf	___fleq@ff1+1,w
 10727  135F  1D03               	skipz
 10728  1360  2B63               	goto	u3955
 10729  1361  0874               	movf	___fleq@ff2,w
 10730  1362  0670               	xorwf	___fleq@ff1,w
 10731  1363                     u3955:	
 10732  1363  1903               	skipnz
 10733  1364  2B67               	goto	l3197
 10734  1365  1003               	clrc
 10735  1366  0008               	return
 10736  1367                     l3197:	
 10737  1367  1403               	setc
 10738  1368  0008               	return
 10739  1369                     __end_of___fleq:	
 10740                           
 10741                           	psect	text25
 10742  0017                     __ptext25:	
 10743 ;; *************** function ___fldiv *****************
 10744 ;; Defined at:
 10745 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 10746 ;; Parameters:    Size  Location     Type
 10747 ;;  a               4    0[COMMON] unsigned int 
 10748 ;;  b               4    4[COMMON] unsigned int 
 10749 ;; Auto vars:     Size  Location     Type
 10750 ;;  grs             4    7[BANK0 ] unsigned long 
 10751 ;;  rem             4    0[BANK0 ] unsigned long 
 10752 ;;  new_exp         2    5[BANK0 ] int 
 10753 ;;  aexp            1   12[BANK0 ] unsigned char 
 10754 ;;  bexp            1   11[BANK0 ] unsigned char 
 10755 ;;  sign            1    4[BANK0 ] unsigned char 
 10756 ;; Return value:  Size  Location     Type
 10757 ;;                  4    0[COMMON] unsigned char 
 10758 ;; Registers used:
 10759 ;;		wreg, status,2, status,0
 10760 ;; Tracked objects:
 10761 ;;		On entry : 0/0
 10762 ;;		On exit  : 0/0
 10763 ;;		Unchanged: 0/0
 10764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10765 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10766 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10767 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10768 ;;      Totals:        13      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10769 ;;Total ram usage:       26 bytes
 10770 ;; Hardware stack levels used:    1
 10771 ;; This function calls:
 10772 ;;		Nothing
 10773 ;; This function is called by:
 10774 ;;		_main
 10775 ;;		_efgtoa
 10776 ;; This function uses a non-reentrant model
 10777 ;;
 10778                           
 10779                           
 10780                           ;psect for function ___fldiv
 10781  0017                     ___fldiv:	
 10782                           
 10783                           ;incstack = 0
 10784                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 10785  0017  0877               	movf	___fldiv@b+3,w
 10786  0018  3980               	andlw	128
 10787  0019  00F8               	movwf	??___fldiv
 10788  001A  0878               	movf	??___fldiv,w
 10789  001B  0020               	movlb	0	; select bank0
 10790  001C  00A4               	movwf	___fldiv@sign
 10791  001D  3577               	lslf	___fldiv@b+3,w
 10792  001E  00F8               	movwf	??___fldiv
 10793  001F  0878               	movf	??___fldiv,w
 10794  0020  00AB               	movwf	___fldiv@bexp
 10795  0021  1BF6               	btfsc	___fldiv@b+2,7
 10796  0022  142B               	bsf	___fldiv@bexp,0
 10797  0023  082B               	movf	___fldiv@bexp,w
 10798  0024  1903               	btfsc	3,2
 10799  0025  2834               	goto	l3289
 10800  0026  0A2B               	incf	___fldiv@bexp,w
 10801  0027  1D03               	btfss	3,2
 10802  0028  2831               	goto	l3285
 10803  0029  3000               	movlw	0
 10804  002A  00F7               	movwf	___fldiv@b+3
 10805  002B  3000               	movlw	0
 10806  002C  00F6               	movwf	___fldiv@b+2
 10807  002D  3000               	movlw	0
 10808  002E  00F5               	movwf	___fldiv@b+1
 10809  002F  3000               	movlw	0
 10810  0030  00F4               	movwf	___fldiv@b
 10811  0031                     l3285:	
 10812  0031  17F6               	bsf	___fldiv@b+2,7
 10813  0032  01F7               	clrf	___fldiv@b+3
 10814  0033  283C               	goto	l3291
 10815  0034                     l3289:	
 10816  0034  3000               	movlw	0
 10817  0035  00F7               	movwf	___fldiv@b+3
 10818  0036  3000               	movlw	0
 10819  0037  00F6               	movwf	___fldiv@b+2
 10820  0038  3000               	movlw	0
 10821  0039  00F5               	movwf	___fldiv@b+1
 10822  003A  3000               	movlw	0
 10823  003B  00F4               	movwf	___fldiv@b
 10824  003C                     l3291:	
 10825  003C  0873               	movf	___fldiv@a+3,w
 10826  003D  3980               	andlw	128
 10827  003E  00F8               	movwf	??___fldiv
 10828  003F  0878               	movf	??___fldiv,w
 10829  0040  06A4               	xorwf	___fldiv@sign,f
 10830  0041  3573               	lslf	___fldiv@a+3,w
 10831  0042  00F8               	movwf	??___fldiv
 10832  0043  0878               	movf	??___fldiv,w
 10833  0044  00AC               	movwf	___fldiv@aexp
 10834  0045  1BF2               	btfsc	___fldiv@a+2,7
 10835  0046  142C               	bsf	___fldiv@aexp,0
 10836  0047  082C               	movf	___fldiv@aexp,w
 10837  0048  1903               	btfsc	3,2
 10838  0049  2858               	goto	l3309
 10839  004A  0A2C               	incf	___fldiv@aexp,w
 10840  004B  1D03               	btfss	3,2
 10841  004C  2855               	goto	l3305
 10842  004D  3000               	movlw	0
 10843  004E  00F3               	movwf	___fldiv@a+3
 10844  004F  3000               	movlw	0
 10845  0050  00F2               	movwf	___fldiv@a+2
 10846  0051  3000               	movlw	0
 10847  0052  00F1               	movwf	___fldiv@a+1
 10848  0053  3000               	movlw	0
 10849  0054  00F0               	movwf	___fldiv@a
 10850  0055                     l3305:	
 10851  0055  17F2               	bsf	___fldiv@a+2,7
 10852  0056  01F3               	clrf	___fldiv@a+3
 10853  0057  2860               	goto	l914
 10854  0058                     l3309:	
 10855  0058  3000               	movlw	0
 10856  0059  00F3               	movwf	___fldiv@a+3
 10857  005A  3000               	movlw	0
 10858  005B  00F2               	movwf	___fldiv@a+2
 10859  005C  3000               	movlw	0
 10860  005D  00F1               	movwf	___fldiv@a+1
 10861  005E  3000               	movlw	0
 10862  005F  00F0               	movwf	___fldiv@a
 10863  0060                     l914:	
 10864  0060  0873               	movf	___fldiv@a+3,w
 10865  0061  0472               	iorwf	___fldiv@a+2,w
 10866  0062  0471               	iorwf	___fldiv@a+1,w
 10867  0063  0470               	iorwf	___fldiv@a,w
 10868  0064  1D03               	skipz
 10869  0065  287F               	goto	l3319
 10870  0066  3000               	movlw	0
 10871  0067  00F7               	movwf	___fldiv@b+3
 10872  0068  3000               	movlw	0
 10873  0069  00F6               	movwf	___fldiv@b+2
 10874  006A  3000               	movlw	0
 10875  006B  00F5               	movwf	___fldiv@b+1
 10876  006C  3000               	movlw	0
 10877  006D  00F4               	movwf	___fldiv@b
 10878  006E  3080               	movlw	128
 10879  006F  04F6               	iorwf	___fldiv@b+2,f
 10880  0070  307F               	movlw	127
 10881  0071  04F7               	iorwf	___fldiv@b+3,f
 10882  0072                     L13:	
 10883  0072  0824               	movf	___fldiv@sign,w
 10884  0073  00F8               	movwf	??___fldiv
 10885  0074  0878               	movf	??___fldiv,w
 10886  0075  04F7               	iorwf	___fldiv@b+3,f
 10887  0076  0877               	movf	___fldiv@b+3,w
 10888  0077  00F3               	movwf	?___fldiv+3
 10889  0078  0876               	movf	___fldiv@b+2,w
 10890  0079  00F2               	movwf	?___fldiv+2
 10891  007A  0875               	movf	___fldiv@b+1,w
 10892  007B  00F1               	movwf	?___fldiv+1
 10893  007C  0874               	movf	___fldiv@b,w
 10894  007D  00F0               	movwf	?___fldiv
 10895  007E  0008               	return
 10896  007F                     l3319:	
 10897  007F  082B               	movf	___fldiv@bexp,w
 10898  0080  1D03               	btfss	3,2
 10899  0081  288B               	goto	l3325
 10900  0082  3000               	movlw	0
 10901  0083  00F3               	movwf	?___fldiv+3
 10902  0084  3000               	movlw	0
 10903  0085  00F2               	movwf	?___fldiv+2
 10904  0086  3000               	movlw	0
 10905  0087  00F1               	movwf	?___fldiv+1
 10906  0088  3000               	movlw	0
 10907  0089  00F0               	movwf	?___fldiv
 10908  008A  0008               	return
 10909  008B                     l3325:	
 10910  008B  082B               	movf	___fldiv@bexp,w
 10911  008C  00F8               	movwf	??___fldiv
 10912  008D  01F9               	clrf	??___fldiv+1
 10913  008E  0879               	movf	??___fldiv+1,w
 10914  008F  00FB               	movwf	??___fldiv+3
 10915  0090  082C               	movf	___fldiv@aexp,w
 10916  0091  0278               	subwf	??___fldiv,w
 10917  0092  00FA               	movwf	??___fldiv+2
 10918  0093  1C03               	skipc
 10919  0094  03FB               	decf	??___fldiv+3,f
 10920  0095  087A               	movf	??___fldiv+2,w
 10921  0096  3E7F               	addlw	127
 10922  0097  00A5               	movwf	___fldiv@new_exp
 10923  0098  3000               	movlw	0
 10924  0099  3D7B               	addwfc	??___fldiv+3,w
 10925  009A  00A6               	movwf	___fldiv@new_exp+1
 10926  009B  0877               	movf	___fldiv@b+3,w
 10927  009C  00A3               	movwf	___fldiv@rem+3
 10928  009D  0876               	movf	___fldiv@b+2,w
 10929  009E  00A2               	movwf	___fldiv@rem+2
 10930  009F  0875               	movf	___fldiv@b+1,w
 10931  00A0  00A1               	movwf	___fldiv@rem+1
 10932  00A1  0874               	movf	___fldiv@b,w
 10933  00A2  00A0               	movwf	___fldiv@rem
 10934  00A3  3000               	movlw	0
 10935  00A4  00F7               	movwf	___fldiv@b+3
 10936  00A5  3000               	movlw	0
 10937  00A6  00F6               	movwf	___fldiv@b+2
 10938  00A7  3000               	movlw	0
 10939  00A8  00F5               	movwf	___fldiv@b+1
 10940  00A9  3000               	movlw	0
 10941  00AA  00F4               	movwf	___fldiv@b
 10942  00AB  3000               	movlw	0
 10943  00AC  00AA               	movwf	___fldiv@grs+3
 10944  00AD  3000               	movlw	0
 10945  00AE  00A9               	movwf	___fldiv@grs+2
 10946  00AF  3000               	movlw	0
 10947  00B0  00A8               	movwf	___fldiv@grs+1
 10948  00B1  3000               	movlw	0
 10949  00B2  00A7               	movwf	___fldiv@grs
 10950  00B3  01AC               	clrf	___fldiv@aexp
 10951  00B4                     l3353:	
 10952  00B4  301A               	movlw	26
 10953  00B5  022C               	subwf	___fldiv@aexp,w
 10954  00B6  1803               	btfsc	3,0
 10955  00B7  28F0               	goto	l3355
 10956  00B8  082C               	movf	___fldiv@aexp,w
 10957  00B9  1903               	btfsc	3,2
 10958  00BA  28D2               	goto	l3345
 10959  00BB  3001               	movlw	1
 10960  00BC                     u4215:	
 10961  00BC  35A0               	lslf	___fldiv@rem,f
 10962  00BD  0DA1               	rlf	___fldiv@rem+1,f
 10963  00BE  0DA2               	rlf	___fldiv@rem+2,f
 10964  00BF  0DA3               	rlf	___fldiv@rem+3,f
 10965  00C0  0B89               	decfsz	9,f
 10966  00C1  28BC               	goto	u4215
 10967  00C2  3001               	movlw	1
 10968  00C3                     u4225:	
 10969  00C3  35F4               	lslf	___fldiv@b,f
 10970  00C4  0DF5               	rlf	___fldiv@b+1,f
 10971  00C5  0DF6               	rlf	___fldiv@b+2,f
 10972  00C6  0DF7               	rlf	___fldiv@b+3,f
 10973  00C7  0B89               	decfsz	9,f
 10974  00C8  28C3               	goto	u4225
 10975  00C9  1BAA               	btfsc	___fldiv@grs+3,7
 10976  00CA  1474               	bsf	___fldiv@b,0
 10977  00CB  3001               	movlw	1
 10978  00CC                     u4245:	
 10979  00CC  35A7               	lslf	___fldiv@grs,f
 10980  00CD  0DA8               	rlf	___fldiv@grs+1,f
 10981  00CE  0DA9               	rlf	___fldiv@grs+2,f
 10982  00CF  0DAA               	rlf	___fldiv@grs+3,f
 10983  00D0  0B89               	decfsz	9,f
 10984  00D1  28CC               	goto	u4245
 10985  00D2                     l3345:	
 10986  00D2  0873               	movf	___fldiv@a+3,w
 10987  00D3  0223               	subwf	___fldiv@rem+3,w
 10988  00D4  1D03               	skipz
 10989  00D5  28E0               	goto	u4255
 10990  00D6  0872               	movf	___fldiv@a+2,w
 10991  00D7  0222               	subwf	___fldiv@rem+2,w
 10992  00D8  1D03               	skipz
 10993  00D9  28E0               	goto	u4255
 10994  00DA  0871               	movf	___fldiv@a+1,w
 10995  00DB  0221               	subwf	___fldiv@rem+1,w
 10996  00DC  1D03               	skipz
 10997  00DD  28E0               	goto	u4255
 10998  00DE  0870               	movf	___fldiv@a,w
 10999  00DF  0220               	subwf	___fldiv@rem,w
 11000  00E0                     u4255:	
 11001  00E0  1C03               	skipc
 11002  00E1  28EB               	goto	l3351
 11003  00E2  172A               	bsf	___fldiv@grs+3,6
 11004  00E3  0870               	movf	___fldiv@a,w
 11005  00E4  02A0               	subwf	___fldiv@rem,f
 11006  00E5  0871               	movf	___fldiv@a+1,w
 11007  00E6  3BA1               	subwfb	___fldiv@rem+1,f
 11008  00E7  0872               	movf	___fldiv@a+2,w
 11009  00E8  3BA2               	subwfb	___fldiv@rem+2,f
 11010  00E9  0873               	movf	___fldiv@a+3,w
 11011  00EA  3BA3               	subwfb	___fldiv@rem+3,f
 11012  00EB                     l3351:	
 11013  00EB  3001               	movlw	1
 11014  00EC  00F8               	movwf	??___fldiv
 11015  00ED  0878               	movf	??___fldiv,w
 11016  00EE  07AC               	addwf	___fldiv@aexp,f
 11017  00EF  28B4               	goto	l3353
 11018  00F0                     l3355:	
 11019  00F0  0823               	movf	___fldiv@rem+3,w
 11020  00F1  0422               	iorwf	___fldiv@rem+2,w
 11021  00F2  0421               	iorwf	___fldiv@rem+1,w
 11022  00F3  0420               	iorwf	___fldiv@rem,w
 11023  00F4  1D03               	btfss	3,2
 11024  00F5  1427               	bsf	___fldiv@grs,0
 11025  00F6                     l3369:	
 11026  00F6  1BF6               	btfsc	___fldiv@b+2,7
 11027  00F7  290D               	goto	l3371
 11028  00F8  3001               	movlw	1
 11029  00F9                     u4285:	
 11030  00F9  35F4               	lslf	___fldiv@b,f
 11031  00FA  0DF5               	rlf	___fldiv@b+1,f
 11032  00FB  0DF6               	rlf	___fldiv@b+2,f
 11033  00FC  0DF7               	rlf	___fldiv@b+3,f
 11034  00FD  0B89               	decfsz	9,f
 11035  00FE  28F9               	goto	u4285
 11036  00FF  1BAA               	btfsc	___fldiv@grs+3,7
 11037  0100  1474               	bsf	___fldiv@b,0
 11038  0101  3001               	movlw	1
 11039  0102                     u4305:	
 11040  0102  35A7               	lslf	___fldiv@grs,f
 11041  0103  0DA8               	rlf	___fldiv@grs+1,f
 11042  0104  0DA9               	rlf	___fldiv@grs+2,f
 11043  0105  0DAA               	rlf	___fldiv@grs+3,f
 11044  0106  0B89               	decfsz	9,f
 11045  0107  2902               	goto	u4305
 11046  0108  30FF               	movlw	255
 11047  0109  07A5               	addwf	___fldiv@new_exp,f
 11048  010A  30FF               	movlw	255
 11049  010B  3DA6               	addwfc	___fldiv@new_exp+1,f
 11050  010C  28F6               	goto	l3369
 11051  010D                     l3371:	
 11052  010D  01AC               	clrf	___fldiv@aexp
 11053  010E  1FAA               	btfss	___fldiv@grs+3,7
 11054  010F  2926               	goto	l3381
 11055  0110  30FF               	movlw	255
 11056  0111  0527               	andwf	___fldiv@grs,w
 11057  0112  00F8               	movwf	??___fldiv
 11058  0113  30FF               	movlw	255
 11059  0114  0528               	andwf	___fldiv@grs+1,w
 11060  0115  00F9               	movwf	??___fldiv+1
 11061  0116  30FF               	movlw	255
 11062  0117  0529               	andwf	___fldiv@grs+2,w
 11063  0118  00FA               	movwf	??___fldiv+2
 11064  0119  307F               	movlw	127
 11065  011A  052A               	andwf	___fldiv@grs+3,w
 11066  011B  00FB               	movwf	??___fldiv+3
 11067  011C  087B               	movf	??___fldiv+3,w
 11068  011D  047A               	iorwf	??___fldiv+2,w
 11069  011E  0479               	iorwf	??___fldiv+1,w
 11070  011F  0478               	iorwf	??___fldiv,w
 11071  0120  1903               	skipnz
 11072  0121  1874               	btfsc	___fldiv@b,0
 11073  0122  2924               	goto	l3377
 11074  0123  2926               	goto	l3381
 11075  0124                     l3377:	
 11076  0124  01AC               	clrf	___fldiv@aexp
 11077  0125  0AAC               	incf	___fldiv@aexp,f
 11078  0126                     l3381:	
 11079  0126  082C               	movf	___fldiv@aexp,w
 11080  0127  1903               	btfsc	3,2
 11081  0128  294F               	goto	l3391
 11082  0129  3001               	movlw	1
 11083  012A  07F4               	addwf	___fldiv@b,f
 11084  012B  3000               	movlw	0
 11085  012C  3DF5               	addwfc	___fldiv@b+1,f
 11086  012D  3000               	movlw	0
 11087  012E  3DF6               	addwfc	___fldiv@b+2,f
 11088  012F  3000               	movlw	0
 11089  0130  3DF7               	addwfc	___fldiv@b+3,f
 11090  0131  1C77               	btfss	___fldiv@b+3,0
 11091  0132  294F               	goto	l3391
 11092  0133  0874               	movf	___fldiv@b,w
 11093  0134  00F8               	movwf	??___fldiv
 11094  0135  0875               	movf	___fldiv@b+1,w
 11095  0136  00F9               	movwf	??___fldiv+1
 11096  0137  0876               	movf	___fldiv@b+2,w
 11097  0138  00FA               	movwf	??___fldiv+2
 11098  0139  0877               	movf	___fldiv@b+3,w
 11099  013A  00FB               	movwf	??___fldiv+3
 11100  013B  3001               	movlw	1
 11101  013C  00FC               	movwf	??___fldiv+4
 11102  013D                     u4375:	
 11103  013D  37FB               	asrf	??___fldiv+3,f
 11104  013E  0CFA               	rrf	??___fldiv+2,f
 11105  013F  0CF9               	rrf	??___fldiv+1,f
 11106  0140  0CF8               	rrf	??___fldiv,f
 11107  0141  0BFC               	decfsz	??___fldiv+4,f
 11108  0142  293D               	goto	u4375
 11109  0143  087B               	movf	??___fldiv+3,w
 11110  0144  00F7               	movwf	___fldiv@b+3
 11111  0145  087A               	movf	??___fldiv+2,w
 11112  0146  00F6               	movwf	___fldiv@b+2
 11113  0147  0879               	movf	??___fldiv+1,w
 11114  0148  00F5               	movwf	___fldiv@b+1
 11115  0149  0878               	movf	??___fldiv,w
 11116  014A  00F4               	movwf	___fldiv@b
 11117  014B  3001               	movlw	1
 11118  014C  07A5               	addwf	___fldiv@new_exp,f
 11119  014D  3000               	movlw	0
 11120  014E  3DA6               	addwfc	___fldiv@new_exp+1,f
 11121  014F                     l3391:	
 11122  014F  0826               	movf	___fldiv@new_exp+1,w
 11123  0150  3A80               	xorlw	128
 11124  0151  00F8               	movwf	??___fldiv
 11125  0152  3080               	movlw	128
 11126  0153  0278               	subwf	??___fldiv,w
 11127  0154  1D03               	skipz
 11128  0155  2958               	goto	u4385
 11129  0156  30FF               	movlw	255
 11130  0157  0225               	subwf	___fldiv@new_exp,w
 11131  0158                     u4385:	
 11132  0158  1C03               	skipc
 11133  0159  2967               	goto	l935
 11134  015A  30FF               	movlw	255
 11135  015B  0020               	movlb	0	; select bank0
 11136  015C  00A5               	movwf	___fldiv@new_exp
 11137  015D  3000               	movlw	0
 11138  015E  00A6               	movwf	___fldiv@new_exp+1
 11139  015F  3000               	movlw	0
 11140  0160  00F7               	movwf	___fldiv@b+3
 11141  0161  3000               	movlw	0
 11142  0162  00F6               	movwf	___fldiv@b+2
 11143  0163  3000               	movlw	0
 11144  0164  00F5               	movwf	___fldiv@b+1
 11145  0165  3000               	movlw	0
 11146  0166  00F4               	movwf	___fldiv@b
 11147  0167                     l935:	
 11148  0167  0020               	movlb	0	; select bank0
 11149  0168  0826               	movf	___fldiv@new_exp+1,w
 11150  0169  3A80               	xorlw	128
 11151  016A  00F8               	movwf	??___fldiv
 11152  016B  3080               	movlw	128
 11153  016C  0278               	subwf	??___fldiv,w
 11154  016D  1D03               	skipz
 11155  016E  2971               	goto	u4395
 11156  016F  3001               	movlw	1
 11157  0170  0225               	subwf	___fldiv@new_exp,w
 11158  0171                     u4395:	
 11159  0171  1803               	skipnc
 11160  0172  297F               	goto	l936
 11161  0173  0020               	movlb	0	; select bank0
 11162  0174  01A5               	clrf	___fldiv@new_exp
 11163  0175  01A6               	clrf	___fldiv@new_exp+1
 11164  0176  3000               	movlw	0
 11165  0177  00F7               	movwf	___fldiv@b+3
 11166  0178  3000               	movlw	0
 11167  0179  00F6               	movwf	___fldiv@b+2
 11168  017A  3000               	movlw	0
 11169  017B  00F5               	movwf	___fldiv@b+1
 11170  017C  3000               	movlw	0
 11171  017D  00F4               	movwf	___fldiv@b
 11172  017E  01A4               	clrf	___fldiv@sign
 11173  017F                     l936:	
 11174  017F  0020               	movlb	0	; select bank0
 11175  0180  0825               	movf	___fldiv@new_exp,w
 11176  0181  00F8               	movwf	??___fldiv
 11177  0182  0878               	movf	??___fldiv,w
 11178  0183  00AB               	movwf	___fldiv@bexp
 11179  0184  1C2B               	btfss	___fldiv@bexp,0
 11180  0185  2988               	goto	l3405
 11181  0186  17F6               	bsf	___fldiv@b+2,7
 11182  0187  298C               	goto	l938
 11183  0188                     l3405:	
 11184  0188  307F               	movlw	127
 11185  0189  00F8               	movwf	??___fldiv
 11186  018A  0878               	movf	??___fldiv,w
 11187  018B  05F6               	andwf	___fldiv@b+2,f
 11188  018C                     l938:	
 11189  018C  362B               	lsrf	___fldiv@bexp,w
 11190  018D  00F8               	movwf	??___fldiv
 11191  018E  0878               	movf	??___fldiv,w
 11192  018F  00F7               	movwf	___fldiv@b+3
 11193  0190  2872               	goto	L13
 11194  0191                     __end_of___fldiv:	
 11195                           
 11196                           	psect	text26
 11197  12DC                     __ptext26:	
 11198 ;; *************** function ___awmod *****************
 11199 ;; Defined at:
 11200 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
 11201 ;; Parameters:    Size  Location     Type
 11202 ;;  divisor         2    0[COMMON] int 
 11203 ;;  dividend        2    2[COMMON] int 
 11204 ;; Auto vars:     Size  Location     Type
 11205 ;;  sign            1    6[COMMON] unsigned char 
 11206 ;;  counter         1    5[COMMON] unsigned char 
 11207 ;; Return value:  Size  Location     Type
 11208 ;;                  2    0[COMMON] int 
 11209 ;; Registers used:
 11210 ;;		wreg, status,2, status,0
 11211 ;; Tracked objects:
 11212 ;;		On entry : 0/0
 11213 ;;		On exit  : 0/0
 11214 ;;		Unchanged: 0/0
 11215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11216 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11217 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11218 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11219 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11220 ;;Total ram usage:        7 bytes
 11221 ;; Hardware stack levels used:    1
 11222 ;; This function calls:
 11223 ;;		Nothing
 11224 ;; This function is called by:
 11225 ;;		_efgtoa
 11226 ;; This function uses a non-reentrant model
 11227 ;;
 11228                           
 11229                           
 11230                           ;psect for function ___awmod
 11231  12DC                     ___awmod:	
 11232                           
 11233                           ;incstack = 0
 11234                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11235  12DC  01F6               	clrf	___awmod@sign
 11236  12DD  1FF3               	btfss	___awmod@dividend+1,7
 11237  12DE  2AE6               	goto	l3159
 11238  12DF  09F2               	comf	___awmod@dividend,f
 11239  12E0  09F3               	comf	___awmod@dividend+1,f
 11240  12E1  0AF2               	incf	___awmod@dividend,f
 11241  12E2  1903               	skipnz
 11242  12E3  0AF3               	incf	___awmod@dividend+1,f
 11243  12E4  01F6               	clrf	___awmod@sign
 11244  12E5  0AF6               	incf	___awmod@sign,f
 11245  12E6                     l3159:	
 11246  12E6  1FF1               	btfss	___awmod@divisor+1,7
 11247  12E7  2AED               	goto	l3163
 11248  12E8  09F0               	comf	___awmod@divisor,f
 11249  12E9  09F1               	comf	___awmod@divisor+1,f
 11250  12EA  0AF0               	incf	___awmod@divisor,f
 11251  12EB  1903               	skipnz
 11252  12EC  0AF1               	incf	___awmod@divisor+1,f
 11253  12ED                     l3163:	
 11254  12ED  0870               	movf	___awmod@divisor,w
 11255  12EE  0471               	iorwf	___awmod@divisor+1,w
 11256  12EF  1903               	btfsc	3,2
 11257  12F0  2B14               	goto	l3181
 11258  12F1  01F5               	clrf	___awmod@counter
 11259  12F2  0AF5               	incf	___awmod@counter,f
 11260  12F3                     l3171:	
 11261  12F3  1BF1               	btfsc	___awmod@divisor+1,7
 11262  12F4  2AFF               	goto	l3173
 11263  12F5  3001               	movlw	1
 11264  12F6                     u3875:	
 11265  12F6  35F0               	lslf	___awmod@divisor,f
 11266  12F7  0DF1               	rlf	___awmod@divisor+1,f
 11267  12F8  0B89               	decfsz	9,f
 11268  12F9  2AF6               	goto	u3875
 11269  12FA  3001               	movlw	1
 11270  12FB  00F4               	movwf	??___awmod
 11271  12FC  0874               	movf	??___awmod,w
 11272  12FD  07F5               	addwf	___awmod@counter,f
 11273  12FE  2AF3               	goto	l3171
 11274  12FF                     l3173:	
 11275  12FF  0871               	movf	___awmod@divisor+1,w
 11276  1300  0273               	subwf	___awmod@dividend+1,w
 11277  1301  1D03               	skipz
 11278  1302  2B05               	goto	u3895
 11279  1303  0870               	movf	___awmod@divisor,w
 11280  1304  0272               	subwf	___awmod@dividend,w
 11281  1305                     u3895:	
 11282  1305  1C03               	skipc
 11283  1306  2B0B               	goto	l3177
 11284  1307  0870               	movf	___awmod@divisor,w
 11285  1308  02F2               	subwf	___awmod@dividend,f
 11286  1309  0871               	movf	___awmod@divisor+1,w
 11287  130A  3BF3               	subwfb	___awmod@dividend+1,f
 11288  130B                     l3177:	
 11289  130B  3001               	movlw	1
 11290  130C                     u3905:	
 11291  130C  36F1               	lsrf	___awmod@divisor+1,f
 11292  130D  0CF0               	rrf	___awmod@divisor,f
 11293  130E  0B89               	decfsz	9,f
 11294  130F  2B0C               	goto	u3905
 11295  1310  3001               	movlw	1
 11296  1311  02F5               	subwf	___awmod@counter,f
 11297  1312  1D03               	btfss	3,2
 11298  1313  2AFF               	goto	l3173
 11299  1314                     l3181:	
 11300  1314  0876               	movf	___awmod@sign,w
 11301  1315  1903               	btfsc	3,2
 11302  1316  2B1C               	goto	l3185
 11303  1317  09F2               	comf	___awmod@dividend,f
 11304  1318  09F3               	comf	___awmod@dividend+1,f
 11305  1319  0AF2               	incf	___awmod@dividend,f
 11306  131A  1903               	skipnz
 11307  131B  0AF3               	incf	___awmod@dividend+1,f
 11308  131C                     l3185:	
 11309  131C  0873               	movf	___awmod@dividend+1,w
 11310  131D  00F1               	movwf	?___awmod+1
 11311  131E  0872               	movf	___awmod@dividend,w
 11312  131F  00F0               	movwf	?___awmod
 11313  1320  0008               	return
 11314  1321                     __end_of___awmod:	
 11315                           
 11316                           	psect	text27
 11317  1407                     __ptext27:	
 11318 ;; *************** function ___awdiv *****************
 11319 ;; Defined at:
 11320 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 11321 ;; Parameters:    Size  Location     Type
 11322 ;;  divisor         2    0[COMMON] int 
 11323 ;;  dividend        2    2[COMMON] int 
 11324 ;; Auto vars:     Size  Location     Type
 11325 ;;  quotient        2    7[COMMON] int 
 11326 ;;  sign            1    6[COMMON] unsigned char 
 11327 ;;  counter         1    5[COMMON] unsigned char 
 11328 ;; Return value:  Size  Location     Type
 11329 ;;                  2    0[COMMON] int 
 11330 ;; Registers used:
 11331 ;;		wreg, status,2, status,0
 11332 ;; Tracked objects:
 11333 ;;		On entry : 0/0
 11334 ;;		On exit  : 0/0
 11335 ;;		Unchanged: 0/0
 11336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11337 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11338 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11339 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11340 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11341 ;;Total ram usage:        9 bytes
 11342 ;; Hardware stack levels used:    1
 11343 ;; This function calls:
 11344 ;;		Nothing
 11345 ;; This function is called by:
 11346 ;;		_efgtoa
 11347 ;; This function uses a non-reentrant model
 11348 ;;
 11349                           
 11350                           
 11351                           ;psect for function ___awdiv
 11352  1407                     ___awdiv:	
 11353                           
 11354                           ;incstack = 0
 11355                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11356  1407  01F6               	clrf	___awdiv@sign
 11357  1408  1FF1               	btfss	___awdiv@divisor+1,7
 11358  1409  2C11               	goto	l3115
 11359  140A  09F0               	comf	___awdiv@divisor,f
 11360  140B  09F1               	comf	___awdiv@divisor+1,f
 11361  140C  0AF0               	incf	___awdiv@divisor,f
 11362  140D  1903               	skipnz
 11363  140E  0AF1               	incf	___awdiv@divisor+1,f
 11364  140F  01F6               	clrf	___awdiv@sign
 11365  1410  0AF6               	incf	___awdiv@sign,f
 11366  1411                     l3115:	
 11367  1411  1FF3               	btfss	___awdiv@dividend+1,7
 11368  1412  2C1C               	goto	l3121
 11369  1413  09F2               	comf	___awdiv@dividend,f
 11370  1414  09F3               	comf	___awdiv@dividend+1,f
 11371  1415  0AF2               	incf	___awdiv@dividend,f
 11372  1416  1903               	skipnz
 11373  1417  0AF3               	incf	___awdiv@dividend+1,f
 11374  1418  3001               	movlw	1
 11375  1419  00F4               	movwf	??___awdiv
 11376  141A  0874               	movf	??___awdiv,w
 11377  141B  06F6               	xorwf	___awdiv@sign,f
 11378  141C                     l3121:	
 11379  141C  01F7               	clrf	___awdiv@quotient
 11380  141D  01F8               	clrf	___awdiv@quotient+1
 11381  141E  0870               	movf	___awdiv@divisor,w
 11382  141F  0471               	iorwf	___awdiv@divisor+1,w
 11383  1420  1903               	btfsc	3,2
 11384  1421  2C4B               	goto	l3143
 11385  1422  01F5               	clrf	___awdiv@counter
 11386  1423  0AF5               	incf	___awdiv@counter,f
 11387  1424                     l3131:	
 11388  1424  1BF1               	btfsc	___awdiv@divisor+1,7
 11389  1425  2C30               	goto	l3133
 11390  1426  3001               	movlw	1
 11391  1427                     u3775:	
 11392  1427  35F0               	lslf	___awdiv@divisor,f
 11393  1428  0DF1               	rlf	___awdiv@divisor+1,f
 11394  1429  0B89               	decfsz	9,f
 11395  142A  2C27               	goto	u3775
 11396  142B  3001               	movlw	1
 11397  142C  00F4               	movwf	??___awdiv
 11398  142D  0874               	movf	??___awdiv,w
 11399  142E  07F5               	addwf	___awdiv@counter,f
 11400  142F  2C24               	goto	l3131
 11401  1430                     l3133:	
 11402  1430  3001               	movlw	1
 11403  1431                     u3795:	
 11404  1431  35F7               	lslf	___awdiv@quotient,f
 11405  1432  0DF8               	rlf	___awdiv@quotient+1,f
 11406  1433  0B89               	decfsz	9,f
 11407  1434  2C31               	goto	u3795
 11408  1435  0871               	movf	___awdiv@divisor+1,w
 11409  1436  0273               	subwf	___awdiv@dividend+1,w
 11410  1437  1D03               	skipz
 11411  1438  2C3B               	goto	u3805
 11412  1439  0870               	movf	___awdiv@divisor,w
 11413  143A  0272               	subwf	___awdiv@dividend,w
 11414  143B                     u3805:	
 11415  143B  1C03               	skipc
 11416  143C  2C42               	goto	l3139
 11417  143D  0870               	movf	___awdiv@divisor,w
 11418  143E  02F2               	subwf	___awdiv@dividend,f
 11419  143F  0871               	movf	___awdiv@divisor+1,w
 11420  1440  3BF3               	subwfb	___awdiv@dividend+1,f
 11421  1441  1477               	bsf	___awdiv@quotient,0
 11422  1442                     l3139:	
 11423  1442  3001               	movlw	1
 11424  1443                     u3815:	
 11425  1443  36F1               	lsrf	___awdiv@divisor+1,f
 11426  1444  0CF0               	rrf	___awdiv@divisor,f
 11427  1445  0B89               	decfsz	9,f
 11428  1446  2C43               	goto	u3815
 11429  1447  3001               	movlw	1
 11430  1448  02F5               	subwf	___awdiv@counter,f
 11431  1449  1D03               	btfss	3,2
 11432  144A  2C30               	goto	l3133
 11433  144B                     l3143:	
 11434  144B  0876               	movf	___awdiv@sign,w
 11435  144C  1903               	btfsc	3,2
 11436  144D  2C53               	goto	l3147
 11437  144E  09F7               	comf	___awdiv@quotient,f
 11438  144F  09F8               	comf	___awdiv@quotient+1,f
 11439  1450  0AF7               	incf	___awdiv@quotient,f
 11440  1451  1903               	skipnz
 11441  1452  0AF8               	incf	___awdiv@quotient+1,f
 11442  1453                     l3147:	
 11443  1453  0878               	movf	___awdiv@quotient+1,w
 11444  1454  00F1               	movwf	?___awdiv+1
 11445  1455  0877               	movf	___awdiv@quotient,w
 11446  1456  00F0               	movwf	?___awdiv
 11447  1457  0008               	return
 11448  1458                     __end_of___awdiv:	
 11449                           
 11450                           	psect	text28
 11451  080D                     __ptext28:	
 11452 ;; *************** function _atoi *****************
 11453 ;; Defined at:
 11454 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 11455 ;; Parameters:    Size  Location     Type
 11456 ;;  s               2    6[COMMON] PTR const unsigned char 
 11457 ;;		 -> STR_1(6), 
 11458 ;; Auto vars:     Size  Location     Type
 11459 ;;  n               2    7[BANK0 ] int 
 11460 ;;  neg             2    0[BANK0 ] int 
 11461 ;; Return value:  Size  Location     Type
 11462 ;;                  2    6[COMMON] int 
 11463 ;; Registers used:
 11464 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11465 ;; Tracked objects:
 11466 ;;		On entry : 0/0
 11467 ;;		On exit  : 0/0
 11468 ;;		Unchanged: 0/0
 11469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11470 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11471 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11472 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11473 ;;      Totals:         6       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11474 ;;Total ram usage:       15 bytes
 11475 ;; Hardware stack levels used:    1
 11476 ;; Hardware stack levels required when called:    1
 11477 ;; This function calls:
 11478 ;;		___wmul
 11479 ;;		_isdigit
 11480 ;;		_isspace
 11481 ;; This function is called by:
 11482 ;;		_vfpfcnvrt
 11483 ;; This function uses a non-reentrant model
 11484 ;;
 11485                           
 11486                           
 11487                           ;psect for function _atoi
 11488  080D                     _atoi:	
 11489                           
 11490                           ;incstack = 0
 11491                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11492  080D  0020               	movlb	0	; select bank0
 11493  080E  01A7               	clrf	atoi@n
 11494  080F  01A8               	clrf	atoi@n+1
 11495  0810  01A0               	clrf	atoi@neg
 11496  0811  01A1               	clrf	atoi@neg+1
 11497  0812                     l3859:	
 11498  0812  01A6               	clrf	_atoi$1139
 11499  0813  0AA6               	incf	_atoi$1139,f
 11500  0814  0876               	movf	atoi@s,w
 11501  0815  0084               	movwf	4
 11502  0816  0877               	movf	atoi@s+1,w
 11503  0817  0085               	movwf	5
 11504  0818  0012               	moviw fsr0++
 11505  0819  3A20               	xorlw	32
 11506  081A  1903               	btfsc	3,2
 11507  081B  282E               	goto	l3867
 11508  081C  0876               	movf	atoi@s,w
 11509  081D  0084               	movwf	4
 11510  081E  0877               	movf	atoi@s+1,w
 11511  081F  0085               	movwf	5
 11512  0820  0800               	movf	0,w	;code access
 11513  0821  3EF7               	addlw	247
 11514  0822  00F8               	movwf	??_atoi
 11515  0823  30FF               	movlw	255
 11516  0824  1803               	skipnc
 11517  0825  3000               	movlw	0
 11518  0826  00F9               	movwf	??_atoi+1
 11519  0827  3000               	movlw	0
 11520  0828  0279               	subwf	??_atoi+1,w
 11521  0829  3005               	movlw	5
 11522  082A  1903               	skipnz
 11523  082B  0278               	subwf	??_atoi,w
 11524  082C  1803               	btfsc	3,0
 11525  082D  01A6               	clrf	_atoi$1139
 11526  082E                     l3867:	
 11527  082E  0826               	movf	_atoi$1139,w
 11528  082F  00F8               	movwf	??_atoi
 11529  0830  01F9               	clrf	??_atoi+1
 11530  0831  0878               	movf	??_atoi,w
 11531  0832  00A2               	movwf	_atoi$1138
 11532  0833  0879               	movf	??_atoi+1,w
 11533  0834  00A3               	movwf	_atoi$1138+1
 11534  0835  0822               	movf	_atoi$1138,w
 11535  0836  0423               	iorwf	_atoi$1138+1,w
 11536  0837  1903               	btfsc	3,2
 11537  0838  2843               	goto	l3875
 11538  0839  3001               	movlw	1
 11539  083A  07F6               	addwf	atoi@s,f
 11540  083B  3000               	movlw	0
 11541  083C  3DF7               	addwfc	atoi@s+1,f
 11542  083D  2812               	goto	l3859
 11543  083E                     l3873:	
 11544  083E  3001               	movlw	1
 11545  083F  00A0               	movwf	atoi@neg
 11546  0840  3000               	movlw	0
 11547  0841  00A1               	movwf	atoi@neg+1
 11548  0842  2876               	goto	l1036
 11549  0843                     l3875:	
 11550  0843  0876               	movf	atoi@s,w
 11551  0844  0084               	movwf	4
 11552  0845  0877               	movf	atoi@s+1,w
 11553  0846  0085               	movwf	5
 11554  0847  0800               	movf	0,w	;code access
 11555  0848  00F8               	movwf	??_atoi
 11556  0849  01F9               	clrf	??_atoi+1
 11557                           
 11558                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11559                           ; Switch size 1, requested type "simple"
 11560                           ; Number of cases is 1, Range of values is 0 to 0
 11561                           ; switch strategies available:
 11562                           ; Name         Instructions Cycles
 11563                           ; simple_byte            4     3 (average)
 11564                           ; direct_byte            8     6 (fixed)
 11565                           ; jumptable            260     6 (fixed)
 11566                           ;	Chosen strategy is simple_byte
 11567  084A  0879               	movf	??_atoi+1,w
 11568  084B  3A00               	xorlw	0	; case 0
 11569  084C  1903               	skipnz
 11570  084D  284F               	goto	l4279
 11571  084E  287A               	goto	l3881
 11572  084F                     l4279:	
 11573                           
 11574                           ; Switch size 1, requested type "simple"
 11575                           ; Number of cases is 2, Range of values is 43 to 45
 11576                           ; switch strategies available:
 11577                           ; Name         Instructions Cycles
 11578                           ; simple_byte            7     4 (average)
 11579                           ; direct_byte           15     9 (fixed)
 11580                           ; jumptable            263     9 (fixed)
 11581                           ;	Chosen strategy is simple_byte
 11582  084F  0878               	movf	??_atoi,w
 11583  0850  3A2B               	xorlw	43	; case 43
 11584  0851  1903               	skipnz
 11585  0852  2876               	goto	l1036
 11586  0853  3A06               	xorlw	6	; case 45
 11587  0854  1903               	skipnz
 11588  0855  283E               	goto	l3873
 11589  0856  287A               	goto	l3881
 11590  0857                     l3877:	
 11591  0857  0876               	movf	atoi@s,w
 11592  0858  0084               	movwf	4
 11593  0859  0877               	movf	atoi@s+1,w
 11594  085A  0085               	movwf	5
 11595  085B  0800               	movf	0,w	;code access
 11596  085C  00F8               	movwf	??_atoi
 11597  085D  0828               	movf	atoi@n+1,w
 11598  085E  00F1               	movwf	___wmul@multiplier+1
 11599  085F  0827               	movf	atoi@n,w
 11600  0860  00F0               	movwf	___wmul@multiplier
 11601  0861  300A               	movlw	10
 11602  0862  00F2               	movwf	___wmul@multiplicand
 11603  0863  3000               	movlw	0
 11604  0864  00F3               	movwf	___wmul@multiplicand+1
 11605  0865  3191  2144  3188   	fcall	___wmul
 11606  0868  0871               	movf	?___wmul+1,w
 11607  0869  00FA               	movwf	??_atoi+2
 11608  086A  0878               	movf	??_atoi,w
 11609  086B  0270               	subwf	?___wmul,w
 11610  086C  00F9               	movwf	??_atoi+1
 11611  086D  1C03               	skipc
 11612  086E  03FA               	decf	??_atoi+2,f
 11613  086F  0879               	movf	??_atoi+1,w
 11614  0870  3E30               	addlw	48
 11615  0871  0020               	movlb	0	; select bank0
 11616  0872  00A7               	movwf	atoi@n
 11617  0873  3000               	movlw	0
 11618  0874  3D7A               	addwfc	??_atoi+2,w
 11619  0875  00A8               	movwf	atoi@n+1
 11620  0876                     l1036:	
 11621  0876  3001               	movlw	1
 11622  0877  07F6               	addwf	atoi@s,f
 11623  0878  3000               	movlw	0
 11624  0879  3DF7               	addwfc	atoi@s+1,f
 11625  087A                     l3881:	
 11626  087A  0876               	movf	atoi@s,w
 11627  087B  0084               	movwf	4
 11628  087C  0877               	movf	atoi@s+1,w
 11629  087D  0085               	movwf	5
 11630  087E  0800               	movf	0,w	;code access
 11631  087F  3ED0               	addlw	208
 11632  0880  00F8               	movwf	??_atoi
 11633  0881  30FF               	movlw	255
 11634  0882  1803               	skipnc
 11635  0883  3000               	movlw	0
 11636  0884  00F9               	movwf	??_atoi+1
 11637  0885  3000               	movlw	0
 11638  0886  0279               	subwf	??_atoi+1,w
 11639  0887  300A               	movlw	10
 11640  0888  1903               	skipnz
 11641  0889  0278               	subwf	??_atoi,w
 11642  088A  1803               	btfsc	3,0
 11643  088B  288E               	goto	u5240
 11644  088C  3001               	movlw	1
 11645  088D  288F               	goto	u5250
 11646  088E                     u5240:	
 11647  088E  3000               	movlw	0
 11648  088F                     u5250:	
 11649  088F  00FA               	movwf	??_atoi+2
 11650  0890  01FB               	clrf	??_atoi+3
 11651  0891  087A               	movf	??_atoi+2,w
 11652  0892  00A4               	movwf	_atoi$1140
 11653  0893  087B               	movf	??_atoi+3,w
 11654  0894  00A5               	movwf	_atoi$1140+1
 11655  0895  0824               	movf	_atoi$1140,w
 11656  0896  0425               	iorwf	_atoi$1140+1,w
 11657  0897  1D03               	btfss	3,2
 11658  0898  2857               	goto	l3877
 11659  0899  0820               	movf	atoi@neg,w
 11660  089A  0421               	iorwf	atoi@neg+1,w
 11661  089B  1D03               	btfss	3,2
 11662  089C  28A9               	goto	l3891
 11663  089D  0927               	comf	atoi@n,w
 11664  089E  00F8               	movwf	??_atoi
 11665  089F  0928               	comf	atoi@n+1,w
 11666  08A0  00F9               	movwf	??_atoi+1
 11667  08A1  0AF8               	incf	??_atoi,f
 11668  08A2  1903               	skipnz
 11669  08A3  0AF9               	incf	??_atoi+1,f
 11670  08A4  0878               	movf	??_atoi,w
 11671  08A5  00F6               	movwf	?_atoi
 11672  08A6  0879               	movf	??_atoi+1,w
 11673  08A7  00F7               	movwf	?_atoi+1
 11674  08A8  0008               	return
 11675  08A9                     l3891:	
 11676  08A9  0828               	movf	atoi@n+1,w
 11677  08AA  00F7               	movwf	?_atoi+1
 11678  08AB  0827               	movf	atoi@n,w
 11679  08AC  00F6               	movwf	?_atoi
 11680  08AD  0008               	return
 11681  08AE                     __end_of_atoi:	
 11682                           
 11683                           	psect	text29
 11684  115F                     __ptext29:	
 11685 ;; *************** function _isspace *****************
 11686 ;; Defined at:
 11687 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 11688 ;; Parameters:    Size  Location     Type
 11689 ;;  c               2    0[COMMON] int 
 11690 ;; Auto vars:     Size  Location     Type
 11691 ;;		None
 11692 ;; Return value:  Size  Location     Type
 11693 ;;                  2    0[COMMON] int 
 11694 ;; Registers used:
 11695 ;;		wreg, status,2, status,0
 11696 ;; Tracked objects:
 11697 ;;		On entry : 0/0
 11698 ;;		On exit  : 0/0
 11699 ;;		Unchanged: 0/0
 11700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11701 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11702 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11703 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11704 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11705 ;;Total ram usage:        5 bytes
 11706 ;; Hardware stack levels used:    1
 11707 ;; This function calls:
 11708 ;;		Nothing
 11709 ;; This function is called by:
 11710 ;;		_atoi
 11711 ;; This function uses a non-reentrant model
 11712 ;;
 11713                           
 11714                           
 11715                           ;psect for function _isspace
 11716  115F                     _isspace:	
 11717                           
 11718                           ;incstack = 0
 11719                           ; Regs used in _isspace: [wreg+status,2+status,0]
 11720  115F  01F4               	clrf	_isspace$1169
 11721  1160  0AF4               	incf	_isspace$1169,f
 11722  1161  3020               	movlw	32
 11723  1162  0670               	xorwf	isspace@c,w
 11724  1163  0471               	iorwf	isspace@c+1,w
 11725  1164  1903               	btfsc	3,2
 11726  1165  2973               	goto	l3559
 11727  1166  0870               	movf	isspace@c,w
 11728  1167  3EF7               	addlw	247
 11729  1168  00F2               	movwf	??_isspace
 11730  1169  30FF               	movlw	255
 11731  116A  3D71               	addwfc	isspace@c+1,w
 11732  116B  00F3               	movwf	??_isspace+1
 11733  116C  3000               	movlw	0
 11734  116D  0273               	subwf	??_isspace+1,w
 11735  116E  3005               	movlw	5
 11736  116F  1903               	skipnz
 11737  1170  0272               	subwf	??_isspace,w
 11738  1171  1803               	btfsc	3,0
 11739  1172  01F4               	clrf	_isspace$1169
 11740  1173                     l3559:	
 11741  1173  0874               	movf	_isspace$1169,w
 11742  1174  00F2               	movwf	??_isspace
 11743  1175  01F3               	clrf	??_isspace+1
 11744  1176  0872               	movf	??_isspace,w
 11745  1177  00F0               	movwf	?_isspace
 11746  1178  0873               	movf	??_isspace+1,w
 11747  1179  00F1               	movwf	?_isspace+1
 11748  117A  0008               	return
 11749  117B                     __end_of_isspace:	
 11750                           
 11751                           	psect	text30
 11752  10E5                     __ptext30:	
 11753 ;; *************** function _isdigit *****************
 11754 ;; Defined at:
 11755 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 11756 ;; Parameters:    Size  Location     Type
 11757 ;;  c               2    0[COMMON] int 
 11758 ;; Auto vars:     Size  Location     Type
 11759 ;;		None
 11760 ;; Return value:  Size  Location     Type
 11761 ;;                  2    0[COMMON] int 
 11762 ;; Registers used:
 11763 ;;		wreg, status,2, status,0
 11764 ;; Tracked objects:
 11765 ;;		On entry : 0/0
 11766 ;;		On exit  : 0/0
 11767 ;;		Unchanged: 0/0
 11768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11769 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11771 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11772 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11773 ;;Total ram usage:        6 bytes
 11774 ;; Hardware stack levels used:    1
 11775 ;; This function calls:
 11776 ;;		Nothing
 11777 ;; This function is called by:
 11778 ;;		_vfpfcnvrt
 11779 ;;		_atoi
 11780 ;; This function uses a non-reentrant model
 11781 ;;
 11782                           
 11783                           
 11784                           ;psect for function _isdigit
 11785  10E5                     _isdigit:	
 11786                           
 11787                           ;incstack = 0
 11788                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 11789  10E5  0870               	movf	isdigit@c,w
 11790  10E6  3ED0               	addlw	208
 11791  10E7  00F2               	movwf	??_isdigit
 11792  10E8  30FF               	movlw	255
 11793  10E9  3D71               	addwfc	isdigit@c+1,w
 11794  10EA  00F3               	movwf	??_isdigit+1
 11795  10EB  3000               	movlw	0
 11796  10EC  0273               	subwf	??_isdigit+1,w
 11797  10ED  300A               	movlw	10
 11798  10EE  1903               	skipnz
 11799  10EF  0272               	subwf	??_isdigit,w
 11800  10F0  1803               	btfsc	3,0
 11801  10F1  28F4               	goto	u3680
 11802  10F2  3001               	movlw	1
 11803  10F3  28F5               	goto	u3690
 11804  10F4                     u3680:	
 11805  10F4  3000               	movlw	0
 11806  10F5                     u3690:	
 11807  10F5  00F4               	movwf	??_isdigit+2
 11808  10F6  01F5               	clrf	??_isdigit+3
 11809  10F7  0874               	movf	??_isdigit+2,w
 11810  10F8  00F0               	movwf	?_isdigit
 11811  10F9  0875               	movf	??_isdigit+3,w
 11812  10FA  00F1               	movwf	?_isdigit+1
 11813  10FB  0008               	return
 11814  10FC                     __end_of_isdigit:	
 11815                           
 11816                           	psect	text31
 11817  1144                     __ptext31:	
 11818 ;; *************** function ___wmul *****************
 11819 ;; Defined at:
 11820 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 11821 ;; Parameters:    Size  Location     Type
 11822 ;;  multiplier      2    0[COMMON] unsigned int 
 11823 ;;  multiplicand    2    2[COMMON] unsigned int 
 11824 ;; Auto vars:     Size  Location     Type
 11825 ;;  product         2    4[COMMON] unsigned int 
 11826 ;; Return value:  Size  Location     Type
 11827 ;;                  2    0[COMMON] unsigned int 
 11828 ;; Registers used:
 11829 ;;		wreg, status,2, status,0
 11830 ;; Tracked objects:
 11831 ;;		On entry : 0/0
 11832 ;;		On exit  : 0/0
 11833 ;;		Unchanged: 0/0
 11834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11835 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11836 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11838 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11839 ;;Total ram usage:        6 bytes
 11840 ;; Hardware stack levels used:    1
 11841 ;; This function calls:
 11842 ;;		Nothing
 11843 ;; This function is called by:
 11844 ;;		_atoi
 11845 ;; This function uses a non-reentrant model
 11846 ;;
 11847                           
 11848                           
 11849                           ;psect for function ___wmul
 11850  1144                     ___wmul:	
 11851                           
 11852                           ;incstack = 0
 11853                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11854  1144  01F4               	clrf	___wmul@product
 11855  1145  01F5               	clrf	___wmul@product+1
 11856  1146                     l3095:	
 11857  1146  1C70               	btfss	___wmul@multiplier,0
 11858  1147  294C               	goto	l557
 11859  1148  0872               	movf	___wmul@multiplicand,w
 11860  1149  07F4               	addwf	___wmul@product,f
 11861  114A  0873               	movf	___wmul@multiplicand+1,w
 11862  114B  3DF5               	addwfc	___wmul@product+1,f
 11863  114C                     l557:	
 11864  114C  3001               	movlw	1
 11865  114D                     u3715:	
 11866  114D  35F2               	lslf	___wmul@multiplicand,f
 11867  114E  0DF3               	rlf	___wmul@multiplicand+1,f
 11868  114F  0B89               	decfsz	9,f
 11869  1150  294D               	goto	u3715
 11870  1151  3001               	movlw	1
 11871  1152                     u3725:	
 11872  1152  36F1               	lsrf	___wmul@multiplier+1,f
 11873  1153  0CF0               	rrf	___wmul@multiplier,f
 11874  1154  0B89               	decfsz	9,f
 11875  1155  2952               	goto	u3725
 11876  1156  0870               	movf	___wmul@multiplier,w
 11877  1157  0471               	iorwf	___wmul@multiplier+1,w
 11878  1158  1D03               	btfss	3,2
 11879  1159  2946               	goto	l3095
 11880  115A  0875               	movf	___wmul@product+1,w
 11881  115B  00F1               	movwf	?___wmul+1
 11882  115C  0874               	movf	___wmul@product,w
 11883  115D  00F0               	movwf	?___wmul
 11884  115E  0008               	return
 11885  115F                     __end_of___wmul:	
 11886                           
 11887                           	psect	text32
 11888  15B1                     __ptext32:	
 11889 ;; *************** function ___xxtofl *****************
 11890 ;; Defined at:
 11891 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 11892 ;; Parameters:    Size  Location     Type
 11893 ;;  sign            1    wreg     unsigned char 
 11894 ;;  val             4    0[COMMON] long 
 11895 ;; Auto vars:     Size  Location     Type
 11896 ;;  sign            1    8[COMMON] unsigned char 
 11897 ;;  arg             4   10[COMMON] unsigned long 
 11898 ;;  exp             1    9[COMMON] unsigned char 
 11899 ;; Return value:  Size  Location     Type
 11900 ;;                  4    0[COMMON] unsigned char 
 11901 ;; Registers used:
 11902 ;;		wreg, status,2, status,0
 11903 ;; Tracked objects:
 11904 ;;		On entry : 0/0
 11905 ;;		On exit  : 0/0
 11906 ;;		Unchanged: 0/0
 11907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11908 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11909 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11910 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11911 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11912 ;;Total ram usage:       14 bytes
 11913 ;; Hardware stack levels used:    1
 11914 ;; This function calls:
 11915 ;;		Nothing
 11916 ;; This function is called by:
 11917 ;;		_main
 11918 ;; This function uses a non-reentrant model
 11919 ;;
 11920                           
 11921                           
 11922                           ;psect for function ___xxtofl
 11923  15B1                     ___xxtofl:	
 11924                           
 11925                           ;incstack = 0
 11926                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 11927                           ;___xxtofl@sign stored from wreg
 11928  15B1  00F8               	movwf	___xxtofl@sign
 11929  15B2  0878               	movf	___xxtofl@sign,w
 11930  15B3  1D03               	btfss	3,2
 11931  15B4  1FF3               	btfss	___xxtofl@val+3,7
 11932  15B5  2DC6               	goto	l4151
 11933  15B6  0970               	comf	___xxtofl@val,w
 11934  15B7  00FA               	movwf	___xxtofl@arg
 11935  15B8  0971               	comf	___xxtofl@val+1,w
 11936  15B9  00FB               	movwf	___xxtofl@arg+1
 11937  15BA  0972               	comf	___xxtofl@val+2,w
 11938  15BB  00FC               	movwf	___xxtofl@arg+2
 11939  15BC  0973               	comf	___xxtofl@val+3,w
 11940  15BD  00FD               	movwf	___xxtofl@arg+3
 11941  15BE  0AFA               	incf	___xxtofl@arg,f
 11942  15BF  1903               	skipnz
 11943  15C0  0AFB               	incf	___xxtofl@arg+1,f
 11944  15C1  1903               	skipnz
 11945  15C2  0AFC               	incf	___xxtofl@arg+2,f
 11946  15C3  1903               	skipnz
 11947  15C4  0AFD               	incf	___xxtofl@arg+3,f
 11948  15C5  2DCE               	goto	l992
 11949  15C6                     l4151:	
 11950  15C6  0873               	movf	___xxtofl@val+3,w
 11951  15C7  00FD               	movwf	___xxtofl@arg+3
 11952  15C8  0872               	movf	___xxtofl@val+2,w
 11953  15C9  00FC               	movwf	___xxtofl@arg+2
 11954  15CA  0871               	movf	___xxtofl@val+1,w
 11955  15CB  00FB               	movwf	___xxtofl@arg+1
 11956  15CC  0870               	movf	___xxtofl@val,w
 11957  15CD  00FA               	movwf	___xxtofl@arg
 11958  15CE                     l992:	
 11959  15CE  0873               	movf	___xxtofl@val+3,w
 11960  15CF  0472               	iorwf	___xxtofl@val+2,w
 11961  15D0  0471               	iorwf	___xxtofl@val+1,w
 11962  15D1  0470               	iorwf	___xxtofl@val,w
 11963  15D2  1D03               	skipz
 11964  15D3  2DDD               	goto	l4157
 11965  15D4  3000               	movlw	0
 11966  15D5  00F3               	movwf	?___xxtofl+3
 11967  15D6  3000               	movlw	0
 11968  15D7  00F2               	movwf	?___xxtofl+2
 11969  15D8  3000               	movlw	0
 11970  15D9  00F1               	movwf	?___xxtofl+1
 11971  15DA  3000               	movlw	0
 11972  15DB  00F0               	movwf	?___xxtofl
 11973  15DC  0008               	return
 11974  15DD                     l4157:	
 11975  15DD  3096               	movlw	150
 11976  15DE  00F4               	movwf	??___xxtofl
 11977  15DF  0874               	movf	??___xxtofl,w
 11978  15E0  00F9               	movwf	___xxtofl@exp
 11979  15E1                     l4161:	
 11980  15E1  30FE               	movlw	254
 11981  15E2  057D               	andwf	___xxtofl@arg+3,w
 11982  15E3  1903               	btfsc	3,2
 11983  15E4  2E04               	goto	l998
 11984  15E5  3001               	movlw	1
 11985  15E6  00F4               	movwf	??___xxtofl
 11986  15E7  0874               	movf	??___xxtofl,w
 11987  15E8  07F9               	addwf	___xxtofl@exp,f
 11988  15E9  3001               	movlw	1
 11989  15EA                     u5545:	
 11990  15EA  36FD               	lsrf	___xxtofl@arg+3,f
 11991  15EB  0CFC               	rrf	___xxtofl@arg+2,f
 11992  15EC  0CFB               	rrf	___xxtofl@arg+1,f
 11993  15ED  0CFA               	rrf	___xxtofl@arg,f
 11994  15EE  0B89               	decfsz	9,f
 11995  15EF  2DEA               	goto	u5545
 11996  15F0  2DE1               	goto	l4161
 11997  15F1                     l4163:	
 11998  15F1  3001               	movlw	1
 11999  15F2  00F4               	movwf	??___xxtofl
 12000  15F3  0874               	movf	??___xxtofl,w
 12001  15F4  07F9               	addwf	___xxtofl@exp,f
 12002  15F5  3001               	movlw	1
 12003  15F6  07FA               	addwf	___xxtofl@arg,f
 12004  15F7  3000               	movlw	0
 12005  15F8  3DFB               	addwfc	___xxtofl@arg+1,f
 12006  15F9  3000               	movlw	0
 12007  15FA  3DFC               	addwfc	___xxtofl@arg+2,f
 12008  15FB  3000               	movlw	0
 12009  15FC  3DFD               	addwfc	___xxtofl@arg+3,f
 12010  15FD  3001               	movlw	1
 12011  15FE                     u5565:	
 12012  15FE  36FD               	lsrf	___xxtofl@arg+3,f
 12013  15FF  0CFC               	rrf	___xxtofl@arg+2,f
 12014  1600  0CFB               	rrf	___xxtofl@arg+1,f
 12015  1601  0CFA               	rrf	___xxtofl@arg,f
 12016  1602  0B89               	decfsz	9,f
 12017  1603  2DFE               	goto	u5565
 12018  1604                     l998:	
 12019  1604  30FF               	movlw	255
 12020  1605  057D               	andwf	___xxtofl@arg+3,w
 12021  1606  1903               	btfsc	3,2
 12022  1607  2E16               	goto	l4171
 12023  1608  2DF1               	goto	l4163
 12024  1609                     l4173:	
 12025  1609  3002               	movlw	2
 12026  160A  0279               	subwf	___xxtofl@exp,w
 12027  160B  1C03               	btfss	3,0
 12028  160C  2E18               	goto	l1005
 12029  160D  3001               	movlw	1
 12030  160E  02F9               	subwf	___xxtofl@exp,f
 12031  160F  3001               	movlw	1
 12032  1610                     u5585:	
 12033  1610  35FA               	lslf	___xxtofl@arg,f
 12034  1611  0DFB               	rlf	___xxtofl@arg+1,f
 12035  1612  0DFC               	rlf	___xxtofl@arg+2,f
 12036  1613  0DFD               	rlf	___xxtofl@arg+3,f
 12037  1614  0B89               	decfsz	9,f
 12038  1615  2E10               	goto	u5585
 12039  1616                     l4171:	
 12040  1616  1FFC               	btfss	___xxtofl@arg+2,7
 12041  1617  2E09               	goto	l4173
 12042  1618                     l1005:	
 12043  1618  1879               	btfsc	___xxtofl@exp,0
 12044  1619  2E22               	goto	l1006
 12045  161A  30FF               	movlw	255
 12046  161B  05FA               	andwf	___xxtofl@arg,f
 12047  161C  30FF               	movlw	255
 12048  161D  05FB               	andwf	___xxtofl@arg+1,f
 12049  161E  307F               	movlw	127
 12050  161F  05FC               	andwf	___xxtofl@arg+2,f
 12051  1620  30FF               	movlw	255
 12052  1621  05FD               	andwf	___xxtofl@arg+3,f
 12053  1622                     l1006:	
 12054  1622  1003               	clrc
 12055  1623  0CF9               	rrf	___xxtofl@exp,f
 12056  1624  0879               	movf	___xxtofl@exp,w
 12057  1625  00F4               	movwf	??___xxtofl
 12058  1626  01F5               	clrf	??___xxtofl+1
 12059  1627  01F6               	clrf	??___xxtofl+2
 12060  1628  01F7               	clrf	??___xxtofl+3
 12061  1629  3018               	movlw	24
 12062  162A                     u5625:	
 12063  162A  35F4               	lslf	??___xxtofl,f
 12064  162B  0DF5               	rlf	??___xxtofl+1,f
 12065  162C  0DF6               	rlf	??___xxtofl+2,f
 12066  162D  0DF7               	rlf	??___xxtofl+3,f
 12067  162E  0B89               	decfsz	9,f
 12068  162F  2E2A               	goto	u5625
 12069  1630  0874               	movf	??___xxtofl,w
 12070  1631  04FA               	iorwf	___xxtofl@arg,f
 12071  1632  0875               	movf	??___xxtofl+1,w
 12072  1633  04FB               	iorwf	___xxtofl@arg+1,f
 12073  1634  0876               	movf	??___xxtofl+2,w
 12074  1635  04FC               	iorwf	___xxtofl@arg+2,f
 12075  1636  0877               	movf	??___xxtofl+3,w
 12076  1637  04FD               	iorwf	___xxtofl@arg+3,f
 12077  1638  0878               	movf	___xxtofl@sign,w
 12078  1639  1D03               	btfss	3,2
 12079  163A  1FF3               	btfss	___xxtofl@val+3,7
 12080  163B  2E3D               	goto	l4185
 12081  163C  17FD               	bsf	___xxtofl@arg+3,7
 12082  163D                     l4185:	
 12083  163D  087D               	movf	___xxtofl@arg+3,w
 12084  163E  00F3               	movwf	?___xxtofl+3
 12085  163F  087C               	movf	___xxtofl@arg+2,w
 12086  1640  00F2               	movwf	?___xxtofl+2
 12087  1641  087B               	movf	___xxtofl@arg+1,w
 12088  1642  00F1               	movwf	?___xxtofl+1
 12089  1643  087A               	movf	___xxtofl@arg,w
 12090  1644  00F0               	movwf	?___xxtofl
 12091  1645  0008               	return
 12092  1646                     __end_of___xxtofl:	
 12093                           
 12094                           	psect	text33
 12095  0005                     __ptext33:	
 12096 ;; *************** function _SYSTEM_Initialize *****************
 12097 ;; Defined at:
 12098 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12099 ;; Parameters:    Size  Location     Type
 12100 ;;		None
 12101 ;; Auto vars:     Size  Location     Type
 12102 ;;		None
 12103 ;; Return value:  Size  Location     Type
 12104 ;;                  1    wreg      void 
 12105 ;; Registers used:
 12106 ;;		wreg, status,2, status,0, pclath, cstack
 12107 ;; Tracked objects:
 12108 ;;		On entry : 0/0
 12109 ;;		On exit  : 0/0
 12110 ;;		Unchanged: 0/0
 12111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12116 ;;Total ram usage:        0 bytes
 12117 ;; Hardware stack levels used:    1
 12118 ;; Hardware stack levels required when called:    2
 12119 ;; This function calls:
 12120 ;;		_ADC_Initialize
 12121 ;;		_EUSART_Initialize
 12122 ;;		_OSCILLATOR_Initialize
 12123 ;;		_PIN_MANAGER_Initialize
 12124 ;;		_PWM3_Initialize
 12125 ;;		_TMR2_Initialize
 12126 ;; This function is called by:
 12127 ;;		_main
 12128 ;; This function uses a non-reentrant model
 12129 ;;
 12130                           
 12131                           
 12132                           ;psect for function _SYSTEM_Initialize
 12133  0005                     _SYSTEM_Initialize:	
 12134                           
 12135                           ;mcc_generated_files/mcc.c: 52:     PIN_MANAGER_Initialize();
 12136                           
 12137                           ;incstack = 0
 12138                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12139  0005  3192  2240  3180   	fcall	_PIN_MANAGER_Initialize
 12140                           
 12141                           ;mcc_generated_files/mcc.c: 53:     OSCILLATOR_Initialize();
 12142  0008  3190  2099  3180   	fcall	_OSCILLATOR_Initialize
 12143                           
 12144                           ;mcc_generated_files/mcc.c: 54:     PWM3_Initialize();
 12145  000B  3190  20BA  3180   	fcall	_PWM3_Initialize
 12146                           
 12147                           ;mcc_generated_files/mcc.c: 55:     TMR2_Initialize();
 12148  000E  3190  20C5  3180   	fcall	_TMR2_Initialize
 12149                           
 12150                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
 12151  0011  3190  20A8  3180   	fcall	_ADC_Initialize
 12152                           
 12153                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
 12154  0014  3191  21D8         	fcall	_EUSART_Initialize
 12155  0016  0008               	return
 12156  0017                     __end_of_SYSTEM_Initialize:	
 12157                           
 12158                           	psect	text34
 12159  10C5                     __ptext34:	
 12160 ;; *************** function _TMR2_Initialize *****************
 12161 ;; Defined at:
 12162 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 12163 ;; Parameters:    Size  Location     Type
 12164 ;;		None
 12165 ;; Auto vars:     Size  Location     Type
 12166 ;;		None
 12167 ;; Return value:  Size  Location     Type
 12168 ;;                  1    wreg      void 
 12169 ;; Registers used:
 12170 ;;		wreg, status,2
 12171 ;; Tracked objects:
 12172 ;;		On entry : 0/0
 12173 ;;		On exit  : 0/0
 12174 ;;		Unchanged: 0/0
 12175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12180 ;;Total ram usage:        0 bytes
 12181 ;; Hardware stack levels used:    1
 12182 ;; This function calls:
 12183 ;;		Nothing
 12184 ;; This function is called by:
 12185 ;;		_SYSTEM_Initialize
 12186 ;; This function uses a non-reentrant model
 12187 ;;
 12188                           
 12189                           
 12190                           ;psect for function _TMR2_Initialize
 12191  10C5                     _TMR2_Initialize:	
 12192                           
 12193                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x00;
 12194                           
 12195                           ;incstack = 0
 12196                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 12197  10C5  0020               	movlb	0	; select bank0
 12198  10C6  019E               	clrf	30	;volatile
 12199                           
 12200                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 12201  10C7  019D               	clrf	29	;volatile
 12202                           
 12203                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 12204  10C8  019F               	clrf	31	;volatile
 12205                           
 12206                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x9B;
 12207  10C9  309B               	movlw	155
 12208  10CA  009B               	movwf	27	;volatile
 12209                           
 12210                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 12211  10CB  019A               	clrf	26	;volatile
 12212                           
 12213                           ;mcc_generated_files/tmr2.c: 82:     PIR1bits.TMR2IF = 0;
 12214  10CC  1090               	bcf	16,1	;volatile
 12215                           
 12216                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xF0;
 12217  10CD  30F0               	movlw	240
 12218  10CE  009C               	movwf	28	;volatile
 12219  10CF  0008               	return
 12220  10D0                     __end_of_TMR2_Initialize:	
 12221                           
 12222                           	psect	text35
 12223  10BA                     __ptext35:	
 12224 ;; *************** function _PWM3_Initialize *****************
 12225 ;; Defined at:
 12226 ;;		line 58 in file "mcc_generated_files/pwm3.c"
 12227 ;; Parameters:    Size  Location     Type
 12228 ;;		None
 12229 ;; Auto vars:     Size  Location     Type
 12230 ;;		None
 12231 ;; Return value:  Size  Location     Type
 12232 ;;                  1    wreg      void 
 12233 ;; Registers used:
 12234 ;;		wreg, status,2, status,0
 12235 ;; Tracked objects:
 12236 ;;		On entry : 0/0
 12237 ;;		On exit  : 0/0
 12238 ;;		Unchanged: 0/0
 12239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12244 ;;Total ram usage:        0 bytes
 12245 ;; Hardware stack levels used:    1
 12246 ;; This function calls:
 12247 ;;		Nothing
 12248 ;; This function is called by:
 12249 ;;		_SYSTEM_Initialize
 12250 ;; This function uses a non-reentrant model
 12251 ;;
 12252                           
 12253                           
 12254                           ;psect for function _PWM3_Initialize
 12255  10BA                     _PWM3_Initialize:	
 12256                           
 12257                           ;mcc_generated_files/pwm3.c: 62:     PWM3CON = 0x80;
 12258                           
 12259                           ;incstack = 0
 12260                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
 12261  10BA  3080               	movlw	128
 12262  10BB  002C               	movlb	12	; select bank12
 12263  10BC  0099               	movwf	25	;volatile
 12264                           
 12265                           ;mcc_generated_files/pwm3.c: 65:     PWM3DCH = 0x9B;
 12266  10BD  309B               	movlw	155
 12267  10BE  0098               	movwf	24	;volatile
 12268                           
 12269                           ;mcc_generated_files/pwm3.c: 68:     PWM3DCL = 0xC0;
 12270  10BF  30C0               	movlw	192
 12271  10C0  0097               	movwf	23	;volatile
 12272                           
 12273                           ;mcc_generated_files/pwm3.c: 71:     CCPTMRSbits.P3TSEL = 0;
 12274  10C1  30CF               	movlw	-49
 12275  10C2  0025               	movlb	5	; select bank5
 12276  10C3  059E               	andwf	30,f	;volatile
 12277  10C4  0008               	return
 12278  10C5                     __end_of_PWM3_Initialize:	
 12279                           
 12280                           	psect	text36
 12281  1240                     __ptext36:	
 12282 ;; *************** function _PIN_MANAGER_Initialize *****************
 12283 ;; Defined at:
 12284 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 12285 ;; Parameters:    Size  Location     Type
 12286 ;;		None
 12287 ;; Auto vars:     Size  Location     Type
 12288 ;;		None
 12289 ;; Return value:  Size  Location     Type
 12290 ;;                  1    wreg      void 
 12291 ;; Registers used:
 12292 ;;		wreg, status,2
 12293 ;; Tracked objects:
 12294 ;;		On entry : 0/0
 12295 ;;		On exit  : 0/0
 12296 ;;		Unchanged: 0/0
 12297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12302 ;;Total ram usage:        0 bytes
 12303 ;; Hardware stack levels used:    1
 12304 ;; This function calls:
 12305 ;;		Nothing
 12306 ;; This function is called by:
 12307 ;;		_SYSTEM_Initialize
 12308 ;; This function uses a non-reentrant model
 12309 ;;
 12310                           
 12311                           
 12312                           ;psect for function _PIN_MANAGER_Initialize
 12313  1240                     _PIN_MANAGER_Initialize:	
 12314                           
 12315                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 12316                           
 12317                           ;incstack = 0
 12318                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12319  1240  0022               	movlb	2	; select bank2
 12320  1241  018C               	clrf	12	;volatile
 12321                           
 12322                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 12323  1242  018D               	clrf	13	;volatile
 12324                           
 12325                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 12326  1243  018E               	clrf	14	;volatile
 12327                           
 12328                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x37;
 12329  1244  3037               	movlw	55
 12330  1245  0021               	movlb	1	; select bank1
 12331  1246  008C               	movwf	12	;volatile
 12332                           
 12333                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x30;
 12334  1247  3030               	movlw	48
 12335  1248  008D               	movwf	13	;volatile
 12336                           
 12337                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
 12338  1249  30FF               	movlw	255
 12339  124A  008E               	movwf	14	;volatile
 12340                           
 12341                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x4F;
 12342  124B  304F               	movlw	79
 12343  124C  0023               	movlb	3	; select bank3
 12344  124D  008E               	movwf	14	;volatile
 12345                           
 12346                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x30;
 12347  124E  3030               	movlw	48
 12348  124F  008D               	movwf	13	;volatile
 12349                           
 12350                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
 12351  1250  3017               	movlw	23
 12352  1251  008C               	movwf	12	;volatile
 12353                           
 12354                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 12355  1252  0024               	movlb	4	; select bank4
 12356  1253  018D               	clrf	13	;volatile
 12357                           
 12358                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
 12359  1254  018C               	clrf	12	;volatile
 12360                           
 12361                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 12362  1255  018E               	clrf	14	;volatile
 12363                           
 12364                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
 12365  1256  0021               	movlb	1	; select bank1
 12366  1257  1795               	bsf	21,7	;volatile
 12367                           
 12368                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
 12369  1258  0025               	movlb	5	; select bank5
 12370  1259  018C               	clrf	12	;volatile
 12371                           
 12372                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
 12373  125A  018D               	clrf	13	;volatile
 12374                           
 12375                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
 12376  125B  018E               	clrf	14	;volatile
 12377                           
 12378                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0x37;
 12379  125C  3037               	movlw	55
 12380  125D  0026               	movlb	6	; select bank6
 12381  125E  008C               	movwf	12	;volatile
 12382                           
 12383                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xF0;
 12384  125F  30F0               	movlw	240
 12385  1260  008D               	movwf	13	;volatile
 12386                           
 12387                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
 12388  1261  30FF               	movlw	255
 12389  1262  008E               	movwf	14	;volatile
 12390                           
 12391                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0x3F;
 12392  1263  303F               	movlw	63
 12393  1264  0027               	movlb	7	; select bank7
 12394  1265  008C               	movwf	12	;volatile
 12395                           
 12396                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xF0;
 12397  1266  30F0               	movlw	240
 12398  1267  008D               	movwf	13	;volatile
 12399                           
 12400                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
 12401  1268  30FF               	movlw	255
 12402  1269  008E               	movwf	14	;volatile
 12403                           
 12404                           ;mcc_generated_files/pin_manager.c: 114:     RXPPS = 0x17;
 12405  126A  3017               	movlw	23
 12406  126B  003C               	movlb	28	; select bank28
 12407  126C  00A4               	movwf	36	;volatile
 12408                           
 12409                           ;mcc_generated_files/pin_manager.c: 115:     RB6PPS = 0x0E;
 12410  126D  300E               	movlw	14
 12411  126E  003D               	movlb	29	; select bank29
 12412  126F  009E               	movwf	30	;volatile
 12413                           
 12414                           ;mcc_generated_files/pin_manager.c: 116:     RB7PPS = 0x12;
 12415  1270  3012               	movlw	18
 12416  1271  009F               	movwf	31	;volatile
 12417  1272  0008               	return
 12418  1273                     __end_of_PIN_MANAGER_Initialize:	
 12419                           
 12420                           	psect	text37
 12421  1099                     __ptext37:	
 12422 ;; *************** function _OSCILLATOR_Initialize *****************
 12423 ;; Defined at:
 12424 ;;		line 60 in file "mcc_generated_files/mcc.c"
 12425 ;; Parameters:    Size  Location     Type
 12426 ;;		None
 12427 ;; Auto vars:     Size  Location     Type
 12428 ;;		None
 12429 ;; Return value:  Size  Location     Type
 12430 ;;                  1    wreg      void 
 12431 ;; Registers used:
 12432 ;;		wreg, status,2
 12433 ;; Tracked objects:
 12434 ;;		On entry : 0/0
 12435 ;;		On exit  : 0/0
 12436 ;;		Unchanged: 0/0
 12437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12442 ;;Total ram usage:        0 bytes
 12443 ;; Hardware stack levels used:    1
 12444 ;; This function calls:
 12445 ;;		Nothing
 12446 ;; This function is called by:
 12447 ;;		_SYSTEM_Initialize
 12448 ;; This function uses a non-reentrant model
 12449 ;;
 12450                           
 12451                           
 12452                           ;psect for function _OSCILLATOR_Initialize
 12453  1099                     _OSCILLATOR_Initialize:	
 12454                           
 12455                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x6A;
 12456                           
 12457                           ;incstack = 0
 12458                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12459  1099  306A               	movlw	106
 12460  109A  0021               	movlb	1	; select bank1
 12461  109B  0099               	movwf	25	;volatile
 12462                           
 12463                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
 12464  109C  0198               	clrf	24	;volatile
 12465                           
 12466                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
 12467  109D  0022               	movlb	2	; select bank2
 12468  109E  0196               	clrf	22	;volatile
 12469  109F  0008               	return
 12470  10A0                     __end_of_OSCILLATOR_Initialize:	
 12471                           
 12472                           	psect	text38
 12473  11D8                     __ptext38:	
 12474 ;; *************** function _EUSART_Initialize *****************
 12475 ;; Defined at:
 12476 ;;		line 66 in file "mcc_generated_files/eusart.c"
 12477 ;; Parameters:    Size  Location     Type
 12478 ;;		None
 12479 ;; Auto vars:     Size  Location     Type
 12480 ;;		None
 12481 ;; Return value:  Size  Location     Type
 12482 ;;                  1    wreg      void 
 12483 ;; Registers used:
 12484 ;;		wreg, status,2, status,0, pclath, cstack
 12485 ;; Tracked objects:
 12486 ;;		On entry : 0/0
 12487 ;;		On exit  : 0/0
 12488 ;;		Unchanged: 0/0
 12489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12494 ;;Total ram usage:        0 bytes
 12495 ;; Hardware stack levels used:    1
 12496 ;; Hardware stack levels required when called:    1
 12497 ;; This function calls:
 12498 ;;		_EUSART_SetErrorHandler
 12499 ;;		_EUSART_SetFramingErrorHandler
 12500 ;;		_EUSART_SetOverrunErrorHandler
 12501 ;; This function is called by:
 12502 ;;		_SYSTEM_Initialize
 12503 ;; This function uses a non-reentrant model
 12504 ;;
 12505                           
 12506                           
 12507                           ;psect for function _EUSART_Initialize
 12508  11D8                     _EUSART_Initialize:	
 12509                           
 12510                           ;mcc_generated_files/eusart.c: 71:     BAUD1CON = 0x08;
 12511                           
 12512                           ;incstack = 0
 12513                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12514  11D8  3008               	movlw	8
 12515  11D9  0023               	movlb	3	; select bank3
 12516  11DA  009F               	movwf	31	;volatile
 12517                           
 12518                           ;mcc_generated_files/eusart.c: 74:     RC1STA = 0x90;
 12519  11DB  3090               	movlw	144
 12520  11DC  009D               	movwf	29	;volatile
 12521                           
 12522                           ;mcc_generated_files/eusart.c: 77:     TX1STA = 0x24;
 12523  11DD  3024               	movlw	36
 12524  11DE  009E               	movwf	30	;volatile
 12525                           
 12526                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x67;
 12527  11DF  3067               	movlw	103
 12528  11E0  009B               	movwf	27	;volatile
 12529                           
 12530                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
 12531  11E1  019C               	clrf	28	;volatile
 12532                           
 12533                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
 12534  11E2  3000               	movlw	0
 12535  11E3  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
 12536  11E4  3000               	movlw	0
 12537  11E5  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
 12538  11E6  3190  2087  3191   	fcall	_EUSART_SetFramingErrorHandler
 12539                           
 12540                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
 12541  11E9  3000               	movlw	0
 12542  11EA  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
 12543  11EB  3000               	movlw	0
 12544  11EC  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
 12545  11ED  3190  208D  3191   	fcall	_EUSART_SetOverrunErrorHandler
 12546                           
 12547                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
 12548  11F0  3000               	movlw	0
 12549  11F1  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
 12550  11F2  3000               	movlw	0
 12551  11F3  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
 12552  11F4  3190  2081         	fcall	_EUSART_SetErrorHandler
 12553                           
 12554                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
 12555  11F6  0022               	movlb	2	; select bank2
 12556  11F7  01DD               	clrf	_eusartRxLastError^(0+256)	;volatile
 12557  11F8  0008               	return
 12558  11F9                     __end_of_EUSART_Initialize:	
 12559                           
 12560                           	psect	text39
 12561  108D                     __ptext39:	
 12562 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
 12563 ;; Defined at:
 12564 ;;		line 170 in file "mcc_generated_files/eusart.c"
 12565 ;; Parameters:    Size  Location     Type
 12566 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 12567 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
 12568 ;; Auto vars:     Size  Location     Type
 12569 ;;		None
 12570 ;; Return value:  Size  Location     Type
 12571 ;;                  1    wreg      void 
 12572 ;; Registers used:
 12573 ;;		wreg
 12574 ;; Tracked objects:
 12575 ;;		On entry : 0/0
 12576 ;;		On exit  : 0/0
 12577 ;;		Unchanged: 0/0
 12578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12579 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12582 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12583 ;;Total ram usage:        2 bytes
 12584 ;; Hardware stack levels used:    1
 12585 ;; This function calls:
 12586 ;;		Nothing
 12587 ;; This function is called by:
 12588 ;;		_EUSART_Initialize
 12589 ;; This function uses a non-reentrant model
 12590 ;;
 12591                           
 12592                           
 12593                           ;psect for function _EUSART_SetOverrunErrorHandler
 12594  108D                     _EUSART_SetOverrunErrorHandler:	
 12595                           
 12596                           ;mcc_generated_files/eusart.c: 171:     EUSART_OverrunErrorHandler = interruptHandler;
 12597                           
 12598                           ;incstack = 0
 12599                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
 12600  108D  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
 12601  108E  0022               	movlb	2	; select bank2
 12602  108F  00E1               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
 12603  1090  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
 12604  1091  00E0               	movwf	_EUSART_OverrunErrorHandler^(0+256)
 12605  1092  0008               	return
 12606  1093                     __end_of_EUSART_SetOverrunErrorHandler:	
 12607                           
 12608                           	psect	text40
 12609  1087                     __ptext40:	
 12610 ;; *************** function _EUSART_SetFramingErrorHandler *****************
 12611 ;; Defined at:
 12612 ;;		line 166 in file "mcc_generated_files/eusart.c"
 12613 ;; Parameters:    Size  Location     Type
 12614 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 12615 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
 12616 ;; Auto vars:     Size  Location     Type
 12617 ;;		None
 12618 ;; Return value:  Size  Location     Type
 12619 ;;                  1    wreg      void 
 12620 ;; Registers used:
 12621 ;;		wreg
 12622 ;; Tracked objects:
 12623 ;;		On entry : 0/0
 12624 ;;		On exit  : 0/0
 12625 ;;		Unchanged: 0/0
 12626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12627 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12630 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12631 ;;Total ram usage:        2 bytes
 12632 ;; Hardware stack levels used:    1
 12633 ;; This function calls:
 12634 ;;		Nothing
 12635 ;; This function is called by:
 12636 ;;		_EUSART_Initialize
 12637 ;; This function uses a non-reentrant model
 12638 ;;
 12639                           
 12640                           
 12641                           ;psect for function _EUSART_SetFramingErrorHandler
 12642  1087                     _EUSART_SetFramingErrorHandler:	
 12643                           
 12644                           ;mcc_generated_files/eusart.c: 167:     EUSART_FramingErrorHandler = interruptHandler;
 12645                           
 12646                           ;incstack = 0
 12647                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
 12648  1087  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
 12649  1088  0022               	movlb	2	; select bank2
 12650  1089  00E3               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
 12651  108A  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
 12652  108B  00E2               	movwf	_EUSART_FramingErrorHandler^(0+256)
 12653  108C  0008               	return
 12654  108D                     __end_of_EUSART_SetFramingErrorHandler:	
 12655                           
 12656                           	psect	text41
 12657  1081                     __ptext41:	
 12658 ;; *************** function _EUSART_SetErrorHandler *****************
 12659 ;; Defined at:
 12660 ;;		line 174 in file "mcc_generated_files/eusart.c"
 12661 ;; Parameters:    Size  Location     Type
 12662 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 12663 ;;		 -> EUSART_DefaultErrorHandler(1), 
 12664 ;; Auto vars:     Size  Location     Type
 12665 ;;		None
 12666 ;; Return value:  Size  Location     Type
 12667 ;;                  1    wreg      void 
 12668 ;; Registers used:
 12669 ;;		wreg
 12670 ;; Tracked objects:
 12671 ;;		On entry : 0/0
 12672 ;;		On exit  : 0/0
 12673 ;;		Unchanged: 0/0
 12674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12675 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12678 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12679 ;;Total ram usage:        2 bytes
 12680 ;; Hardware stack levels used:    1
 12681 ;; This function calls:
 12682 ;;		Nothing
 12683 ;; This function is called by:
 12684 ;;		_EUSART_Initialize
 12685 ;; This function uses a non-reentrant model
 12686 ;;
 12687                           
 12688                           
 12689                           ;psect for function _EUSART_SetErrorHandler
 12690  1081                     _EUSART_SetErrorHandler:	
 12691                           
 12692                           ;mcc_generated_files/eusart.c: 175:     EUSART_ErrorHandler = interruptHandler;
 12693                           
 12694                           ;incstack = 0
 12695                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
 12696  1081  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
 12697  1082  0022               	movlb	2	; select bank2
 12698  1083  00DF               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
 12699  1084  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
 12700  1085  00DE               	movwf	_EUSART_ErrorHandler^(0+256)
 12701  1086  0008               	return
 12702  1087                     __end_of_EUSART_SetErrorHandler:	
 12703                           
 12704                           	psect	text42
 12705  10A8                     __ptext42:	
 12706 ;; *************** function _ADC_Initialize *****************
 12707 ;; Defined at:
 12708 ;;		line 67 in file "mcc_generated_files/adc.c"
 12709 ;; Parameters:    Size  Location     Type
 12710 ;;		None
 12711 ;; Auto vars:     Size  Location     Type
 12712 ;;		None
 12713 ;; Return value:  Size  Location     Type
 12714 ;;                  1    wreg      void 
 12715 ;; Registers used:
 12716 ;;		wreg, status,2
 12717 ;; Tracked objects:
 12718 ;;		On entry : 0/0
 12719 ;;		On exit  : 0/0
 12720 ;;		Unchanged: 0/0
 12721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12726 ;;Total ram usage:        0 bytes
 12727 ;; Hardware stack levels used:    1
 12728 ;; This function calls:
 12729 ;;		Nothing
 12730 ;; This function is called by:
 12731 ;;		_SYSTEM_Initialize
 12732 ;;		_main
 12733 ;; This function uses a non-reentrant model
 12734 ;;
 12735                           
 12736                           
 12737                           ;psect for function _ADC_Initialize
 12738  10A8                     _ADC_Initialize:	
 12739                           
 12740                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x80;
 12741                           
 12742                           ;incstack = 0
 12743                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 12744  10A8  3080               	movlw	128
 12745  10A9  0021               	movlb	1	; select bank1
 12746  10AA  009E               	movwf	30	;volatile
 12747                           
 12748                           ;mcc_generated_files/adc.c: 75:     ADCON2 = 0x00;
 12749  10AB  019F               	clrf	31	;volatile
 12750                           
 12751                           ;mcc_generated_files/adc.c: 78:     ADRESL = 0x00;
 12752  10AC  019B               	clrf	27	;volatile
 12753                           
 12754                           ;mcc_generated_files/adc.c: 81:     ADRESH = 0x00;
 12755  10AD  019C               	clrf	28	;volatile
 12756                           
 12757                           ;mcc_generated_files/adc.c: 84:     ADCON0 = 0x01;
 12758  10AE  3001               	movlw	1
 12759  10AF  009D               	movwf	29	;volatile
 12760  10B0  0008               	return
 12761  10B1                     __end_of_ADC_Initialize:	
 12762                           
 12763                           	psect	text43
 12764  112B                     __ptext43:	
 12765 ;; *************** function _PWM3_LoadDutyValue *****************
 12766 ;; Defined at:
 12767 ;;		line 74 in file "mcc_generated_files/pwm3.c"
 12768 ;; Parameters:    Size  Location     Type
 12769 ;;  dutyValue       2   11[COMMON] unsigned short 
 12770 ;; Auto vars:     Size  Location     Type
 12771 ;;		None
 12772 ;; Return value:  Size  Location     Type
 12773 ;;                  1    wreg      void 
 12774 ;; Registers used:
 12775 ;;		wreg, status,2, status,0
 12776 ;; Tracked objects:
 12777 ;;		On entry : 0/0
 12778 ;;		On exit  : 0/0
 12779 ;;		Unchanged: 0/0
 12780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12781 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12783 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12784 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12785 ;;Total ram usage:        4 bytes
 12786 ;; Hardware stack levels used:    1
 12787 ;; This function calls:
 12788 ;;		Nothing
 12789 ;; This function is called by:
 12790 ;;		_main
 12791 ;; This function uses a non-reentrant model
 12792 ;;
 12793                           
 12794                           
 12795                           ;psect for function _PWM3_LoadDutyValue
 12796  112B                     _PWM3_LoadDutyValue:	
 12797                           
 12798                           ;mcc_generated_files/pwm3.c: 74:  void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm3.c: 75:  {;mcc_generated_files/pwm3.c: 77:      PWM3DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 12799                           
 12800                           ;incstack = 0
 12801                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
 12802  112B  087C               	movf	PWM3_LoadDutyValue@dutyValue+1,w
 12803  112C  0020               	movlb	0	; select bank0
 12804  112D  00A1               	movwf	??_PWM3_LoadDutyValue+1
 12805  112E  087B               	movf	PWM3_LoadDutyValue@dutyValue,w
 12806  112F  00A0               	movwf	??_PWM3_LoadDutyValue
 12807  1130  36A1               	lsrf	??_PWM3_LoadDutyValue+1,f
 12808  1131  0CA0               	rrf	??_PWM3_LoadDutyValue,f
 12809  1132  36A1               	lsrf	??_PWM3_LoadDutyValue+1,f
 12810  1133  0CA0               	rrf	??_PWM3_LoadDutyValue,f
 12811  1134  0820               	movf	??_PWM3_LoadDutyValue,w
 12812  1135  002C               	movlb	12	; select bank12
 12813  1136  0098               	movwf	24	;volatile
 12814                           
 12815                           ;mcc_generated_files/pwm3.c: 80:      PWM3DCL = (dutyValue & 0x0003)<<6;
 12816  1137  087B               	movf	PWM3_LoadDutyValue@dutyValue,w
 12817  1138  3903               	andlw	3
 12818  1139  0020               	movlb	0	; select bank0
 12819  113A  00A0               	movwf	??_PWM3_LoadDutyValue
 12820  113B  3005               	movlw	5
 12821  113C                     u5505:	
 12822  113C  35A0               	lslf	??_PWM3_LoadDutyValue,f
 12823  113D  3EFF               	addlw	-1
 12824  113E  1D03               	skipz
 12825  113F  293C               	goto	u5505
 12826  1140  3520               	lslf	??_PWM3_LoadDutyValue,w
 12827  1141  002C               	movlb	12	; select bank12
 12828  1142  0097               	movwf	23	;volatile
 12829  1143  0008               	return
 12830  1144                     __end_of_PWM3_LoadDutyValue:	
 12831                           
 12832                           	psect	text44
 12833  1073                     __ptext44:	
 12834 ;; *************** function _ADC_StartConversion *****************
 12835 ;; Defined at:
 12836 ;;		line 96 in file "mcc_generated_files/adc.c"
 12837 ;; Parameters:    Size  Location     Type
 12838 ;;		None
 12839 ;; Auto vars:     Size  Location     Type
 12840 ;;		None
 12841 ;; Return value:  Size  Location     Type
 12842 ;;                  1    wreg      void 
 12843 ;; Registers used:
 12844 ;;		None
 12845 ;; Tracked objects:
 12846 ;;		On entry : 0/0
 12847 ;;		On exit  : 0/0
 12848 ;;		Unchanged: 0/0
 12849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12854 ;;Total ram usage:        0 bytes
 12855 ;; Hardware stack levels used:    1
 12856 ;; This function calls:
 12857 ;;		Nothing
 12858 ;; This function is called by:
 12859 ;;		_main
 12860 ;; This function uses a non-reentrant model
 12861 ;;
 12862                           
 12863                           
 12864                           ;psect for function _ADC_StartConversion
 12865  1073                     _ADC_StartConversion:	
 12866                           
 12867                           ;mcc_generated_files/adc.c: 99:     ADCON0bits.GO_nDONE = 1;
 12868                           
 12869                           ;incstack = 0
 12870                           ; Regs used in _ADC_StartConversion: []
 12871  1073  0021               	movlb	1	; select bank1
 12872  1074  149D               	bsf	29,1	;volatile
 12873  1075  0008               	return
 12874  1076                     __end_of_ADC_StartConversion:	
 12875                           
 12876                           	psect	text45
 12877  0800                     __ptext45:	
 12878 ;; *************** function _ADC_SelectChannel *****************
 12879 ;; Defined at:
 12880 ;;		line 88 in file "mcc_generated_files/adc.c"
 12881 ;; Parameters:    Size  Location     Type
 12882 ;;  channel         1    wreg     enum E9635
 12883 ;; Auto vars:     Size  Location     Type
 12884 ;;  channel         1    1[COMMON] enum E9635
 12885 ;; Return value:  Size  Location     Type
 12886 ;;                  1    wreg      void 
 12887 ;; Registers used:
 12888 ;;		wreg, status,2, status,0
 12889 ;; Tracked objects:
 12890 ;;		On entry : 0/0
 12891 ;;		On exit  : 0/0
 12892 ;;		Unchanged: 0/0
 12893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12895 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12896 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12897 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12898 ;;Total ram usage:        2 bytes
 12899 ;; Hardware stack levels used:    1
 12900 ;; This function calls:
 12901 ;;		Nothing
 12902 ;; This function is called by:
 12903 ;;		_main
 12904 ;; This function uses a non-reentrant model
 12905 ;;
 12906                           
 12907                           
 12908                           ;psect for function _ADC_SelectChannel
 12909  0800                     _ADC_SelectChannel:	
 12910                           
 12911                           ;incstack = 0
 12912                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
 12913                           ;ADC_SelectChannel@channel stored from wreg
 12914  0800  00F1               	movwf	ADC_SelectChannel@channel
 12915                           
 12916                           ;mcc_generated_files/adc.c: 88: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 89: {;mcc_generated_files/adc.c: 91:     ADCON0bits.CHS = channel;
 12917  0801  0871               	movf	ADC_SelectChannel@channel,w
 12918  0802  00F0               	movwf	??_ADC_SelectChannel
 12919  0803  0DF0               	rlf	??_ADC_SelectChannel,f
 12920  0804  0DF0               	rlf	??_ADC_SelectChannel,f
 12921  0805  0021               	movlb	1	; select bank1
 12922  0806  081D               	movf	29,w	;volatile
 12923  0807  0670               	xorwf	??_ADC_SelectChannel,w
 12924  0808  3983               	andlw	-125
 12925  0809  0670               	xorwf	??_ADC_SelectChannel,w
 12926  080A  009D               	movwf	29	;volatile
 12927                           
 12928                           ;mcc_generated_files/adc.c: 93:     ADCON0bits.ADON = 1;
 12929  080B  141D               	bsf	29,0	;volatile
 12930  080C  0008               	return
 12931  080D                     __end_of_ADC_SelectChannel:	
 12932                           
 12933                           	psect	text46
 12934  107B                     __ptext46:	
 12935 ;; *************** function _ADC_GetConversionResult *****************
 12936 ;; Defined at:
 12937 ;;		line 109 in file "mcc_generated_files/adc.c"
 12938 ;; Parameters:    Size  Location     Type
 12939 ;;		None
 12940 ;; Auto vars:     Size  Location     Type
 12941 ;;		None
 12942 ;; Return value:  Size  Location     Type
 12943 ;;                  2    0[COMMON] unsigned short 
 12944 ;; Registers used:
 12945 ;;		wreg
 12946 ;; Tracked objects:
 12947 ;;		On entry : 0/0
 12948 ;;		On exit  : 0/0
 12949 ;;		Unchanged: 0/0
 12950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12951 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12954 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12955 ;;Total ram usage:        2 bytes
 12956 ;; Hardware stack levels used:    1
 12957 ;; This function calls:
 12958 ;;		Nothing
 12959 ;; This function is called by:
 12960 ;;		_main
 12961 ;; This function uses a non-reentrant model
 12962 ;;
 12963                           
 12964                           
 12965                           ;psect for function _ADC_GetConversionResult
 12966  107B                     _ADC_GetConversionResult:	
 12967                           
 12968                           ;mcc_generated_files/adc.c: 112:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 12969                           
 12970                           ;incstack = 0
 12971                           ; Regs used in _ADC_GetConversionResult: [wreg]
 12972  107B  0021               	movlb	1	; select bank1
 12973  107C  081C               	movf	28,w	;volatile
 12974  107D  00F1               	movwf	?_ADC_GetConversionResult+1
 12975  107E  081B               	movf	27,w	;volatile
 12976  107F  00F0               	movwf	?_ADC_GetConversionResult
 12977  1080  0008               	return
 12978  1081                     __end_of_ADC_GetConversionResult:	
 12979  007E                     btemp	set	126	;btemp
 12980  007E                     wtemp0	set	126


Data Sizes:
    Strings     25
    Constant    0
    Data        0
    BSS         99
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     43      68
    BANK3            80      0      80
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK1[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK1[3]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK2[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1182_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK2[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _vfpfcnvrt->_tolower
    _efgtoa->_tolower
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _floorf->___fldiv
    ___fladd->___xxtofl
    ___flmul->___fldiv
    _atoi->___wmul
    _atoi->_isdigit
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _PWM3_LoadDutyValue->___fltol

Critical Paths under _main in BANK0

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flsub
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___fldiv
    ___flge->___flmul

Critical Paths under _main in BANK1

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK2

    _main->_printf
    _printf->_vfprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                31    31      0   39253
                                             12 BANK2     31    31      0
            _ADC_GetConversionResult
                     _ADC_Initialize
                  _ADC_SelectChannel
                _ADC_StartConversion
                 _PWM3_LoadDutyValue
                  _SYSTEM_Initialize
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   28919
                                             79 BANK1      1     1      0
                                              3 BANK2      9     3      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3   28783
                                             78 BANK0      2     2      0
                                             76 BANK1      3     0      3
                                              0 BANK2      3     3      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    43      2   28437
                                             76 BANK0      2     0      2
                                             57 BANK1     19    19      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     5      4     410
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              66    61      5   23296
                                             67 BANK0      9     4      5
                                              0 BANK1     57    57      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMMON     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     6      2     641
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2914
                                              4 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1127
                                             10 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     812
                                              2 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             13 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       16    12      4     287
                                              0 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             11     7      4     457
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3245
                                             59 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    2896
                                             39 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    3329
                                             13 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             39 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    2489
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1085
                                              6 COMMON     6     4      2
                                              0 BANK0      9     9      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM3_LoadDutyValue                                   4     2      2     120
                                             11 COMMON     2     0      2
                                              0 BANK0      2     2      0
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_SelectChannel                                    2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversionResult                              2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversionResult
   _ADC_Initialize
   _ADC_SelectChannel
   _ADC_StartConversion
   _PWM3_LoadDutyValue
     ___fltol (ARG)
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _TMR2_Initialize
   ___fladd
     ___fldiv (ARG)
     ___flmul (ARG)
       __Umul8_16
       ___fldiv (ARG)
     ___xxtofl (ARG)
   ___fldiv
   ___flmul
     __Umul8_16
     ___fldiv (ARG)
   ___fltol
   ___xxtofl
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
             ___xxtofl (ARG)
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
           ___flmul
             __Umul8_16
             ___fldiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _EUSART_Write
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     2B      44       9       85.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     142      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     142      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Nov 09 15:27:10 2022

                                 ___fldiv@aexp 002C                                   ___fldiv@bexp 002B  
                                 ___fldiv@sign 0024                                    __CFG_CP$OFF 0000  
                                 ___awdiv@sign 0076                            ___wmul@multiplicand 0072  
                          __Umul8_16@word_mpld 0076                                            l254 10A1  
                                          l430 13FB                                            l426 13CF  
                                          l429 13EF                                            l464 03BE  
                                          l465 03AB                                            l475 03FC  
                                          l900 0B60                                            l557 114C  
                                          l493 05B0                                            l726 133B  
                                          l727 1355                                            l735 1550  
                                          l914 0060                                            l738 159E  
                                          l862 0A66                                            l758 14A1  
                                          l935 0167                                            l936 017F  
                                          l864 0A49                                            l938 018C  
                                          l858 09D3                                            l892 0B48  
                                          l966 0D87                                            l879 0AE9  
                                          l992 15CE                                            l998 1604  
                                          _PR2 001B                                    main@Umidade 0133  
                                          _pad 13B7                 ?_EUSART_SetFramingErrorHandler 0070  
                                 ___awmod@sign 0076                                _TMR2_Initialize 10C5  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                                 __CFG_IESO$ON 0000                                   ___flmul@aexp 003F  
                                 ___flmul@bexp 0040                                   ___flmul@sign 003A  
                                 ___flmul@temp 0045                                   ___flmul@prod 0041  
                                 __CFG_LVP$OFF 0000                                   __CFG_ZCD$OFF 0000  
                                 ___fltol@exp1 007A                                           l1005 1618  
                                         l1006 1622                                           l1036 0876  
                                         l1147 118B                                           l1059 097D  
                                         l3005 13C5                                           l3031 1508  
                                         l3015 13D1                                           l3121 141C  
                                         l3041 1530                                           l3009 13CD  
                                         l3131 1424                                           l3115 1411  
                                         l3211 1584                                           l3035 150D  
                                         l4003 0F9F                                           l3133 1430  
                                         l4013 0FCC                                           l3143 144B  
                                         l3207 156A                                           l3231 1461  
                                         l3047 11C2                                           l3305 0055  
                                         l4009 0FC6                                           l3147 1453  
                                         l3139 1442                                           l3171 12F3  
                                         l3163 12ED                                           l3251 148F  
                                         l3235 146A                                           l3083 0960  
                                         l4019 0FD9                                           l4107 127F  
                                         l3173 12FF                                           l3181 1314  
                                         l3405 0188                                           l3325 008B  
                                         l3309 0058                                           l3261 14AE  
                                         l3253 149D                                           l3077 0936  
                                         l4109 129F                                           l4151 15C6  
                                         l3095 1146                                           l3159 12E6  
                                         l3351 00EB                                           l3319 007F  
                                         l3079 0947                                           l4223 1667  
                                         l4161 15E1                                           l3185 131C  
                                         l3177 130B                                           l3345 00D2  
                                         l3353 00B4                                           l3425 0B82  
                                         l4217 1664                                           l4171 1616  
                                         l4163 15F1                                           l3371 010D  
                                         l3355 00F0                                           l3291 003C  
                                         l3515 0D1D                                           l3507 0CEF  
                                         l3443 0BA5                                           l3427 0B84  
                                         l2811 09A3                                           l3603 0239  
                                         l3611 025E                                           l4173 1609  
                                         l4157 15DD                                           l3381 0126  
                                         l3285 0031                                           l3197 1367  
                                         l3533 0D5D                                           l3509 0D06  
                                         l3445 0BA7                                           l3429 0B8C  
                                         l2813 09AB                                           l3621 0291  
                                         l3391 014F                                           l3519 0D1F  
                                         l3455 0BBD                                           l3447 0BAF  
                                         l2831 09C8                                           l2807 09A0  
                                         l4185 163D                                           l3377 0124  
                                         l3369 00F6                                           l3289 0034  
                                         l3529 0D48                                           l2905 0A86  
                                         l2841 09DD                                           l3713 0549  
                                         l3641 0307                                           l3539 0D74  
                                         l2907 0A88                                           l2915 0A97  
                                         l2835 09CB                                           l2763 12B0  
                                         l3707 0437                                           l3643 0341  
                                         l2941 0B08                                           l2933 0AFB  
                                         l2925 0AE1                                           l3805 0727  
                                         l3741 0609                                           l3709 04F6  
                                         l3661 03C1                                           l3637 02D7  
                                         l3629 02B6                                           l3581 01EC  
                                         l3573 01DA                                           ?_pad 0024  
                                         l3559 1173                                           l4279 084F  
                                         l2871 0A19                                           l2767 12D3  
                                         l2783 1118                                           l3807 072F  
                                         l3727 05AE                                           l3719 056A  
                                         l3647 0362                                           l2881 0A53  
                                         l2777 121E                                           l2785 1124  
                                         l3817 072B                                           l3761 0628  
                                         l3729 05B7                                           l3649 0387  
                                         l3585 01F3                                           l3593 0206  
                                         l2955 0B1A                                           l2947 0B0F  
                                         l3843 07B8                                           l3827 077E  
                                         l3819 0766                                           l3851 07D7  
                                         l3763 0646                                           l3683 0409  
                                         l3675 03F6                                           l3667 03C9  
                                         l3659 03B8                                           l3923 13A9  
                                         l3915 13A3                                           l2981 0B5C  
                                         l2949 0B11                                           l3781 06EC  
                                         l3693 041D                                           l3685 040D  
                                         l3917 137F                                           l2991 1185  
                                         l2959 0B1C                                           l2879 0A51  
                                         l3881 087A                                           l3873 083E  
                                         l2977 0B58                                           l2897 0A74  
                                         l2889 0A61                                           l3769 065C  
                                         l3777 06CE                                           l3697 0425  
                                         l3953 0E05                                           l3891 08A9  
                                         l3875 0843                                           l3867 082E  
                                         l3859 0812                                           l3955 0E17  
                                         l3963 0E4A                                           l3877 0857  
                                         l3789 0705                                           l3973 0EAD  
                                         l3957 0E21                                           l3985 0EFF  
                                         l3995 0F61                                           STR_1 1800  
                                         STR_2 1806                                           STR_3 180E  
                                         STR_6 180A                                           STR_7 1812  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           u3050 0A38  
                                         u3060 0A39                                           u3045 0A2D  
                                         u3215 0AFC                                           _T2PR 001B  
                                         u3315 0B33                                           u4035 1473  
                                         u3173 0AA9                                           u3165 0A8C  
                                         u3510 1528                                           u4215 00BC  
                                         u3095 0A57                                           u3520 1529  
                                         u3600 08FD                                           u4305 0102  
                                         u4225 00C3                                           u4065 1490  
                                         u3505 151A                                           u5105 06EA  
                                         u3435 13DB                                           u3540 1208  
                                         u4245 00CC                                           u3605 08F9  
                                         u3550 1209                                           u4255 00E0  
                                         u4095 14A5                                           u3455 14DE  
                                         u5240 088E                                           u4505 0C62  
                                         u3625 0922                                           u2905 12D1  
                                         u5250 088F                                           u2930 110B  
                                         u3715 114D                                           u3395 118C  
                                         u4515 0CB8                                           u3475 14F7  
                                         u2940 110C                                           u5180 07A8  
                                         u3725 1152                                           u3805 143B  
                                         u4285 00F9                                           u4525 0CCF  
                                         u3645 0950                                           u5165 0771  
                                         u5190 07A9                                           u5430 0F42  
                                         u3815 1443                                           u4375 013D  
                                         u4535 0CDE                                           u3575 08CF  
                                         u5095 06DC                                           u3680 10F4  
                                         u5440 0F43                                           u5360 0E3F  
                                         u5505 113C                                           u3905 130C  
                                         u4385 0158                                           u4545 0CF2  
                                         u3665 0969                                           u3585 08EA  
                                         u3690 10F5                                           u5370 0E40  
                                         u4395 0171                                           u4635 0D36  
                                         u4740 0227                                           u4645 0D51  
                                         u4565 0CFB                                           u4750 0228  
                                         u3775 1427                                           u4655 0D67  
                                         u4495 0C33                                           u5625 162A  
                                         u5545 15EA                                           u4905 03F2  
                                         u3795 1431                                           u3875 12F6  
                                         u3955 1363                                           u4780 027F  
                                         u5565 15FE                                           u4790 0280  
                                         u3895 1305                                           u5655 16B5  
                                         u5585 1610                                           u4865 03B6  
                                         u5665 1768                                           u4975 0445  
                                         u4895 03D8                                           _TMR2 001A  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _WPUC 020E                                   __CFG_WRT$OFF 0000  
                                __CFG_FCMEN$ON 0000                                           _dbuf 01A0  
                                         _atoi 080D                                           _main 1646  
                                         _prec 0157                                           _nout 0153  
                                         pad@i 0028                                           pad@p 0025  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         pad@w 002A                                           btemp 007E  
                                __CFG_BOREN$ON 0000                                  ___fpclassifyf 14BD  
                                         start 0002                                ___fldiv@new_exp 0025  
                                 _tolower$1243 007C                                  __CFG_MCLRE$ON 0000  
                                        ??_pad 0027                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 0007                  __end_of_OSCILLATOR_Initialize 10A0  
                                ___fltol@sign1 0079                                          ?_atoi 0076  
                              __end_of___fladd 0B68                                          ?_main 0070  
                              __end_of___fldiv 0191                                __end_of___awdiv 1458  
                              __end_of___flneg 10BA                                          STR_10 1816  
                                        STR_12 1816                                  __CFG_WDTE$OFF 0000  
                              __end_of___awmod 1321                                __end_of___flmul 0D94  
                              __end_of___flsub 11B9                                __end_of___fltol 14BD  
                              ___awdiv@divisor 0070                                          _T2CON 001C  
                                        _T2HLT 001D                                          _T2TMR 001A  
                                        _T2RST 001F                                ___awdiv@counter 0075  
                                 vfpfcnvrt@fmt 006C                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _RXPPS 0E24               __size_of_ADC_GetConversionResult 0006  
                                        _flags 0159                                          _fputc 12A7  
                                        _fputs 121A                                __end_of_isdigit 10FC  
                                        atoi@n 0027                                          pad@fp 002C  
                                        atoi@s 0076                                          _width 0155  
                                        _putch 1076                                          main@i 0147  
                                        main@j 0149                                          main@x 012F  
                                        main@y 0137                                          main@z 013B  
                              __end_of_isspace 117B                        __end_of_PWM3_Initialize 10C5  
                              __end_of_isupper 1113                                          status 0003  
                                        wtemp0 007E                                 ?___fpclassifyf 0070  
                              __end_of_tolower 121A                                __end_of_strncmp 13B7  
                              __initialization 07EE                                   __end_of_atoi 08AE  
                                 __end_of_main 1800                                 ??_EUSART_Write 0070  
                      __end_of_TMR2_Initialize 10D0                                 __CFG_LPBOR$OFF 0000  
                                       ??_atoi 0078                                         ??_main 012C  
                               __CFG_PLLEN$OFF 0000              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 009D                                         _ADCON1 009E  
                                       _ADCON2 009F                     _EUSART_OverrunErrorHandler 0160  
                                       ?_fputc 0072                                         ?_fputs 007A  
                                       _ADRESH 009C                                         _ADRESL 009B  
                             ___awdiv@dividend 0072                                         _ANSELA 018C  
                                       ?_putch 0070                                         _ANSELB 018D  
                                       _ANSELC 018E                                         _BORCON 0116  
                                       _RC1REG 0199                                         _RC1STA 019D  
                                       _RB6PPS 0E9E                                         _RB7PPS 0E9F  
                                       _ODCONA 028C                                         _ODCONB 028D  
                                       _ODCONC 028E                                         _INLVLA 038C  
                                       _INLVLB 038D                                         _INLVLC 038E  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _TX1REG 019A  
                                       _TX1STA 019E                               __end_of___xxtofl 1646  
                               __CFG_PWRTE$OFF 0000                                   vfprintf@cfmt 0121  
                                       ___flge 1535                                         ___fleq 1321  
                  __size_of_PWM3_LoadDutyValue 0019                                      ??___fladd 004F  
                                       ___wmul 1144                                      ??___fldiv 0078  
                                    ??___awdiv 0074                                      ??___flneg 0074  
                               __CFG_STVREN$ON 0000                                      ??___awmod 0074  
                                    ??___flmul 0035                                      ??___flsub 007E  
                                    ??___fltol 0074                                         _efgtoa 0191  
                                       _floorf 08AE                               ___awdiv@quotient 0077  
                              ___awmod@divisor 0070                                ___awmod@counter 0075  
                                       _printf 10D0                                         pad@buf 0024  
                                       _strcpy 11B9                                         _strlen 1113  
                                       fputc@c 0072                                         fputs@c 0020  
                                       fputs@i 0021                                         fputs@s 0023  
                                    ??_isdigit 0072                             __size_of__Umul8_16 001F  
                              ___fpclassifyf@e 0020                                ___fpclassifyf@u 0022  
                              ___fpclassifyf@x 0070                                      ??_isspace 0072  
                                    ??_isupper 0072                               __end_of_vfprintf 12A7  
                                    ??_tolower 0078                                      ??_strncmp 0074  
                                   ___flge@ff1 0047                                     ___flge@ff2 004B  
                              ??___fpclassifyf 0074                               ?_PWM3_Initialize 0070  
                                 ___xxtofl@arg 007A                                   ___xxtofl@exp 0079  
                            _SYSTEM_Initialize 0005                                   ___xxtofl@val 0070  
                                   ___fleq@ff1 0070                                     ___fleq@ff2 0074  
                      __end_of__initialization 07FD                                     ___flneg@f1 0070  
                           ?_SYSTEM_Initialize 0070                                     ___fltol@f1 0070  
                 __size_of_ADC_StartConversion 0003                                 __pcstackCOMMON 0070  
                          ??_SYSTEM_Initialize 0072                                  __end_of_fputc 12DC  
                                __end_of_fputs 1240                                  __end_of_putch 107B  
                             ?_TMR2_Initialize 0070                        _ADC_GetConversionResult 107B  
                               _OPTION_REGbits 0095                ??_EUSART_SetOverrunErrorHandler 0072  
                                      ??_fputc 0075                      __end_of_SYSTEM_Initialize 0017  
                                      ??_fputs 007B                                        ??_putch 0071  
                                   __pbssBANK2 014B                                     __pbssBANK3 01A0  
                         __end_of_EUSART_Write 10A8                              __end_of__Umul8_16 119A  
                                   _efgtoa$800 00A6                                     _efgtoa$810 00AC  
                                   _efgtoa$811 00AE                                     _efgtoa$805 00A8  
                                   _efgtoa$809 00AA                                     _efgtoa$799 00A4  
                                   __pmaintext 1646                                        ?___flge 0047  
                                      ?___fleq 0070                                        ?___wmul 0070  
                              __CFG_PPS1WAY$ON 0000                                        ?_efgtoa 0063  
                                      ?_floorf 002D                                        ?_printf 0123  
                      __size_of_ADC_Initialize 0009                                        ?_strcpy 0070  
                                      ?_strlen 0070                                __CFG_WDTCCS$SWC 0000  
                                    ?___xxtofl 0070                             __size_of_vfpfcnvrt 026C  
                                      _OSCTUNE 0098                                        _PWM3DCH 0618  
                                      _PWM3DCL 0617                                        _PWM3CON 0619  
                                      _SLRCONA 030C                                        _SLRCONB 030D  
                                      _SLRCONC 030E                       ??_EUSART_SetErrorHandler 0072  
                         _ADC_InterruptHandler 015B                                __size_of___flge 007C  
                              __size_of___fleq 0048                                        ___fladd 0986  
                                      ___fldiv 0017                                        ___awdiv 1407  
                                      ___flneg 10B1                                        ___awmod 12DC  
                                      ___flmul 0B68                                        ___flsub 119A  
                                      ___fltol 1458                                __size_of___wmul 001B  
                                    ?_vfprintf 00EC                                __size_of_efgtoa 065D  
                    ??_ADC_GetConversionResult 0072                                __size_of_floorf 00D8  
                                      __ptext1 10D0                                        __ptext2 1273  
                                      __ptext3 0D94                                        __ptext4 1369  
                                      __ptext5 0191                                        __ptext6 11F9  
                                      __ptext7 10FC                                        __ptext8 11B9  
                                      __ptext9 13B7                                __size_of_printf 0015  
                              __size_of_strcpy 001F                                __size_of_strlen 0018  
                        _OSCILLATOR_Initialize 1099                                      _T2CONbits 001C  
                                 __size_of_pad 0050                                        _isdigit 10E5  
                                   ??___xxtofl 0074                               ___awmod@dividend 0072  
                     ??_PIN_MANAGER_Initialize 0070                                        _isspace 115F  
                                    _T2HLTbits 001D                                        _isupper 10FC  
                                      efgtoa@c 0067                                        efgtoa@d 00B8  
                                      efgtoa@e 00D1                                        efgtoa@f 0063  
                                      efgtoa@g 00CD                                        efgtoa@h 00C3  
                                      efgtoa@i 00CB                                        efgtoa@l 00C7  
                                      efgtoa@m 00B4                                        efgtoa@n 00D3  
                                      efgtoa@p 00BC                                        efgtoa@t 00B0  
                                      efgtoa@u 00D5                                        efgtoa@w 00C0  
                                      atoi@neg 0020                     __size_of_SYSTEM_Initialize 0012  
                                      _tolower 11F9                                        clrloop0 1094  
                                      _strncmp 1369                           end_of_initialization 07FD  
                                      floorf@e 003B                                      _T2RSTbits 001F  
                                      floorf@m 0037                                        floorf@u 003D  
                                      floorf@x 002D          __end_of_EUSART_SetOverrunErrorHandler 1093  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 108D  
                                      fputc@fp 0074                                        fputs@fp 007A  
                            _EUSART_Initialize 11D8                             ?_EUSART_Initialize 0070  
                            __end_of_vfpfcnvrt 1000                                     efgtoa@mode 00C2  
                                   efgtoa@sign 00BA                                     ??_vfprintf 006E  
                                      strcpy@d 0076                                        strlen@a 0073  
                                      strcpy@s 0074                                        strlen@s 0074  
                          ??_EUSART_Initialize 0072                                    ___fladd@grs 005A  
                             __CFG_FOSC$INTOSC 0000                                  ___xxtofl@sign 0078  
                        __size_of_EUSART_Write 0008                            _ADC_StartConversion 1073  
                                  ___fldiv@grs 0027                                    ___fldiv@rem 0020  
              __size_of_EUSART_SetErrorHandler 0006                                    ___flmul@grs 003B  
                    __end_of_EUSART_Initialize 11F9                     __end_of_PWM3_LoadDutyValue 1144  
                         ?_ADC_StartConversion 0070                                 __end_of___flge 15B1  
                               __end_of___fleq 1369                     _EUSART_DefaultErrorHandler 0000  
                                  vfpfcnvrt@ap 006D                                    vfpfcnvrt@ct 00E7  
                                  vfpfcnvrt@fp 00EB                                 __end_of___wmul 115F  
                               __end_of_efgtoa 07EE                                   _EUSART_Write 10A0  
                               _ADC_Initialize 10A8                                 __end_of_floorf 0986  
                       ?_OSCILLATOR_Initialize 0070                                     floorf@F524 014B  
                               __end_of_printf 10E5                                 __end_of_strcpy 11D8  
                               __end_of_strlen 112B                            start_initialization 07EE  
              __size_of_PIN_MANAGER_Initialize 0033                                    __end_of_pad 1407  
                                  putch@txData 0071                          __end_of___fpclassifyf 1535  
               ?_EUSART_SetOverrunErrorHandler 0070                          ??_ADC_StartConversion 0070  
                     __size_of_PWM3_Initialize 000B                                    vfprintf@fmt 00EC  
                   _EUSART_FramingErrorHandler 0162                                       ??___flge 004F  
                                     ??___fleq 0078                                       ??___wmul 0074  
                       _EUSART_SetErrorHandler 1081                                    _CCPTMRSbits 029E  
                                     ??_efgtoa 0068                         __end_of_ADC_Initialize 10B1  
                                    __Umul8_16 117B                                       ??_floorf 0031  
                                     ??_printf 00EF                                       ??_strcpy 0072  
                                     ??_strlen 0072                                      ___fladd@a 004B  
                                    ___fladd@b 0047                                      ___fldiv@a 0070  
                                    ___fldiv@b 0074                                      ___flmul@a 0031  
                                    ___flmul@b 002D                                      ___flsub@a 005B  
                                    ___flsub@b 005F                                      ___latbits 0002  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                                __pcstackBANK2 0120                       __size_of_TMR2_Initialize 000B  
                            __size_of___xxtofl 0095                     __size_of_EUSART_Initialize 0021  
                                    _atoi$1140 0024                                      _atoi$1138 0022  
                                    _atoi$1139 0026                                      __pnvBANK2 015E  
                       _PIN_MANAGER_Initialize 1240                              _ADC_SelectChannel 0800  
                                     ?___fladd 0047                                       ?___fldiv 0070  
                                     ?___awdiv 0070                                       ?___flneg 0070  
                                     ?___awmod 0070                                       ?___flmul 002D  
                                     ?___flsub 005B                                       ?___fltol 0070  
                                   ?__Umul8_16 0070                                ?_ADC_Initialize 0070  
                           ?_ADC_SelectChannel 0070                              __size_of_vfprintf 0034  
                                     _BAUD1CON 019F                                       ?_isdigit 0070  
                          ??_ADC_SelectChannel 0070                                       ?_isspace 0070  
                                     ?_isupper 0070                                       ?_tolower 0076  
                               __size_of_fputc 0035                                       _T2CLKCON 001E  
                               __size_of_fputs 0026                                       ?_strncmp 0070  
                               __size_of_putch 0005                                 ___wmul@product 0074  
       EUSART_SetErrorHandler@interruptHandler 0070                                      clear_ram0 1093  
                            _eusartRxLastError 015D                      __end_of_ADC_SelectChannel 080D  
                                     _PIR1bits 0010                ??_EUSART_SetFramingErrorHandler 0072  
                         __CFG_WDTCPS$WDTCPS1F 0000              _EUSART_DefaultOverrunErrorHandler 0000  
                                    _vfpfcnvrt 0D94                              ??_PWM3_Initialize 0070  
                                   _ADCON0bits 009D                              ___wmul@multiplier 0070  
                                    main@Soma2 0143                                      main@Sinal 012D  
                     ADC_SelectChannel@channel 0071                                   _isspace$1169 0074  
                                   vfpfcnvrt@c 00EA                                     vfpfcnvrt@f 00E3  
                            ??_TMR2_Initialize 0070                                     vfprintf@ap 00EE  
                                   vfprintf@fp 0120                       ?_ADC_GetConversionResult 0070  
                      ??_OSCILLATOR_Initialize 0070                                    ??__Umul8_16 0072  
                          _EUSART_ErrorHandler 015E                               __size_of___fladd 01E2  
                             __size_of___fldiv 017A                               __size_of___awdiv 0051  
                             __size_of___flneg 0009                               __size_of___awmod 0045  
                             __size_of___flmul 022C                               __size_of___flsub 001F  
                             __size_of___fltol 0065                                     ?_vfpfcnvrt 006C  
                           _PWM3_LoadDutyValue 112B                             ___fpclassifyf@F463 014F  
                                     ___xxtofl 15B1                               __size_of_isdigit 0017  
                             __size_of_isspace 001C                                       __ptext10 1113  
                                     __ptext11 121A                                       __ptext20 10B1  
                                     __ptext12 12A7                                       __ptext21 0B68  
                                     __ptext13 1076                                       __ptext30 10E5  
                                     __ptext22 117B                                       __ptext14 10A0  
                                     __ptext31 1144                                       __ptext23 1535  
                                     __ptext15 08AE                                       __ptext40 1087  
                                     __ptext32 15B1                                       __ptext24 1321  
                                     __ptext16 14BD                                       __ptext41 1081  
                                     __ptext33 0005                                       __ptext25 0017  
                                     __ptext17 1458                                       __ptext42 10A8  
                                     __ptext34 10C5                                       __ptext26 12DC  
                                     __ptext18 119A                                       __ptext43 112B  
                                     __ptext35 10BA                                       __ptext27 1407  
                                     __ptext19 0986                                       __ptext44 1073  
                                     __ptext36 1240                                       __ptext28 080D  
                                     __ptext45 0800                                       __ptext37 1099  
                                     __ptext29 115F                                       __ptext46 107B  
                                     __ptext38 11D8                                       __ptext39 108D  
                          ?_PWM3_LoadDutyValue 007B                               __size_of_isupper 0017  
                             __size_of_tolower 0021                                     strcpy@dest 0077  
                             __size_of_strncmp 004E                                  __size_of_atoi 00A1  
                                __size_of_main 01BA                           __CFG_WDTCWS$WDTCWSSW 0000  
                      ?_EUSART_SetErrorHandler 0070                     __size_of_ADC_SelectChannel 000D  
                                   _RC1STAbits 019D                                       efgtoa@fp 00BE  
                                     efgtoa@ne 00B6                                       efgtoa@pp 00B2  
                                     efgtoa@ou 00A0  EUSART_SetOverrunErrorHandler@interruptHandler 0070  
                         ??_PWM3_LoadDutyValue 0020                                       _vfprintf 1273  
                                     main@Soma 013F                                      printf@fmt 0123  
        __end_of_EUSART_SetFramingErrorHandler 108D         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 1087                                       isdigit@c 0070  
                  __end_of_ADC_StartConversion 1076                                       isspace@c 0070  
                      ?_PIN_MANAGER_Initialize 0070                __end_of_ADC_GetConversionResult 1081  
               __end_of_EUSART_SetErrorHandler 1087                              __CFG_CLKOUTEN$OFF 0000  
                                    strcpy@src 0070                                       isupper@c 0070  
                                    strncmp@_l 0075                                      strncmp@_r 0070  
                             ??_ADC_Initialize 0070                                    efgtoa@nmode 00BF  
                                     printf@ap 012B  EUSART_SetFramingErrorHandler@interruptHandler 0070  
                  PWM3_LoadDutyValue@dutyValue 007B                                    ??_vfpfcnvrt 00D9  
                                _vfpfcnvrt$825 00DF                                  _vfpfcnvrt$829 00E1  
                                __pstringtext1 1800                                  __pstringtext2 1806  
                                __pstringtext3 180A                                  __pstringtext4 180E  
                                __pstringtext5 1812                                  __pstringtext6 1816  
                                __pstringtext7 0000                         __Umul8_16@multiplicand 0070  
                                     tolower@c 0076                         __size_of___fpclassifyf 0078  
                                     strncmp@l 0078                                       strncmp@n 0072  
                                     strncmp@r 0076                                     _TX1STAbits 019E  
                                ___fladd@signs 0057                             EUSART_Write@txData 0070  
               __end_of_PIN_MANAGER_Initialize 1273                                   ___fladd@aexp 0058  
                                 ___fladd@bexp 0059                           __Umul8_16@multiplier 0078  
                              _PWM3_Initialize 10BA                              __Umul8_16@product 0074  
